

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat May 18 21:58:25 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     000C                     _PIR1bits	set	12
   168     0007                     _PORTCbits	set	7
   169     0012                     _T2CONbits	set	18
   170     000E                     _TMR1L	set	14
   171     000F                     _TMR1H	set	15
   172     0010                     _T1CONbits	set	16
   173     0001                     _TMR0	set	1
   174     000B                     _INTCONbits	set	11
   175     0087                     _TRISCbits	set	135
   176     0092                     _PR2	set	146
   177     008C                     _PIE1bits	set	140
   178     0081                     _OPTION_REG	set	129
   179                           
   180                           	psect	cinit
   181     0011                     start_initialization:	
   182                           ; #config settings
   183                           
   184     0011                     __initialization:
   185                           
   186                           ; Clear objects allocated to COMMON
   187     0011  01F0               	clrf	__pbssCOMMON& (0+127)
   188     0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   189     0013  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   190     0014                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     0014                     __end_of__initialization:
   194     0014  0183               	clrf	3
   195     0015  120A  118A  2818   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMMON
   198     0070                     __pbssCOMMON:
   199     0070                     _timer2Counter:
   200     0070                     	ds	1
   201     0071                     _timer1Counter:
   202     0071                     	ds	1
   203     0072                     _timer0Counter:
   204     0072                     	ds	1
   205                           
   206                           	psect	cstackCOMMON
   207     0073                     __pcstackCOMMON:
   208     0073                     ?_main:
   209     0073                     ?_timersISR:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0073                     ??_timersISR:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 1 bytes @ 0x0
   217     0073                     	ds	3
   218     0076                     ??_main:
   219                           
   220                           	psect	maintext
   221     0018                     __pmaintext:	
   222                           ; 1 bytes @ 0x3
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 20 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          0       0       0       0       0
   245 ;;      Totals:         0       0       0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels required when called: 1
   248 ;; This function calls:
   249 ;;		Nothing
   250 ;; This function is called by:
   251 ;;		Startup code after reset
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255     0018                     _main:	
   256                           ;psect for function _main
   257                           
   258     0018                     l593:	
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg+status,2+status,0]
   261                           
   262                           
   263                           ;main.c: 21:     TMR1H = 0x3D;
   264     0018  178B               	bsf	11,7	;volatile
   265                           
   266                           ;main.c: 22:     TMR1L = 0x0A;
   267     0019  170B               	bsf	11,6	;volatile
   268                           
   269                           ;main.c: 25:     PIE1bits.TMR2IE = 1;
   270     001A  168B               	bsf	11,5	;volatile
   271     001B                     l595:
   272                           
   273                           ;main.c: 26:     T2CONbits.TMR2ON = 1;
   274     001B  3007               	movlw	7
   275     001C  1683               	bsf	3,5	;RP0=1, select bank1
   276     001D  1303               	bcf	3,6	;RP1=0, select bank1
   277     001E  0081               	movwf	1	;volatile
   278                           
   279                           ;main.c: 27:     T2CONbits.TOUTPS0 = 1;
   280     001F  303B               	movlw	59
   281     0020  1283               	bcf	3,5	;RP0=0, select bank0
   282     0021  1303               	bcf	3,6	;RP1=0, select bank0
   283     0022  0081               	movwf	1	;volatile
   284     0023                     l597:
   285                           
   286                           ;main.c: 30:     T2CONbits.TOUTPS3 = 1;
   287     0023  1683               	bsf	3,5	;RP0=1, select bank1
   288     0024  1303               	bcf	3,6	;RP1=0, select bank1
   289     0025  140C               	bsf	12,0	;volatile
   290     0026                     l599:
   291                           
   292                           ;main.c: 31:     T2CONbits.T2CKPS1 = 1;
   293     0026  1283               	bcf	3,5	;RP0=0, select bank0
   294     0027  1303               	bcf	3,6	;RP1=0, select bank0
   295     0028  1410               	bsf	16,0	;volatile
   296     0029                     l601:
   297                           
   298                           ;main.c: 32:     PR2 = 252;
   299     0029  1610               	bsf	16,4	;volatile
   300     002A                     l603:
   301                           
   302                           ;main.c: 33: 
   303     002A  1690               	bsf	16,5	;volatile
   304     002B                     l605:
   305                           
   306                           ;main.c: 34:     TRISCbits.TRISC0 = 0;
   307     002B  1090               	bcf	16,1	;volatile
   308                           
   309                           ;main.c: 35:     TRISCbits.TRISC1 = 0;
   310     002C  303D               	movlw	61
   311     002D  008F               	movwf	15	;volatile
   312                           
   313                           ;main.c: 36:     TRISCbits.TRISC2 = 0;
   314     002E  300A               	movlw	10
   315     002F  008E               	movwf	14	;volatile
   316     0030                     l607:
   317                           
   318                           ;main.c: 39:     PORTCbits.RC2 = 0;
   319     0030  1683               	bsf	3,5	;RP0=1, select bank1
   320     0031  1303               	bcf	3,6	;RP1=0, select bank1
   321     0032  148C               	bsf	12,1	;volatile
   322     0033                     l609:
   323                           
   324                           ;main.c: 40: 
   325     0033  1283               	bcf	3,5	;RP0=0, select bank0
   326     0034  1303               	bcf	3,6	;RP1=0, select bank0
   327     0035  1512               	bsf	18,2	;volatile
   328     0036                     l611:
   329                           
   330                           ;main.c: 41:     while (1) {
   331     0036  1592               	bsf	18,3	;volatile
   332     0037                     l613:
   333                           
   334                           ;main.c: 42:         if (timer0Counter == 100) {
   335     0037  1612               	bsf	18,4	;volatile
   336     0038                     l615:
   337                           
   338                           ;main.c: 43:             PORTCbits.RC0 = ~PORTCbits.RC0;
   339     0038  1692               	bsf	18,5	;volatile
   340     0039                     l617:
   341                           
   342                           ;main.c: 44:             timer0Counter = 0;
   343     0039  1712               	bsf	18,6	;volatile
   344     003A                     l619:
   345                           
   346                           ;main.c: 45:         }
   347     003A  1492               	bsf	18,1	;volatile
   348                           
   349                           ;main.c: 46: 
   350     003B  30FC               	movlw	252
   351     003C  1683               	bsf	3,5	;RP0=1, select bank1
   352     003D  1303               	bcf	3,6	;RP1=0, select bank1
   353     003E  0092               	movwf	18	;volatile
   354     003F                     l621:
   355                           
   356                           ;main.c: 48:             PORTCbits.RC1 = ~PORTCbits.RC1;
   357     003F  1007               	bcf	7,0	;volatile
   358     0040                     l623:
   359                           
   360                           ;main.c: 49:             timer1Counter = 0;
   361     0040  1087               	bcf	7,1	;volatile
   362     0041                     l625:
   363                           
   364                           ;main.c: 50:         }
   365     0041  1107               	bcf	7,2	;volatile
   366     0042                     l627:
   367                           
   368                           ;main.c: 51: 
   369     0042  1283               	bcf	3,5	;RP0=0, select bank0
   370     0043  1303               	bcf	3,6	;RP1=0, select bank0
   371     0044  1007               	bcf	7,0	;volatile
   372     0045                     l629:
   373                           
   374                           ;main.c: 52:         if (timer2Counter == 100) {
   375     0045  1087               	bcf	7,1	;volatile
   376     0046                     l631:
   377                           
   378                           ;main.c: 53:             PORTCbits.RC2 = ~PORTCbits.RC2;
   379     0046  1107               	bcf	7,2	;volatile
   380     0047                     l633:
   381                           
   382                           ;main.c: 56:     }
   383     0047  3064               	movlw	100
   384     0048  0672               	xorwf	_timer0Counter,w
   385     0049  1D03               	btfss	3,2
   386     004A  284C               	goto	u11
   387     004B  284D               	goto	u10
   388     004C                     u11:
   389     004C  285D               	goto	l639
   390     004D                     u10:
   391     004D                     l635:
   392                           
   393                           ;main.c: 57: 
   394     004D  1003               	clrc
   395     004E  1283               	bcf	3,5	;RP0=0, select bank0
   396     004F  1303               	bcf	3,6	;RP1=0, select bank0
   397     0050  1C07               	btfss	7,0	;volatile
   398     0051  1403               	setc
   399     0052  1803               	btfsc	3,0
   400     0053  2855               	goto	u21
   401     0054  2859               	goto	u20
   402     0055                     u21:
   403     0055  1283               	bcf	3,5	;RP0=0, select bank0
   404     0056  1303               	bcf	3,6	;RP1=0, select bank0
   405     0057  1407               	bsf	7,0	;volatile
   406     0058  285C               	goto	u34
   407     0059                     u20:
   408     0059  1283               	bcf	3,5	;RP0=0, select bank0
   409     005A  1303               	bcf	3,6	;RP1=0, select bank0
   410     005B  1007               	bcf	7,0	;volatile
   411     005C                     u34:
   412     005C                     l637:
   413                           
   414                           ;main.c: 58:     return;
   415     005C  01F2               	clrf	_timer0Counter
   416     005D                     l639:
   417                           
   418                           ;main.c: 61: void __attribute__((picinterrupt(("")))) timersISR(void) {
   419     005D  300A               	movlw	10
   420     005E  0671               	xorwf	_timer1Counter,w
   421     005F  1D03               	btfss	3,2
   422     0060  2862               	goto	u41
   423     0061  2863               	goto	u40
   424     0062                     u41:
   425     0062  2873               	goto	l645
   426     0063                     u40:
   427     0063                     l641:
   428                           
   429                           ;main.c: 62: 
   430     0063  1003               	clrc
   431     0064  1283               	bcf	3,5	;RP0=0, select bank0
   432     0065  1303               	bcf	3,6	;RP1=0, select bank0
   433     0066  1C87               	btfss	7,1	;volatile
   434     0067  1403               	setc
   435     0068  1803               	btfsc	3,0
   436     0069  286B               	goto	u51
   437     006A  286F               	goto	u50
   438     006B                     u51:
   439     006B  1283               	bcf	3,5	;RP0=0, select bank0
   440     006C  1303               	bcf	3,6	;RP1=0, select bank0
   441     006D  1487               	bsf	7,1	;volatile
   442     006E  2872               	goto	u64
   443     006F                     u50:
   444     006F  1283               	bcf	3,5	;RP0=0, select bank0
   445     0070  1303               	bcf	3,6	;RP1=0, select bank0
   446     0071  1087               	bcf	7,1	;volatile
   447     0072                     u64:
   448     0072                     l643:
   449                           
   450                           ;main.c: 63:     if (INTCONbits.TMR0IF == 1) {
   451     0072  01F1               	clrf	_timer1Counter
   452     0073                     l645:
   453                           
   454                           ;main.c: 66:         TMR0 = 59;
   455     0073  3064               	movlw	100
   456     0074  0670               	xorwf	_timer2Counter,w
   457     0075  1D03               	btfss	3,2
   458     0076  2878               	goto	u71
   459     0077  2879               	goto	u70
   460     0078                     u71:
   461     0078  2847               	goto	l633
   462     0079                     u70:
   463     0079                     l647:
   464                           
   465                           ;main.c: 67:     }
   466     0079  1003               	clrc
   467     007A  1283               	bcf	3,5	;RP0=0, select bank0
   468     007B  1303               	bcf	3,6	;RP1=0, select bank0
   469     007C  1D07               	btfss	7,2	;volatile
   470     007D  1403               	setc
   471     007E  1803               	btfsc	3,0
   472     007F  2881               	goto	u81
   473     0080  2885               	goto	u80
   474     0081                     u81:
   475     0081  1283               	bcf	3,5	;RP0=0, select bank0
   476     0082  1303               	bcf	3,6	;RP1=0, select bank0
   477     0083  1507               	bsf	7,2	;volatile
   478     0084  2888               	goto	u94
   479     0085                     u80:
   480     0085  1283               	bcf	3,5	;RP0=0, select bank0
   481     0086  1303               	bcf	3,6	;RP1=0, select bank0
   482     0087  1107               	bcf	7,2	;volatile
   483     0088                     u94:
   484     0088                     l649:
   485                           
   486                           ;main.c: 68: 
   487     0088  01F0               	clrf	_timer2Counter
   488     0089  2847               	goto	l633
   489     008A  120A  118A  280E   	ljmp	start
   490     008D                     __end_of_main:
   491                           
   492                           	psect	text1
   493     008D                     __ptext1:	
   494 ;; *************** function _timersISR *****************
   495 ;; Defined at:
   496 ;;		line 75 in file "main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, status,2, status,0, btemp+1
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0
   512 ;;      Temps:          3       0       0       0       0
   513 ;;      Totals:         3       0       0       0       0
   514 ;;Total ram usage:        3 bytes
   515 ;; Hardware stack levels used: 1
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		Interrupt level 1
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523     008D                     _timersISR:	
   524                           ;psect for function _timersISR
   525                           
   526     008D                     i1l651:
   527                           
   528                           ;main.c: 77: 
   529     008D  1D0B               	btfss	11,2	;volatile
   530     008E  2890               	goto	u10_21
   531     008F  2891               	goto	u10_20
   532     0090                     u10_21:
   533     0090  289A               	goto	i1l659
   534     0091                     u10_20:
   535     0091                     i1l653:
   536                           
   537                           ;main.c: 78:     if (PIR1bits.TMR2IF == 1) {
   538     0091  3001               	movlw	1
   539     0092  00FF               	movwf	btemp+1
   540     0093  087F               	movf	btemp+1,w
   541     0094  07F2               	addwf	_timer0Counter,f
   542     0095                     i1l655:
   543                           
   544                           ;main.c: 79:         ++timer2Counter;
   545     0095  110B               	bcf	11,2	;volatile
   546     0096                     i1l657:
   547                           
   548                           ;main.c: 80:         PIR1bits.TMR2IF = 0;
   549     0096  303B               	movlw	59
   550     0097  1283               	bcf	3,5	;RP0=0, select bank0
   551     0098  1303               	bcf	3,6	;RP1=0, select bank0
   552     0099  0081               	movwf	1	;volatile
   553     009A                     i1l659:
   554     009A  1283               	bcf	3,5	;RP0=0, select bank0
   555     009B  1303               	bcf	3,6	;RP1=0, select bank0
   556     009C  1C0C               	btfss	12,0	;volatile
   557     009D  289F               	goto	u11_21
   558     009E  28A0               	goto	u11_20
   559     009F                     u11_21:
   560     009F  28A9               	goto	i1l669
   561     00A0                     u11_20:
   562     00A0                     i1l661:
   563     00A0  3001               	movlw	1
   564     00A1  00FF               	movwf	btemp+1
   565     00A2  087F               	movf	btemp+1,w
   566     00A3  07F1               	addwf	_timer1Counter,f
   567     00A4                     i1l663:
   568     00A4  100C               	bcf	12,0	;volatile
   569     00A5                     i1l665:
   570     00A5  303D               	movlw	61
   571     00A6  008F               	movwf	15	;volatile
   572     00A7                     i1l667:
   573     00A7  300A               	movlw	10
   574     00A8  008E               	movwf	14	;volatile
   575     00A9                     i1l669:
   576     00A9  1C8C               	btfss	12,1	;volatile
   577     00AA  28AC               	goto	u12_21
   578     00AB  28AD               	goto	u12_20
   579     00AC                     u12_21:
   580     00AC  28B6               	goto	i1l49
   581     00AD                     u12_20:
   582     00AD                     i1l671:
   583     00AD  3001               	movlw	1
   584     00AE  00FF               	movwf	btemp+1
   585     00AF  087F               	movf	btemp+1,w
   586     00B0  07F0               	addwf	_timer2Counter,f
   587     00B1                     i1l673:
   588     00B1  108C               	bcf	12,1	;volatile
   589     00B2                     i1l675:
   590     00B2  30FC               	movlw	252
   591     00B3  1683               	bsf	3,5	;RP0=1, select bank1
   592     00B4  1303               	bcf	3,6	;RP1=0, select bank1
   593     00B5  0092               	movwf	18	;volatile
   594     00B6                     i1l49:
   595     00B6  0875               	movf	??_timersISR+2,w
   596     00B7  00FF               	movwf	btemp+1
   597     00B8  0874               	movf	??_timersISR+1,w
   598     00B9  008A               	movwf	10
   599     00BA  0E73               	swapf	??_timersISR,w
   600     00BB  0083               	movwf	3
   601     00BC  0EFE               	swapf	btemp,f
   602     00BD  0E7E               	swapf	btemp,w
   603     00BE  0009               	retfie
   604     00BF                     __end_of_timersISR:
   605     007E                     btemp	set	126	;btemp
   606     007E                     wtemp0	set	126
   607                           
   608                           	psect	intentry
   609     0004                     __pintentry:	
   610                           ;incstack = 0
   611                           ; Regs used in _timersISR: [wreg+status,2+status,0+btemp+1]
   612                           
   613     0004                     interrupt_function:
   614     007E                     saved_w	set	btemp
   615     0004  00FE               	movwf	btemp
   616     0005  0E03               	swapf	3,w
   617     0006  00F3               	movwf	??_timersISR
   618     0007  080A               	movf	10,w
   619     0008  00F4               	movwf	??_timersISR+1
   620     0009  087F               	movf	btemp+1,w
   621     000A  00F5               	movwf	??_timersISR+2
   622     000B  120A  118A  288D   	ljmp	_timersISR
   623                           
   624                           	psect	config
   625                           
   626                           ;Config register CONFIG @ 0x2007
   627                           ;	Oscillator Selection bits
   628                           ;	FOSC = HS, HS oscillator
   629                           ;	Watchdog Timer Enable bit
   630                           ;	WDTE = OFF, WDT disabled
   631                           ;	Power-up Timer Enable bit
   632                           ;	PWRTE = OFF, PWRT disabled
   633                           ;	Brown-out Reset Enable bit
   634                           ;	BOREN = OFF, BOR disabled
   635                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   636                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   637                           ;	Data EEPROM Memory Code Protection bit
   638                           ;	CPD = OFF, Data EEPROM code protection off
   639                           ;	Flash Program Memory Write Enable bits
   640                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   641                           ;	In-Circuit Debugger Mode bit
   642                           ;	DEBUG = 0x1, unprogrammed default
   643                           ;	Flash Program Memory Code Protection bit
   644                           ;	CP = OFF, Code protection off
   645     2007                     	org	8199
   646     2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _timersISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timersISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timersISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timersISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timersISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _timersISR                                            3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _timersISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat May 18 21:58:25 2024

                     u10 004D                       u11 004C                       u20 0059  
                     u21 0055                       u40 0063                       u41 0062  
                     u50 006F                       u34 005C                       u51 006B  
                     u70 0079                       u71 0078                       u80 0085  
                     u64 0072                       u81 0081                       u94 0088  
                    l601 0029                      l611 0036                      l603 002A  
                    l621 003F                      l613 0037                      l605 002B  
                    l631 0046                      l623 0040                      l615 0038  
                    l607 0030                      l641 0063                      l633 0047  
                    l625 0041                      l617 0039                      l609 0033  
                    l643 0072                      l635 004D                      l627 0042  
                    l619 003A                      l645 0073                      l637 005C  
                    l629 0045                      l647 0079                      l639 005D  
                    l649 0088                      l593 0018                      l595 001B  
                    l597 0023                      l599 0026                      _PR2 0092  
                   i1l49 00B6                     _TMR0 0001                     _main 0018  
                   btemp 007E                     start 000E                    ?_main 0073  
                  i1l651 008D                    i1l661 00A0                    i1l653 0091  
                  i1l671 00AD                    i1l663 00A4                    i1l655 0095  
                  i1l673 00B1                    i1l665 00A5                    i1l657 0096  
                  i1l675 00B2                    i1l667 00A7                    i1l659 009A  
                  i1l669 00A9                    u10_20 0091                    u10_21 0090  
                  u11_20 00A0                    u11_21 009F                    u12_20 00AD  
                  u12_21 00AC                    _TMR1H 000F                    _TMR1L 000E  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 008D                   ??_main 0076  
                 saved_w 007E  __end_of__initialization 0014           __pcstackCOMMON 0073  
             __pmaintext 0018               __pintentry 0004                  __ptext1 008D  
              _T1CONbits 0010                _T2CONbits 0012     end_of_initialization 0014  
      __end_of_timersISR 00BF                _PORTCbits 0007                _TRISCbits 0087  
    start_initialization 0011              __pbssCOMMON 0070                ___latbits 0002  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
              _timersISR 008D            _timer0Counter 0072            _timer1Counter 0071  
          _timer2Counter 0070               ?_timersISR 0073               _INTCONbits 000B  
               intlevel1 0000              ??_timersISR 0073               _OPTION_REG 0081  
