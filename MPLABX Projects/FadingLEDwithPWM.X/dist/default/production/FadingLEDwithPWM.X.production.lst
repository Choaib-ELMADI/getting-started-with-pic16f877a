

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon May 27 19:25:35 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166                           
   167                           	psect	nvCOMMON
   168     0077                     __pnvCOMMON:
   169     0077                     _i:
   170     0077                     	ds	2
   171     0015                     _CCPR1L	set	21
   172     0017                     _CCP1CON	set	23
   173     0012                     _T2CON	set	18
   174     0092                     _PR2	set	146
   175                           
   176                           	psect	cinit
   177     07FC                     start_initialization:	
   178                           ; #config settings
   179                           
   180     07FC                     __initialization:
   181     07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184     07FC                     __end_of__initialization:
   185     07FC  0183               	clrf	3
   186     07FD  120A  118A  2FA2   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMMON
   189     0070                     __pcstackCOMMON:
   190     0070                     ?_setPwmDutyCycle:
   191     0070                     ?_main:	
   192                           ; 1 bytes @ 0x0
   193                           
   194     0070                     setPwmDutyCycle@dutyCycle:	
   195                           ; 1 bytes @ 0x0
   196                           
   197                           
   198                           ; 2 bytes @ 0x0
   199     0070                     	ds	2
   200     0072                     ??_setPwmDutyCycle:
   201                           
   202                           ; 1 bytes @ 0x2
   203     0072                     	ds	2
   204     0074                     ??_main:
   205                           
   206                           ; 1 bytes @ 0x4
   207     0074                     	ds	3
   208                           
   209                           	psect	maintext
   210     07A2                     __pmaintext:	
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 18 in file "main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0, pclath, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : B00/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   230 ;;      Params:         0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0
   232 ;;      Temps:          3       0       0       0       0
   233 ;;      Totals:         3       0       0       0       0
   234 ;;Total ram usage:        3 bytes
   235 ;; Hardware stack levels required when called: 1
   236 ;; This function calls:
   237 ;;		_setPwmDutyCycle
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243     07A2                     _main:	
   244                           ;psect for function _main
   245                           
   246     07A2                     l611:	
   247                           ;incstack = 0
   248                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   249                           
   250                           
   251                           ;main.c: 19:             _delay((unsigned long)((2)*(20000000/4000.0)));
   252     07A2  3004               	movlw	4
   253     07A3  1283               	bcf	3,5	;RP0=0, select bank0
   254     07A4  1303               	bcf	3,6	;RP1=0, select bank0
   255     07A5  0092               	movwf	18	;volatile
   256                           
   257                           ;main.c: 20:         }
   258     07A6  300C               	movlw	12
   259     07A7  0097               	movwf	23	;volatile
   260                           
   261                           ;main.c: 21:     }
   262     07A8  30FF               	movlw	255
   263     07A9  1683               	bsf	3,5	;RP0=1, select bank1
   264     07AA  1303               	bcf	3,6	;RP1=0, select bank1
   265     07AB  0092               	movwf	18	;volatile
   266     07AC                     l613:
   267                           
   268                           ;main.c: 24: }
   269     07AC  01F7               	clrf	_i
   270     07AD  01F8               	clrf	_i+1
   271     07AE                     l619:
   272                           
   273                           ;main.c: 25: 
   274     07AE  0878               	movf	_i+1,w
   275     07AF  00F1               	movwf	setPwmDutyCycle@dutyCycle+1
   276     07B0  0877               	movf	_i,w
   277     07B1  00F0               	movwf	setPwmDutyCycle@dutyCycle
   278     07B2  120A  118A  2783  120A  118A  	fcall	_setPwmDutyCycle
   279     07B7                     l621:
   280                           
   281                           ;main.c: 26: void setPwmDutyCycle(unsigned int dutyCycle) {
   282     07B7  300D               	movlw	13
   283     07B8  00F5               	movwf	??_main+1
   284     07B9  30FB               	movlw	251
   285     07BA  00F4               	movwf	??_main
   286     07BB                     u57:
   287     07BB  0BF4               	decfsz	??_main,f
   288     07BC  2FBB               	goto	u57
   289     07BD  0BF5               	decfsz	??_main+1,f
   290     07BE  2FBB               	goto	u57
   291     07BF  2FC0               	nop2
   292     07C0                     l623:
   293                           
   294                           ;main.c: 27:     CCPR1L = (dutyCycle >> 2);
   295     07C0  3001               	movlw	1
   296     07C1  07F7               	addwf	_i,f
   297     07C2  1803               	skipnc
   298     07C3  0AF8               	incf	_i+1,f
   299     07C4  3000               	movlw	0
   300     07C5  07F8               	addwf	_i+1,f
   301     07C6                     l625:
   302     07C6  3004               	movlw	4
   303     07C7  0278               	subwf	_i+1,w
   304     07C8  3000               	movlw	0
   305     07C9  1903               	skipnz
   306     07CA  0277               	subwf	_i,w
   307     07CB  1C03               	skipc
   308     07CC  2FCE               	goto	u41
   309     07CD  2FCF               	goto	u40
   310     07CE                     u41:
   311     07CE  2FAE               	goto	l619
   312     07CF                     u40:
   313     07CF                     l627:
   314                           
   315                           ;main.c: 29:     CCP1CON = (CCP1CON | (0x30 & (dutyCycle << 4)));
   316     07CF  300D               	movlw	13
   317     07D0  00F6               	movwf	??_main+2
   318     07D1  30AF               	movlw	175
   319     07D2  00F5               	movwf	??_main+1
   320     07D3  30B6               	movlw	182
   321     07D4  00F4               	movwf	??_main
   322     07D5                     u67:
   323     07D5  0BF4               	decfsz	??_main,f
   324     07D6  2FD5               	goto	u67
   325     07D7  0BF5               	decfsz	??_main+1,f
   326     07D8  2FD5               	goto	u67
   327     07D9  0BF6               	decfsz	??_main+2,f
   328     07DA  2FD5               	goto	u67
   329     07DB  0000               	nop
   330     07DC  30FF               	movlw	255
   331     07DD  00F7               	movwf	_i
   332     07DE  3003               	movlw	3
   333     07DF  00F8               	movwf	_i+1
   334     07E0                     l631:
   335     07E0  0878               	movf	_i+1,w
   336     07E1  00F1               	movwf	setPwmDutyCycle@dutyCycle+1
   337     07E2  0877               	movf	_i,w
   338     07E3  00F0               	movwf	setPwmDutyCycle@dutyCycle
   339     07E4  120A  118A  2783  120A  118A  	fcall	_setPwmDutyCycle
   340     07E9                     l633:
   341     07E9  300D               	movlw	13
   342     07EA  00F5               	movwf	??_main+1
   343     07EB  30FB               	movlw	251
   344     07EC  00F4               	movwf	??_main
   345     07ED                     u77:
   346     07ED  0BF4               	decfsz	??_main,f
   347     07EE  2FED               	goto	u77
   348     07EF  0BF5               	decfsz	??_main+1,f
   349     07F0  2FED               	goto	u77
   350     07F1  2FF2               	nop2
   351     07F2                     l635:
   352     07F2  3001               	movlw	1
   353     07F3  02F7               	subwf	_i,f
   354     07F4  3000               	movlw	0
   355     07F5  1C03               	skipc
   356     07F6  03F8               	decf	_i+1,f
   357     07F7  02F8               	subwf	_i+1,f
   358     07F8  2FE0               	goto	l631
   359     07F9  120A  118A  2800   	ljmp	start
   360     07FC                     __end_of_main:
   361                           
   362                           	psect	text1
   363     0783                     __ptext1:	
   364 ;; *************** function _setPwmDutyCycle *****************
   365 ;; Defined at:
   366 ;;		line 40 in file "main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;  dutyCycle       2    0[COMMON] unsigned int 
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, status,2, status,0
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   380 ;;      Params:         2       0       0       0       0
   381 ;;      Locals:         0       0       0       0       0
   382 ;;      Temps:          2       0       0       0       0
   383 ;;      Totals:         4       0       0       0       0
   384 ;;Total ram usage:        4 bytes
   385 ;; Hardware stack levels used: 1
   386 ;; This function calls:
   387 ;;		Nothing
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393     0783                     _setPwmDutyCycle:	
   394                           ;psect for function _setPwmDutyCycle
   395                           
   396     0783                     l605:	
   397                           ;incstack = 0
   398                           ; Regs used in _setPwmDutyCycle: [wreg+status,2+status,0]
   399                           
   400     0783  0871               	movf	setPwmDutyCycle@dutyCycle+1,w
   401     0784  00F3               	movwf	??_setPwmDutyCycle+1
   402     0785  0870               	movf	setPwmDutyCycle@dutyCycle,w
   403     0786  00F2               	movwf	??_setPwmDutyCycle
   404     0787  1003               	clrc
   405     0788  0CF3               	rrf	??_setPwmDutyCycle+1,f
   406     0789  0CF2               	rrf	??_setPwmDutyCycle,f
   407     078A  1003               	clrc
   408     078B  0CF3               	rrf	??_setPwmDutyCycle+1,f
   409     078C  0CF2               	rrf	??_setPwmDutyCycle,f
   410     078D  0872               	movf	??_setPwmDutyCycle,w
   411     078E  1283               	bcf	3,5	;RP0=0, select bank0
   412     078F  1303               	bcf	3,6	;RP1=0, select bank0
   413     0790  0095               	movwf	21	;volatile
   414     0791                     l607:
   415     0791  0817               	movf	23,w	;volatile
   416     0792  39CF               	andlw	207
   417     0793  0097               	movwf	23	;volatile
   418     0794                     l609:
   419     0794  0870               	movf	setPwmDutyCycle@dutyCycle,w
   420     0795  00F2               	movwf	??_setPwmDutyCycle
   421     0796  3003               	movlw	3
   422     0797                     u35:
   423     0797  1003               	clrc
   424     0798  0DF2               	rlf	??_setPwmDutyCycle,f
   425     0799  3EFF               	addlw	-1
   426     079A  1D03               	skipz
   427     079B  2F97               	goto	u35
   428     079C  1003               	clrc
   429     079D  0D72               	rlf	??_setPwmDutyCycle,w
   430     079E  3930               	andlw	48
   431     079F  0417               	iorwf	23,w
   432     07A0  0097               	movwf	23	;volatile
   433     07A1                     l29:
   434     07A1  0008               	return
   435     07A2                     __end_of_setPwmDutyCycle:
   436     007E                     btemp	set	126	;btemp
   437     007E                     wtemp0	set	126
   438                           
   439                           	psect	config
   440                           
   441                           ;Config register CONFIG @ 0x2007
   442                           ;	Oscillator Selection bits
   443                           ;	FOSC = HS, HS oscillator
   444                           ;	Watchdog Timer Enable bit
   445                           ;	WDTE = OFF, WDT disabled
   446                           ;	Power-up Timer Enable bit
   447                           ;	PWRTE = OFF, PWRT disabled
   448                           ;	Brown-out Reset Enable bit
   449                           ;	BOREN = OFF, BOR disabled
   450                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   451                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   452                           ;	Data EEPROM Memory Code Protection bit
   453                           ;	CPD = OFF, Data EEPROM code protection off
   454                           ;	Flash Program Memory Write Enable bits
   455                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   456                           ;	In-Circuit Debugger Mode bit
   457                           ;	DEBUG = 0x1, unprogrammed default
   458                           ;	Flash Program Memory Code Protection bit
   459                           ;	CP = OFF, Code protection off
   460     2007                     	org	8199
   461     2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setPwmDutyCycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     196
                                              4 COMMON     3     3      0
                    _setPwmDutyCycle
 ---------------------------------------------------------------------------------
 (1) _setPwmDutyCycle                                      4     2      2     196
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setPwmDutyCycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon May 27 19:25:35 2024

                       _i 0077                        l29 07A1                        u40 07CF  
                      u41 07CE                        u35 0797                        u57 07BB  
                      u67 07D5                        u77 07ED                       l611 07A2  
                     l605 0783                       l621 07B7                       l613 07AC  
                     l607 0791                       l631 07E0                       l623 07C0  
                     l609 0794                       l633 07E9                       l625 07C6  
                     l635 07F2                       l627 07CF                       l619 07AE  
                     _PR2 0092                      _main 07A2                      btemp 007E  
                    start 0000                     ?_main 0070                     _T2CON 0012  
                   status 0003                     wtemp0 007E           __initialization 07FC  
            __end_of_main 07FC                    ??_main 0074                    _CCPR1L 0015  
setPwmDutyCycle@dutyCycle 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
       ??_setPwmDutyCycle 0072                __pnvCOMMON 0077                __pmaintext 07A2  
                 _CCP1CON 0017                   __ptext1 0783      end_of_initialization 07FC  
         _setPwmDutyCycle 0783       start_initialization 07FC                 ___latbits 0002  
 __end_of_setPwmDutyCycle 07A2          ?_setPwmDutyCycle 0070  
