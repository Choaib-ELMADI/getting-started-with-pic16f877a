

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 18 11:02:04 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 22/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177     0013                     _SSPBUF	set	19
   178     000C                     _PIR1bits	set	12
   179     0006                     _PORTBbits	set	6
   180     0006                     _PORTB	set	6
   181     0008                     _PORTD	set	8
   182     0014                     _SSPCON	set	20
   183     0094                     _SSPSTATbits	set	148
   184     0091                     _SSPCON2bits	set	145
   185     0086                     _TRISB	set	134
   186     0088                     _TRISD	set	136
   187     0093                     _SSPADD	set	147
   188     0087                     _TRISC	set	135
   189                           
   190                           	psect	strings
   191     0003                     __pstrings:
   192     0003                     stringtab:
   193     0003                     __stringtab:
   194     0003                     stringcode:	
   195                           ;	String table - string pointers are 1 byte each
   196                           
   197     0003                     stringdir:
   198     0003  3000               	movlw	high stringdir
   199     0004  008A               	movwf	10
   200     0005  0804               	movf	4,w
   201     0006  0A84               	incf	4,f
   202     0007  0782               	addwf	2,f
   203     0008                     __stringbase:
   204     0008  3400               	retlw	0
   205     0009                     __end_of__stringtab:
   206     0009                     STR_1:
   207     0009  3443               	retlw	67	;'C'
   208     000A  344C               	retlw	76	;'L'
   209     000B  344F               	retlw	79	;'O'
   210     000C  3443               	retlw	67	;'C'
   211     000D  344B               	retlw	75	;'K'
   212     000E  343A               	retlw	58	;':'
   213     000F  3400               	retlw	0
   214     0010                     STR_2:
   215     0010  3444               	retlw	68	;'D'
   216     0011  3441               	retlw	65	;'A'
   217     0012  3454               	retlw	84	;'T'
   218     0013  3445               	retlw	69	;'E'
   219     0014  343A               	retlw	58	;':'
   220     0015  3400               	retlw	0
   221                           
   222                           	psect	cinit
   223     07F2                     start_initialization:	
   224                           ; #config settings
   225                           
   226     07F2                     __initialization:
   227                           
   228                           ; Clear objects allocated to BANK0
   229     07F2  1283               	bcf	3,5	;RP0=0, select bank0
   230     07F3  1303               	bcf	3,6	;RP1=0, select bank0
   231     07F4  01AA               	clrf	__pbssBANK0& (0+127)
   232     07F5  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   233     07F6  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   234     07F7  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   235     07F8  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   236     07F9  01AF               	clrf	(__pbssBANK0+5)& (0+127)
   237     07FA  01B0               	clrf	(__pbssBANK0+6)& (0+127)
   238     07FB  01B1               	clrf	(__pbssBANK0+7)& (0+127)
   239     07FC                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242     07FC                     __end_of__initialization:
   243     07FC  0183               	clrf	3
   244     07FD  120A  118A  2E54   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssBANK0
   247     002A                     __pbssBANK0:
   248     002A                     __conf:
   249     002A                     	ds	1
   250     002B                     __year:
   251     002B                     	ds	1
   252     002C                     __month:
   253     002C                     	ds	1
   254     002D                     __date:
   255     002D                     	ds	1
   256     002E                     __day:
   257     002E                     	ds	1
   258     002F                     __hour:
   259     002F                     	ds	1
   260     0030                     __min:
   261     0030                     	ds	1
   262     0031                     __sec:
   263     0031                     	ds	1
   264                           
   265                           	psect	cstackCOMMON
   266     0070                     __pcstackCOMMON:
   267     0070                     ?_lcd_init:
   268     0070                     ?_lcd_command:	
   269                           ; 1 bytes @ 0x0
   270                           
   271     0070                     ??_lcd_command:	
   272                           ; 1 bytes @ 0x0
   273                           
   274     0070                     ?_DS1307_read:	
   275                           ; 1 bytes @ 0x0
   276                           
   277     0070                     ?_bcd_to_ascii:	
   278                           ; 1 bytes @ 0x0
   279                           
   280     0070                     ?_lcd_data:	
   281                           ; 1 bytes @ 0x0
   282                           
   283     0070                     ??_lcd_data:	
   284                           ; 1 bytes @ 0x0
   285                           
   286     0070                     ?_main:	
   287                           ; 1 bytes @ 0x0
   288                           
   289     0070                     ?_decimal_to_bcd:	
   290                           ; 1 bytes @ 0x0
   291                           
   292     0070                     ?___awdiv:	
   293                           ; 1 bytes @ 0x0
   294                           
   295     0070                     ?___awmod:	
   296                           ; 2 bytes @ 0x0
   297                           
   298     0070                     DS1307_read@register_address:	
   299                           ; 2 bytes @ 0x0
   300                           
   301     0070                     ___awdiv@divisor:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ___awmod@divisor:	
   305                           ; 2 bytes @ 0x0
   306                           
   307                           
   308                           ; 2 bytes @ 0x0
   309     0070                     	ds	1
   310     0071                     ??_DS1307_read:
   311     0071                     DS1307_read@slave_address:	
   312                           ; 1 bytes @ 0x1
   313                           
   314                           
   315                           ; 1 bytes @ 0x1
   316     0071                     	ds	1
   317     0072                     lcd_data@data:
   318     0072                     lcd_command@cmd:	
   319                           ; 1 bytes @ 0x2
   320                           
   321     0072                     ___awdiv@dividend:	
   322                           ; 1 bytes @ 0x2
   323                           
   324     0072                     ___awmod@dividend:	
   325                           ; 2 bytes @ 0x2
   326                           
   327                           
   328                           ; 2 bytes @ 0x2
   329     0072                     	ds	1
   330     0073                     ??_lcd_init:
   331     0073                     ?_lcd_word:	
   332                           ; 1 bytes @ 0x3
   333                           
   334     0073                     ??_bcd_to_ascii:	
   335                           ; 1 bytes @ 0x3
   336                           
   337     0073                     lcd_word@len:	
   338                           ; 1 bytes @ 0x3
   339                           
   340                           
   341                           ; 1 bytes @ 0x3
   342     0073                     	ds	1
   343     0074                     ??_lcd_word:
   344     0074                     ??___awdiv:	
   345                           ; 1 bytes @ 0x4
   346                           
   347     0074                     ??___awmod:	
   348                           ; 1 bytes @ 0x4
   349                           
   350     0074                     lcd_word@str:	
   351                           ; 1 bytes @ 0x4
   352                           
   353     0074                     bcd_to_ascii@bcd:	
   354                           ; 1 bytes @ 0x4
   355                           
   356     0074                     ___awdiv@counter:	
   357                           ; 1 bytes @ 0x4
   358                           
   359     0074                     ___awmod@counter:	
   360                           ; 1 bytes @ 0x4
   361                           
   362                           
   363                           ; 1 bytes @ 0x4
   364     0074                     	ds	1
   365     0075                     lcd_word@i:
   366     0075                     bcd_to_ascii@value:	
   367                           ; 1 bytes @ 0x5
   368                           
   369     0075                     ___awdiv@sign:	
   370                           ; 1 bytes @ 0x5
   371                           
   372     0075                     ___awmod@sign:	
   373                           ; 1 bytes @ 0x5
   374                           
   375                           
   376                           ; 1 bytes @ 0x5
   377     0075                     	ds	1
   378     0076                     ___awdiv@quotient:
   379                           
   380                           ; 2 bytes @ 0x6
   381     0076                     	ds	2
   382     0078                     ??_decimal_to_bcd:
   383                           
   384                           ; 1 bytes @ 0x8
   385     0078                     	ds	2
   386     007A                     decimal_to_bcd@msb:
   387                           
   388                           ; 1 bytes @ 0xA
   389     007A                     	ds	1
   390     007B                     decimal_to_bcd@lsb:
   391                           
   392                           ; 1 bytes @ 0xB
   393     007B                     	ds	1
   394     007C                     decimal_to_bcd@hex:
   395                           
   396                           ; 1 bytes @ 0xC
   397     007C                     	ds	1
   398     007D                     decimal_to_bcd@decimal:
   399                           
   400                           ; 1 bytes @ 0xD
   401     007D                     	ds	1
   402     007E                     ??_DS1307_write:
   403                           
   404                           	psect	cstackBANK0
   405     0020                     __pcstackBANK0:	
   406                           ; 1 bytes @ 0xE
   407                           
   408     0020                     ?_DS1307_write:
   409     0020                     DS1307_write@_min:	
   410                           ; 1 bytes @ 0x0
   411                           
   412                           
   413                           ; 1 bytes @ 0x0
   414     0020                     	ds	1
   415     0021                     DS1307_write@_hour:
   416                           
   417                           ; 1 bytes @ 0x1
   418     0021                     	ds	1
   419     0022                     DS1307_write@_day:
   420                           
   421                           ; 1 bytes @ 0x2
   422     0022                     	ds	1
   423     0023                     DS1307_write@_date:
   424                           
   425                           ; 1 bytes @ 0x3
   426     0023                     	ds	1
   427     0024                     DS1307_write@_month:
   428                           
   429                           ; 1 bytes @ 0x4
   430     0024                     	ds	1
   431     0025                     DS1307_write@_year:
   432                           
   433                           ; 1 bytes @ 0x5
   434     0025                     	ds	1
   435     0026                     DS1307_write@_sec:
   436                           
   437                           ; 1 bytes @ 0x6
   438     0026                     	ds	1
   439     0027                     ??_main:
   440                           
   441                           ; 1 bytes @ 0x7
   442     0027                     	ds	3
   443                           
   444                           	psect	maintext
   445     0654                     __pmaintext:	
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 41 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : B00/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          0       3       0       0       0
   468 ;;      Totals:         0       3       0       0       0
   469 ;;Total ram usage:        3 bytes
   470 ;; Hardware stack levels required when called: 3
   471 ;; This function calls:
   472 ;;		_DS1307_read
   473 ;;		_DS1307_write
   474 ;;		_bcd_to_ascii
   475 ;;		_lcd_command
   476 ;;		_lcd_data
   477 ;;		_lcd_init
   478 ;;		_lcd_word
   479 ;; This function is called by:
   480 ;;		Startup code after reset
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484     0654                     _main:	
   485                           ;psect for function _main
   486                           
   487     0654                     l1241:	
   488                           ;incstack = 0
   489                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   490                           
   491                           
   492                           ;main.c: 42:     TRISC = 0xFF;
   493     0654  30FF               	movlw	255
   494     0655  1683               	bsf	3,5	;RP0=1, select bank1
   495     0656  1303               	bcf	3,6	;RP1=0, select bank1
   496     0657  0087               	movwf	7	;volatile
   497                           
   498                           ;main.c: 44:     SSPADD = 49;
   499     0658  3031               	movlw	49
   500     0659  0093               	movwf	19	;volatile
   501                           
   502                           ;main.c: 45:     SSPCON = 0x28;
   503     065A  3028               	movlw	40
   504     065B  1283               	bcf	3,5	;RP0=0, select bank0
   505     065C  1303               	bcf	3,6	;RP1=0, select bank0
   506     065D  0094               	movwf	20	;volatile
   507     065E                     l1243:
   508                           
   509                           ;main.c: 47:     TRISD = 0x00;
   510     065E  1683               	bsf	3,5	;RP0=1, select bank1
   511     065F  1303               	bcf	3,6	;RP1=0, select bank1
   512     0660  0188               	clrf	8	;volatile
   513     0661                     l1245:
   514                           
   515                           ;main.c: 48:     PORTD = 0x00;
   516     0661  1283               	bcf	3,5	;RP0=0, select bank0
   517     0662  1303               	bcf	3,6	;RP1=0, select bank0
   518     0663  0188               	clrf	8	;volatile
   519     0664                     l1247:
   520                           
   521                           ;main.c: 49:     TRISB = 0x00;
   522     0664  1683               	bsf	3,5	;RP0=1, select bank1
   523     0665  1303               	bcf	3,6	;RP1=0, select bank1
   524     0666  0186               	clrf	6	;volatile
   525     0667                     l1249:
   526                           
   527                           ;main.c: 50:     PORTB = 0x00;
   528     0667  1283               	bcf	3,5	;RP0=0, select bank0
   529     0668  1303               	bcf	3,6	;RP1=0, select bank0
   530     0669  0186               	clrf	6	;volatile
   531     066A                     l1251:
   532                           
   533                           ;main.c: 52:     lcd_init();
   534     066A  120A  118A  245F  120A  118A  	fcall	_lcd_init
   535     066F                     l1253:
   536                           
   537                           ;main.c: 54:     lcd_command(0x80);
   538     066F  3080               	movlw	128
   539     0670  120A  118A  244A  120A  118A  	fcall	_lcd_command
   540     0675                     l1255:
   541                           
   542                           ;main.c: 55:     lcd_word("CLOCK:", 6);
   543     0675  3006               	movlw	6
   544     0676  00F3               	movwf	lcd_word@len
   545     0677  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   546     0678  120A  118A  2478  120A  118A  	fcall	_lcd_word
   547     067D                     l1257:
   548                           
   549                           ;main.c: 56:     lcd_command(0xC0);
   550     067D  30C0               	movlw	192
   551     067E  120A  118A  244A  120A  118A  	fcall	_lcd_command
   552     0683                     l1259:
   553                           
   554                           ;main.c: 57:     lcd_word("DATE:", 5);
   555     0683  3005               	movlw	5
   556     0684  00F3               	movwf	lcd_word@len
   557     0685  3008               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   558     0686  120A  118A  2478  120A  118A  	fcall	_lcd_word
   559     068B                     l1261:
   560                           
   561                           ;main.c: 58:     DS1307_write(0, 0, 11, 2, 18, 3, 25);
   562     068B  1283               	bcf	3,5	;RP0=0, select bank0
   563     068C  1303               	bcf	3,6	;RP1=0, select bank0
   564     068D  01A0               	clrf	DS1307_write@_min
   565     068E  300B               	movlw	11
   566     068F  00A1               	movwf	DS1307_write@_hour
   567     0690  3002               	movlw	2
   568     0691  00A2               	movwf	DS1307_write@_day
   569     0692  3012               	movlw	18
   570     0693  00A3               	movwf	DS1307_write@_date
   571     0694  3003               	movlw	3
   572     0695  00A4               	movwf	DS1307_write@_month
   573     0696  3019               	movlw	25
   574     0697  00A5               	movwf	DS1307_write@_year
   575     0698  3000               	movlw	0
   576     0699  120A  118A  25AB  120A  118A  	fcall	_DS1307_write
   577     069E                     l1263:
   578                           
   579                           ;main.c: 59:     _delay((unsigned long)((300)*(20000000/4000.0)));
   580     069E  3008               	movlw	8
   581     069F  1283               	bcf	3,5	;RP0=0, select bank0
   582     06A0  1303               	bcf	3,6	;RP1=0, select bank0
   583     06A1  00A9               	movwf	??_main+2
   584     06A2  309D               	movlw	157
   585     06A3  00A8               	movwf	??_main+1
   586     06A4  3005               	movlw	5
   587     06A5  00A7               	movwf	??_main
   588     06A6                     u1337:
   589     06A6  0BA7               	decfsz	??_main,f
   590     06A7  2EA6               	goto	u1337
   591     06A8  0BA8               	decfsz	??_main+1,f
   592     06A9  2EA6               	goto	u1337
   593     06AA  0BA9               	decfsz	??_main+2,f
   594     06AB  2EA6               	goto	u1337
   595     06AC                     l1265:
   596                           
   597                           ;main.c: 62:         _delay((unsigned long)((20)*(20000000/4000.0)));
   598     06AC  3082               	movlw	130
   599     06AD  1283               	bcf	3,5	;RP0=0, select bank0
   600     06AE  1303               	bcf	3,6	;RP1=0, select bank0
   601     06AF  00A8               	movwf	??_main+1
   602     06B0  30DD               	movlw	221
   603     06B1  00A7               	movwf	??_main
   604     06B2                     u1347:
   605     06B2  0BA7               	decfsz	??_main,f
   606     06B3  2EB2               	goto	u1347
   607     06B4  0BA8               	decfsz	??_main+1,f
   608     06B5  2EB2               	goto	u1347
   609     06B6                     l1267:
   610                           
   611                           ;main.c: 63:         DS1307_read(0xD0, 0);
   612     06B6  01F0               	clrf	DS1307_read@register_address
   613     06B7  30D0               	movlw	208
   614     06B8  120A  118A  2715  120A  118A  	fcall	_DS1307_read
   615     06BD                     l1269:
   616                           
   617                           ;main.c: 65:         lcd_command(0x88);
   618     06BD  3088               	movlw	136
   619     06BE  120A  118A  244A  120A  118A  	fcall	_lcd_command
   620     06C3                     l1271:
   621                           
   622                           ;main.c: 66:         bcd_to_ascii(_hour);
   623     06C3  1283               	bcf	3,5	;RP0=0, select bank0
   624     06C4  1303               	bcf	3,6	;RP1=0, select bank0
   625     06C5  082F               	movf	__hour,w
   626     06C6  120A  118A  2493  120A  118A  	fcall	_bcd_to_ascii
   627     06CB                     l1273:
   628                           
   629                           ;main.c: 67:         lcd_data(':');
   630     06CB  303A               	movlw	58
   631     06CC  120A  118A  2435  120A  118A  	fcall	_lcd_data
   632     06D1                     l1275:
   633                           
   634                           ;main.c: 68:         bcd_to_ascii(_min);
   635     06D1  1283               	bcf	3,5	;RP0=0, select bank0
   636     06D2  1303               	bcf	3,6	;RP1=0, select bank0
   637     06D3  0830               	movf	__min,w
   638     06D4  120A  118A  2493  120A  118A  	fcall	_bcd_to_ascii
   639     06D9                     l1277:
   640                           
   641                           ;main.c: 69:         lcd_data(':');
   642     06D9  303A               	movlw	58
   643     06DA  120A  118A  2435  120A  118A  	fcall	_lcd_data
   644     06DF                     l1279:
   645                           
   646                           ;main.c: 70:         bcd_to_ascii(_sec);
   647     06DF  1283               	bcf	3,5	;RP0=0, select bank0
   648     06E0  1303               	bcf	3,6	;RP1=0, select bank0
   649     06E1  0831               	movf	__sec,w
   650     06E2  120A  118A  2493  120A  118A  	fcall	_bcd_to_ascii
   651     06E7                     l1281:
   652                           
   653                           ;main.c: 72:         lcd_command(0xC8);
   654     06E7  30C8               	movlw	200
   655     06E8  120A  118A  244A  120A  118A  	fcall	_lcd_command
   656     06ED                     l1283:
   657                           
   658                           ;main.c: 73:         bcd_to_ascii(_date);
   659     06ED  1283               	bcf	3,5	;RP0=0, select bank0
   660     06EE  1303               	bcf	3,6	;RP1=0, select bank0
   661     06EF  082D               	movf	__date,w
   662     06F0  120A  118A  2493  120A  118A  	fcall	_bcd_to_ascii
   663     06F5                     l1285:
   664                           
   665                           ;main.c: 74:         lcd_data('/');
   666     06F5  302F               	movlw	47
   667     06F6  120A  118A  2435  120A  118A  	fcall	_lcd_data
   668     06FB                     l1287:
   669                           
   670                           ;main.c: 75:         bcd_to_ascii(_month);
   671     06FB  1283               	bcf	3,5	;RP0=0, select bank0
   672     06FC  1303               	bcf	3,6	;RP1=0, select bank0
   673     06FD  082C               	movf	__month,w
   674     06FE  120A  118A  2493  120A  118A  	fcall	_bcd_to_ascii
   675     0703                     l1289:
   676                           
   677                           ;main.c: 76:         lcd_data('/');
   678     0703  302F               	movlw	47
   679     0704  120A  118A  2435  120A  118A  	fcall	_lcd_data
   680     0709                     l1291:
   681                           
   682                           ;main.c: 77:         bcd_to_ascii(_year);
   683     0709  1283               	bcf	3,5	;RP0=0, select bank0
   684     070A  1303               	bcf	3,6	;RP1=0, select bank0
   685     070B  082B               	movf	__year,w
   686     070C  120A  118A  2493  120A  118A  	fcall	_bcd_to_ascii
   687     0711  2EAC               	goto	l1265
   688     0712  120A  118A  2800   	ljmp	start
   689     0715                     __end_of_main:
   690                           
   691                           	psect	text1
   692     0478                     __ptext1:	
   693 ;; *************** function _lcd_word *****************
   694 ;; Defined at:
   695 ;;		line 97 in file "main.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  str             1    wreg     PTR const unsigned char 
   698 ;;		 -> STR_2(6), STR_1(7), 
   699 ;;  len             1    3[COMMON] unsigned char 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  str             1    4[COMMON] PTR const unsigned char 
   702 ;;		 -> STR_2(6), STR_1(7), 
   703 ;;  i               1    5[COMMON] unsigned char 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         1       0       0       0       0
   714 ;;      Locals:         2       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0
   716 ;;      Totals:         3       0       0       0       0
   717 ;;Total ram usage:        3 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; Hardware stack levels required when called: 1
   720 ;; This function calls:
   721 ;;		_lcd_data
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727     0478                     _lcd_word:	
   728                           ;psect for function _lcd_word
   729                           
   730                           
   731                           ;incstack = 0
   732                           ; Regs used in _lcd_word: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   733                           ;lcd_word@str stored from wreg
   734     0478  00F4               	movwf	lcd_word@str
   735     0479                     l1129:
   736                           
   737                           ;main.c: 98:     unsigned char i;;main.c: 99:     for (i=0; i<len; ++i) {
   738     0479  01F5               	clrf	lcd_word@i
   739     047A  2C8C               	goto	l1135
   740     047B                     l1131:
   741                           
   742                           ;main.c: 100:         lcd_data(str[i]);
   743     047B  0875               	movf	lcd_word@i,w
   744     047C  0774               	addwf	lcd_word@str,w
   745     047D  0084               	movwf	4
   746     047E  120A  118A  2003  120A  118A  	fcall	stringdir
   747     0483  120A  118A  2435  120A  118A  	fcall	_lcd_data
   748     0488                     l1133:
   749                           
   750                           ;main.c: 101:     }
   751     0488  3001               	movlw	1
   752     0489  00FF               	movwf	btemp+1
   753     048A  087F               	movf	btemp+1,w
   754     048B  07F5               	addwf	lcd_word@i,f
   755     048C                     l1135:
   756     048C  0873               	movf	lcd_word@len,w
   757     048D  0275               	subwf	lcd_word@i,w
   758     048E  1C03               	skipc
   759     048F  2C91               	goto	u871
   760     0490  2C92               	goto	u870
   761     0491                     u871:
   762     0491  2C7B               	goto	l1131
   763     0492                     u870:
   764     0492                     l76:
   765     0492  0008               	return
   766     0493                     __end_of_lcd_word:
   767                           
   768                           	psect	text2
   769     045F                     __ptext2:	
   770 ;; *************** function _lcd_init *****************
   771 ;; Defined at:
   772 ;;		line 83 in file "main.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0, pclath, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; Hardware stack levels required when called: 1
   793 ;; This function calls:
   794 ;;		_lcd_command
   795 ;; This function is called by:
   796 ;;		_main
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800     045F                     _lcd_init:	
   801                           ;psect for function _lcd_init
   802                           
   803     045F                     l1127:	
   804                           ;incstack = 0
   805                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   806                           
   807                           
   808                           ;main.c: 84:     lcd_command(0x38);
   809     045F  3038               	movlw	56
   810     0460  120A  118A  244A  120A  118A  	fcall	_lcd_command
   811                           
   812                           ;main.c: 85:     lcd_command(0x06);
   813     0465  3006               	movlw	6
   814     0466  120A  118A  244A  120A  118A  	fcall	_lcd_command
   815                           
   816                           ;main.c: 86:     lcd_command(0x0C);
   817     046B  300C               	movlw	12
   818     046C  120A  118A  244A  120A  118A  	fcall	_lcd_command
   819                           
   820                           ;main.c: 87:     lcd_command(0x01);
   821     0471  3001               	movlw	1
   822     0472  120A  118A  244A  120A  118A  	fcall	_lcd_command
   823     0477                     l67:
   824     0477  0008               	return
   825     0478                     __end_of_lcd_init:
   826                           
   827                           	psect	text3
   828     044A                     __ptext3:	
   829 ;; *************** function _lcd_command *****************
   830 ;; Defined at:
   831 ;;		line 103 in file "main.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  cmd             1    wreg     unsigned char 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  cmd             1    2[COMMON] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         1       0       0       0       0
   847 ;;      Temps:          2       0       0       0       0
   848 ;;      Totals:         3       0       0       0       0
   849 ;;Total ram usage:        3 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_main
   855 ;;		_lcd_init
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859     044A                     _lcd_command:	
   860                           ;psect for function _lcd_command
   861                           
   862                           
   863                           ;incstack = 0
   864                           ; Regs used in _lcd_command: [wreg]
   865                           ;lcd_command@cmd stored from wreg
   866     044A  00F2               	movwf	lcd_command@cmd
   867     044B                     l1107:
   868                           
   869                           ;main.c: 104:     PORTBbits.RB2 = 1;
   870     044B  1283               	bcf	3,5	;RP0=0, select bank0
   871     044C  1303               	bcf	3,6	;RP1=0, select bank0
   872     044D  1506               	bsf	6,2	;volatile
   873                           
   874                           ;main.c: 105:     PORTBbits.RB0 = 0;
   875     044E  1006               	bcf	6,0	;volatile
   876                           
   877                           ;main.c: 106:     PORTBbits.RB1 = 0;
   878     044F  1086               	bcf	6,1	;volatile
   879     0450                     l1109:
   880                           
   881                           ;main.c: 107:     PORTD = cmd;
   882     0450  0872               	movf	lcd_command@cmd,w
   883     0451  0088               	movwf	8	;volatile
   884                           
   885                           ;main.c: 108:     _delay((unsigned long)((5)*(20000000/4000.0)));
   886     0452  3021               	movlw	33
   887     0453  00F1               	movwf	??_lcd_command+1
   888     0454  3076               	movlw	118
   889     0455  00F0               	movwf	??_lcd_command
   890     0456                     u1357:
   891     0456  0BF0               	decfsz	??_lcd_command,f
   892     0457  2C56               	goto	u1357
   893     0458  0BF1               	decfsz	??_lcd_command+1,f
   894     0459  2C56               	goto	u1357
   895     045A  0000               	nop
   896     045B                     l1111:
   897                           
   898                           ;main.c: 109:     PORTBbits.RB2 = 0;
   899     045B  1283               	bcf	3,5	;RP0=0, select bank0
   900     045C  1303               	bcf	3,6	;RP1=0, select bank0
   901     045D  1106               	bcf	6,2	;volatile
   902     045E                     l79:
   903     045E  0008               	return
   904     045F                     __end_of_lcd_command:
   905                           
   906                           	psect	text4
   907     0493                     __ptext4:	
   908 ;; *************** function _bcd_to_ascii *****************
   909 ;; Defined at:
   910 ;;		line 119 in file "main.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  bcd             1    wreg     unsigned char 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  bcd             1    4[COMMON] unsigned char 
   915 ;;  value           1    5[COMMON] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, status,2, status,0, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         2       0       0       0       0
   927 ;;      Temps:          1       0       0       0       0
   928 ;;      Totals:         3       0       0       0       0
   929 ;;Total ram usage:        3 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; Hardware stack levels required when called: 1
   932 ;; This function calls:
   933 ;;		_lcd_data
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939     0493                     _bcd_to_ascii:	
   940                           ;psect for function _bcd_to_ascii
   941                           
   942                           
   943                           ;incstack = 0
   944                           ; Regs used in _bcd_to_ascii: [wreg+status,2+status,0+pclath+cstack]
   945                           ;bcd_to_ascii@bcd stored from wreg
   946     0493  00F4               	movwf	bcd_to_ascii@bcd
   947     0494                     l1225:
   948                           
   949                           ;main.c: 120:     unsigned char value;;main.c: 122:     value = bcd;
   950     0494  0874               	movf	bcd_to_ascii@bcd,w
   951     0495  00F5               	movwf	bcd_to_ascii@value
   952     0496                     l1227:
   953                           
   954                           ;main.c: 123:     value = (value & 0xF0) >> 4;
   955     0496  0875               	movf	bcd_to_ascii@value,w
   956     0497  00F3               	movwf	??_bcd_to_ascii
   957     0498  3004               	movlw	4
   958     0499                     u1325:
   959     0499  1003               	clrc
   960     049A  0CF3               	rrf	??_bcd_to_ascii,f
   961     049B  3EFF               	addlw	-1
   962     049C  1D03               	skipz
   963     049D  2C99               	goto	u1325
   964     049E  0873               	movf	??_bcd_to_ascii,w
   965     049F  390F               	andlw	15
   966     04A0  00F5               	movwf	bcd_to_ascii@value
   967     04A1                     l1229:
   968                           
   969                           ;main.c: 124:     value = value | 0x30;
   970     04A1  0875               	movf	bcd_to_ascii@value,w
   971     04A2  3830               	iorlw	48
   972     04A3  00F5               	movwf	bcd_to_ascii@value
   973     04A4                     l1231:
   974                           
   975                           ;main.c: 125:     lcd_data(value);
   976     04A4  0875               	movf	bcd_to_ascii@value,w
   977     04A5  120A  118A  2435  120A  118A  	fcall	_lcd_data
   978     04AA                     l1233:
   979                           
   980                           ;main.c: 127:     value = bcd;
   981     04AA  0874               	movf	bcd_to_ascii@bcd,w
   982     04AB  00F5               	movwf	bcd_to_ascii@value
   983     04AC                     l1235:
   984                           
   985                           ;main.c: 128:     value = (value & 0x0F);
   986     04AC  0875               	movf	bcd_to_ascii@value,w
   987     04AD  390F               	andlw	15
   988     04AE  00F5               	movwf	bcd_to_ascii@value
   989     04AF                     l1237:
   990                           
   991                           ;main.c: 129:     value = value | 0x30;
   992     04AF  0875               	movf	bcd_to_ascii@value,w
   993     04B0  3830               	iorlw	48
   994     04B1  00F5               	movwf	bcd_to_ascii@value
   995     04B2                     l1239:
   996                           
   997                           ;main.c: 130:     lcd_data(value);
   998     04B2  0875               	movf	bcd_to_ascii@value,w
   999     04B3  120A  118A  2435  120A  118A  	fcall	_lcd_data
  1000     04B8                     l85:
  1001     04B8  0008               	return
  1002     04B9                     __end_of_bcd_to_ascii:
  1003                           
  1004                           	psect	text5
  1005     0435                     __ptext5:	
  1006 ;; *************** function _lcd_data *****************
  1007 ;; Defined at:
  1008 ;;		line 89 in file "main.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;  data            1    wreg     unsigned char 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  data            1    2[COMMON] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1022 ;;      Params:         0       0       0       0       0
  1023 ;;      Locals:         1       0       0       0       0
  1024 ;;      Temps:          2       0       0       0       0
  1025 ;;      Totals:         3       0       0       0       0
  1026 ;;Total ram usage:        3 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;;		_lcd_word
  1033 ;;		_bcd_to_ascii
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037     0435                     _lcd_data:	
  1038                           ;psect for function _lcd_data
  1039                           
  1040                           
  1041                           ;incstack = 0
  1042                           ; Regs used in _lcd_data: [wreg]
  1043                           ;lcd_data@data stored from wreg
  1044     0435  00F2               	movwf	lcd_data@data
  1045     0436                     l1113:
  1046                           
  1047                           ;main.c: 90:     PORTBbits.RB2 = 1;
  1048     0436  1283               	bcf	3,5	;RP0=0, select bank0
  1049     0437  1303               	bcf	3,6	;RP1=0, select bank0
  1050     0438  1506               	bsf	6,2	;volatile
  1051                           
  1052                           ;main.c: 91:     PORTBbits.RB0 = 1;
  1053     0439  1406               	bsf	6,0	;volatile
  1054                           
  1055                           ;main.c: 92:     PORTBbits.RB1 = 0;
  1056     043A  1086               	bcf	6,1	;volatile
  1057     043B                     l1115:
  1058                           
  1059                           ;main.c: 93:     PORTD = data;
  1060     043B  0872               	movf	lcd_data@data,w
  1061     043C  0088               	movwf	8	;volatile
  1062                           
  1063                           ;main.c: 94:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1064     043D  3021               	movlw	33
  1065     043E  00F1               	movwf	??_lcd_data+1
  1066     043F  3076               	movlw	118
  1067     0440  00F0               	movwf	??_lcd_data
  1068     0441                     u1367:
  1069     0441  0BF0               	decfsz	??_lcd_data,f
  1070     0442  2C41               	goto	u1367
  1071     0443  0BF1               	decfsz	??_lcd_data+1,f
  1072     0444  2C41               	goto	u1367
  1073     0445  0000               	nop
  1074     0446                     l1117:
  1075                           
  1076                           ;main.c: 95:     PORTBbits.RB2 = 0;
  1077     0446  1283               	bcf	3,5	;RP0=0, select bank0
  1078     0447  1303               	bcf	3,6	;RP1=0, select bank0
  1079     0448  1106               	bcf	6,2	;volatile
  1080     0449                     l70:
  1081     0449  0008               	return
  1082     044A                     __end_of_lcd_data:
  1083                           
  1084                           	psect	text6
  1085     05AB                     __ptext6:	
  1086 ;; *************** function _DS1307_write *****************
  1087 ;; Defined at:
  1088 ;;		line 133 in file "main.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  _sec            1    wreg     unsigned char 
  1091 ;;  _min            1    0[BANK0 ] unsigned char 
  1092 ;;  _hour           1    1[BANK0 ] unsigned char 
  1093 ;;  _day            1    2[BANK0 ] unsigned char 
  1094 ;;  _date           1    3[BANK0 ] unsigned char 
  1095 ;;  _month          1    4[BANK0 ] unsigned char 
  1096 ;;  _year           1    5[BANK0 ] unsigned char 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  _sec            1    6[BANK0 ] unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       6       0       0       0
  1109 ;;      Locals:         0       1       0       0       0
  1110 ;;      Temps:          0       0       0       0       0
  1111 ;;      Totals:         0       7       0       0       0
  1112 ;;Total ram usage:        7 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 2
  1115 ;; This function calls:
  1116 ;;		_decimal_to_bcd
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122     05AB                     _DS1307_write:	
  1123                           ;psect for function _DS1307_write
  1124                           
  1125                           
  1126                           ;incstack = 0
  1127                           ; Regs used in _DS1307_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1128                           ;DS1307_write@_sec stored from wreg
  1129     05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1130     05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1131     05AD  00A6               	movwf	DS1307_write@_sec
  1132     05AE                     l1137:
  1133                           
  1134                           ;main.c: 135:     SSPCON2bits.SEN = 1;
  1135     05AE  1683               	bsf	3,5	;RP0=1, select bank1
  1136     05AF  1303               	bcf	3,6	;RP1=0, select bank1
  1137     05B0  1411               	bsf	17,0	;volatile
  1138     05B1                     l88:	
  1139                           ;main.c: 136:     while (SSPCON2bits.SEN);
  1140                           
  1141     05B1  1811               	btfsc	17,0	;volatile
  1142     05B2  2DB4               	goto	u881
  1143     05B3  2DB5               	goto	u880
  1144     05B4                     u881:
  1145     05B4  2DB1               	goto	l88
  1146     05B5                     u880:
  1147     05B5                     l90:
  1148                           
  1149                           ;main.c: 137:     PIR1bits.SSPIF = 0;
  1150     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1151     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1152     05B7  118C               	bcf	12,3	;volatile
  1153     05B8                     l1139:
  1154                           
  1155                           ;main.c: 140:     SSPBUF = 0xD0;
  1156     05B8  30D0               	movlw	208
  1157     05B9  0093               	movwf	19	;volatile
  1158     05BA                     l91:	
  1159                           ;main.c: 141:     while (!PIR1bits.SSPIF);
  1160                           
  1161     05BA  1D8C               	btfss	12,3	;volatile
  1162     05BB  2DBD               	goto	u891
  1163     05BC  2DBE               	goto	u890
  1164     05BD                     u891:
  1165     05BD  2DBA               	goto	l91
  1166     05BE                     u890:
  1167     05BE                     l93:
  1168                           
  1169                           ;main.c: 142:     PIR1bits.SSPIF = 0;
  1170     05BE  118C               	bcf	12,3	;volatile
  1171                           
  1172                           ;main.c: 143:     if (SSPCON2bits.ACKSTAT) {
  1173     05BF  1683               	bsf	3,5	;RP0=1, select bank1
  1174     05C0  1303               	bcf	3,6	;RP1=0, select bank1
  1175     05C1  1F11               	btfss	17,6	;volatile
  1176     05C2  2DC4               	goto	u901
  1177     05C3  2DC5               	goto	u900
  1178     05C4                     u901:
  1179     05C4  2DCB               	goto	l1143
  1180     05C5                     u900:
  1181     05C5                     l1141:
  1182                           
  1183                           ;main.c: 144:         SSPCON2bits.PEN = 1;
  1184     05C5  1511               	bsf	17,2	;volatile
  1185     05C6                     l95:	
  1186                           ;main.c: 145:         while (SSPCON2bits.PEN);
  1187                           
  1188     05C6  1911               	btfsc	17,2	;volatile
  1189     05C7  2DC9               	goto	u911
  1190     05C8  2DCA               	goto	u910
  1191     05C9                     u911:
  1192     05C9  2DC6               	goto	l95
  1193     05CA                     u910:
  1194     05CA  2E53               	goto	l98
  1195     05CB                     l1143:
  1196                           
  1197                           ;main.c: 150:     SSPBUF = 0x00;
  1198     05CB  1283               	bcf	3,5	;RP0=0, select bank0
  1199     05CC  1303               	bcf	3,6	;RP1=0, select bank0
  1200     05CD  0193               	clrf	19	;volatile
  1201     05CE                     l99:	
  1202                           ;main.c: 151:     while (!PIR1bits.SSPIF);
  1203                           
  1204     05CE  1D8C               	btfss	12,3	;volatile
  1205     05CF  2DD1               	goto	u921
  1206     05D0  2DD2               	goto	u920
  1207     05D1                     u921:
  1208     05D1  2DCE               	goto	l99
  1209     05D2                     u920:
  1210     05D2                     l101:
  1211                           
  1212                           ;main.c: 152:     PIR1bits.SSPIF = 0;
  1213     05D2  118C               	bcf	12,3	;volatile
  1214                           
  1215                           ;main.c: 153:     if (SSPCON2bits.ACKSTAT) {
  1216     05D3  1683               	bsf	3,5	;RP0=1, select bank1
  1217     05D4  1303               	bcf	3,6	;RP1=0, select bank1
  1218     05D5  1F11               	btfss	17,6	;volatile
  1219     05D6  2DD8               	goto	u931
  1220     05D7  2DD9               	goto	u930
  1221     05D8                     u931:
  1222     05D8  2DDF               	goto	l1147
  1223     05D9                     u930:
  1224     05D9                     l1145:
  1225                           
  1226                           ;main.c: 154:         SSPCON2bits.PEN = 1;
  1227     05D9  1511               	bsf	17,2	;volatile
  1228     05DA                     l103:	
  1229                           ;main.c: 155:         while (SSPCON2bits.PEN);
  1230                           
  1231     05DA  1911               	btfsc	17,2	;volatile
  1232     05DB  2DDD               	goto	u941
  1233     05DC  2DDE               	goto	u940
  1234     05DD                     u941:
  1235     05DD  2DDA               	goto	l103
  1236     05DE                     u940:
  1237     05DE  2E53               	goto	l98
  1238     05DF                     l1147:
  1239                           
  1240                           ;main.c: 159:     SSPBUF = decimal_to_bcd(_sec);
  1241     05DF  1283               	bcf	3,5	;RP0=0, select bank0
  1242     05E0  1303               	bcf	3,6	;RP1=0, select bank0
  1243     05E1  0826               	movf	DS1307_write@_sec,w
  1244     05E2  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
  1245     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1246     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1247     05E9  0093               	movwf	19	;volatile
  1248     05EA                     l106:	
  1249                           ;main.c: 160:     while (!PIR1bits.SSPIF);
  1250                           
  1251     05EA  1D8C               	btfss	12,3	;volatile
  1252     05EB  2DED               	goto	u951
  1253     05EC  2DEE               	goto	u950
  1254     05ED                     u951:
  1255     05ED  2DEA               	goto	l106
  1256     05EE                     u950:
  1257     05EE                     l108:
  1258                           
  1259                           ;main.c: 161:     PIR1bits.SSPIF = 0;
  1260     05EE  118C               	bcf	12,3	;volatile
  1261     05EF                     l1149:
  1262                           
  1263                           ;main.c: 163:     SSPBUF = decimal_to_bcd(_min);
  1264     05EF  0820               	movf	DS1307_write@_min,w
  1265     05F0  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
  1266     05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1267     05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1268     05F7  0093               	movwf	19	;volatile
  1269     05F8                     l109:	
  1270                           ;main.c: 164:     while (!PIR1bits.SSPIF);
  1271                           
  1272     05F8  1D8C               	btfss	12,3	;volatile
  1273     05F9  2DFB               	goto	u961
  1274     05FA  2DFC               	goto	u960
  1275     05FB                     u961:
  1276     05FB  2DF8               	goto	l109
  1277     05FC                     u960:
  1278     05FC                     l111:
  1279                           
  1280                           ;main.c: 165:     PIR1bits.SSPIF = 0;
  1281     05FC  118C               	bcf	12,3	;volatile
  1282     05FD                     l1151:
  1283                           
  1284                           ;main.c: 167:     SSPBUF = decimal_to_bcd(_hour);
  1285     05FD  0821               	movf	DS1307_write@_hour,w
  1286     05FE  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
  1287     0603  1283               	bcf	3,5	;RP0=0, select bank0
  1288     0604  1303               	bcf	3,6	;RP1=0, select bank0
  1289     0605  0093               	movwf	19	;volatile
  1290     0606                     l112:	
  1291                           ;main.c: 168:     while (!PIR1bits.SSPIF);
  1292                           
  1293     0606  1D8C               	btfss	12,3	;volatile
  1294     0607  2E09               	goto	u971
  1295     0608  2E0A               	goto	u970
  1296     0609                     u971:
  1297     0609  2E06               	goto	l112
  1298     060A                     u970:
  1299     060A                     l114:
  1300                           
  1301                           ;main.c: 169:     PIR1bits.SSPIF = 0;
  1302     060A  118C               	bcf	12,3	;volatile
  1303     060B                     l1153:
  1304                           
  1305                           ;main.c: 171:     SSPBUF = decimal_to_bcd(_day);
  1306     060B  0822               	movf	DS1307_write@_day,w
  1307     060C  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
  1308     0611  1283               	bcf	3,5	;RP0=0, select bank0
  1309     0612  1303               	bcf	3,6	;RP1=0, select bank0
  1310     0613  0093               	movwf	19	;volatile
  1311     0614                     l115:	
  1312                           ;main.c: 172:     while (!PIR1bits.SSPIF);
  1313                           
  1314     0614  1D8C               	btfss	12,3	;volatile
  1315     0615  2E17               	goto	u981
  1316     0616  2E18               	goto	u980
  1317     0617                     u981:
  1318     0617  2E14               	goto	l115
  1319     0618                     u980:
  1320     0618                     l117:
  1321                           
  1322                           ;main.c: 173:     PIR1bits.SSPIF = 0;
  1323     0618  118C               	bcf	12,3	;volatile
  1324     0619                     l1155:
  1325                           
  1326                           ;main.c: 175:     SSPBUF = decimal_to_bcd(_date);
  1327     0619  0823               	movf	DS1307_write@_date,w
  1328     061A  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
  1329     061F  1283               	bcf	3,5	;RP0=0, select bank0
  1330     0620  1303               	bcf	3,6	;RP1=0, select bank0
  1331     0621  0093               	movwf	19	;volatile
  1332     0622                     l118:	
  1333                           ;main.c: 176:     while (!PIR1bits.SSPIF);
  1334                           
  1335     0622  1D8C               	btfss	12,3	;volatile
  1336     0623  2E25               	goto	u991
  1337     0624  2E26               	goto	u990
  1338     0625                     u991:
  1339     0625  2E22               	goto	l118
  1340     0626                     u990:
  1341     0626                     l120:
  1342                           
  1343                           ;main.c: 177:     PIR1bits.SSPIF = 0;
  1344     0626  118C               	bcf	12,3	;volatile
  1345     0627                     l1157:
  1346                           
  1347                           ;main.c: 179:     SSPBUF = decimal_to_bcd(_month);
  1348     0627  0824               	movf	DS1307_write@_month,w
  1349     0628  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
  1350     062D  1283               	bcf	3,5	;RP0=0, select bank0
  1351     062E  1303               	bcf	3,6	;RP1=0, select bank0
  1352     062F  0093               	movwf	19	;volatile
  1353     0630                     l121:	
  1354                           ;main.c: 180:     while (!PIR1bits.SSPIF);
  1355                           
  1356     0630  1D8C               	btfss	12,3	;volatile
  1357     0631  2E33               	goto	u1001
  1358     0632  2E34               	goto	u1000
  1359     0633                     u1001:
  1360     0633  2E30               	goto	l121
  1361     0634                     u1000:
  1362     0634                     l123:
  1363                           
  1364                           ;main.c: 181:     PIR1bits.SSPIF = 0;
  1365     0634  118C               	bcf	12,3	;volatile
  1366     0635                     l1159:
  1367                           
  1368                           ;main.c: 183:     SSPBUF = decimal_to_bcd(_year);
  1369     0635  0825               	movf	DS1307_write@_year,w
  1370     0636  120A  118A  24B9  120A  118A  	fcall	_decimal_to_bcd
  1371     063B  1283               	bcf	3,5	;RP0=0, select bank0
  1372     063C  1303               	bcf	3,6	;RP1=0, select bank0
  1373     063D  0093               	movwf	19	;volatile
  1374     063E                     l124:	
  1375                           ;main.c: 184:     while (!PIR1bits.SSPIF);
  1376                           
  1377     063E  1D8C               	btfss	12,3	;volatile
  1378     063F  2E41               	goto	u1011
  1379     0640  2E42               	goto	u1010
  1380     0641                     u1011:
  1381     0641  2E3E               	goto	l124
  1382     0642                     u1010:
  1383     0642                     l126:
  1384                           
  1385                           ;main.c: 185:     PIR1bits.SSPIF = 0;
  1386     0642  118C               	bcf	12,3	;volatile
  1387     0643                     l1161:
  1388                           
  1389                           ;main.c: 187:     SSPBUF = 0x00;
  1390     0643  0193               	clrf	19	;volatile
  1391     0644                     l127:	
  1392                           ;main.c: 188:     while (!PIR1bits.SSPIF);
  1393                           
  1394     0644  1D8C               	btfss	12,3	;volatile
  1395     0645  2E47               	goto	u1021
  1396     0646  2E48               	goto	u1020
  1397     0647                     u1021:
  1398     0647  2E44               	goto	l127
  1399     0648                     u1020:
  1400     0648                     l129:
  1401                           
  1402                           ;main.c: 189:     PIR1bits.SSPIF = 0;
  1403     0648  118C               	bcf	12,3	;volatile
  1404                           
  1405                           ;main.c: 192:     SSPCON2bits.PEN = 1;
  1406     0649  1683               	bsf	3,5	;RP0=1, select bank1
  1407     064A  1303               	bcf	3,6	;RP1=0, select bank1
  1408     064B  1511               	bsf	17,2	;volatile
  1409     064C                     l130:	
  1410                           ;main.c: 193:     while (SSPCON2bits.PEN);
  1411                           
  1412     064C  1911               	btfsc	17,2	;volatile
  1413     064D  2E4F               	goto	u1031
  1414     064E  2E50               	goto	u1030
  1415     064F                     u1031:
  1416     064F  2E4C               	goto	l130
  1417     0650                     u1030:
  1418     0650                     l132:
  1419                           
  1420                           ;main.c: 194:     PIR1bits.SSPIF = 0;
  1421     0650  1283               	bcf	3,5	;RP0=0, select bank0
  1422     0651  1303               	bcf	3,6	;RP1=0, select bank0
  1423     0652  118C               	bcf	12,3	;volatile
  1424     0653                     l98:
  1425     0653  0008               	return
  1426     0654                     __end_of_DS1307_write:
  1427                           
  1428                           	psect	text7
  1429     04B9                     __ptext7:	
  1430 ;; *************** function _decimal_to_bcd *****************
  1431 ;; Defined at:
  1432 ;;		line 112 in file "main.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  decimal         1    wreg     unsigned char 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  decimal         1   13[COMMON] unsigned char 
  1437 ;;  hex             1   12[COMMON] unsigned char 
  1438 ;;  lsb             1   11[COMMON] unsigned char 
  1439 ;;  msb             1   10[COMMON] unsigned char 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      unsigned char 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1449 ;;      Params:         0       0       0       0       0
  1450 ;;      Locals:         4       0       0       0       0
  1451 ;;      Temps:          2       0       0       0       0
  1452 ;;      Totals:         6       0       0       0       0
  1453 ;;Total ram usage:        6 bytes
  1454 ;; Hardware stack levels used: 1
  1455 ;; Hardware stack levels required when called: 1
  1456 ;; This function calls:
  1457 ;;		___awdiv
  1458 ;;		___awmod
  1459 ;; This function is called by:
  1460 ;;		_DS1307_write
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464     04B9                     _decimal_to_bcd:	
  1465                           ;psect for function _decimal_to_bcd
  1466                           
  1467                           
  1468                           ;incstack = 0
  1469                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1470                           ;decimal_to_bcd@decimal stored from wreg
  1471     04B9  00FD               	movwf	decimal_to_bcd@decimal
  1472     04BA                     l1119:
  1473                           
  1474                           ;main.c: 113:     unsigned char msb, lsb, hex;;main.c: 114:     msb = decimal / 10;
  1475     04BA  300A               	movlw	10
  1476     04BB  00F0               	movwf	___awdiv@divisor
  1477     04BC  3000               	movlw	0
  1478     04BD  00F1               	movwf	___awdiv@divisor+1
  1479     04BE  087D               	movf	decimal_to_bcd@decimal,w
  1480     04BF  00F8               	movwf	??_decimal_to_bcd
  1481     04C0  01F9               	clrf	??_decimal_to_bcd+1
  1482     04C1  0878               	movf	??_decimal_to_bcd,w
  1483     04C2  00F2               	movwf	___awdiv@dividend
  1484     04C3  0879               	movf	??_decimal_to_bcd+1,w
  1485     04C4  00F3               	movwf	___awdiv@dividend+1
  1486     04C5  120A  118A  2544  120A  118A  	fcall	___awdiv
  1487     04CA  0870               	movf	?___awdiv,w
  1488     04CB  00FA               	movwf	decimal_to_bcd@msb
  1489                           
  1490                           ;main.c: 115:     lsb = decimal % 10;
  1491     04CC  300A               	movlw	10
  1492     04CD  00F0               	movwf	___awmod@divisor
  1493     04CE  3000               	movlw	0
  1494     04CF  00F1               	movwf	___awmod@divisor+1
  1495     04D0  087D               	movf	decimal_to_bcd@decimal,w
  1496     04D1  00F8               	movwf	??_decimal_to_bcd
  1497     04D2  01F9               	clrf	??_decimal_to_bcd+1
  1498     04D3  0878               	movf	??_decimal_to_bcd,w
  1499     04D4  00F2               	movwf	___awmod@dividend
  1500     04D5  0879               	movf	??_decimal_to_bcd+1,w
  1501     04D6  00F3               	movwf	___awmod@dividend+1
  1502     04D7  120A  118A  24EB  120A  118A  	fcall	___awmod
  1503     04DC  0870               	movf	?___awmod,w
  1504     04DD  00FB               	movwf	decimal_to_bcd@lsb
  1505     04DE                     l1121:
  1506                           
  1507                           ;main.c: 116:     hex = ((msb << 4) + lsb);
  1508     04DE  087A               	movf	decimal_to_bcd@msb,w
  1509     04DF  00F8               	movwf	??_decimal_to_bcd
  1510     04E0  3004               	movlw	4
  1511     04E1                     u865:
  1512     04E1  1003               	clrc
  1513     04E2  0DF8               	rlf	??_decimal_to_bcd,f
  1514     04E3  3EFF               	addlw	-1
  1515     04E4  1D03               	skipz
  1516     04E5  2CE1               	goto	u865
  1517     04E6  087B               	movf	decimal_to_bcd@lsb,w
  1518     04E7  0778               	addwf	??_decimal_to_bcd,w
  1519     04E8  00FC               	movwf	decimal_to_bcd@hex
  1520     04E9                     l1123:
  1521                           
  1522                           ;main.c: 117:     return hex;
  1523     04E9  087C               	movf	decimal_to_bcd@hex,w
  1524     04EA                     l82:
  1525     04EA  0008               	return
  1526     04EB                     __end_of_decimal_to_bcd:
  1527                           
  1528                           	psect	text8
  1529     04EB                     __ptext8:	
  1530 ;; *************** function ___awmod *****************
  1531 ;; Defined at:
  1532 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  divisor         2    0[COMMON] int 
  1535 ;;  dividend        2    2[COMMON] int 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  sign            1    5[COMMON] unsigned char 
  1538 ;;  counter         1    4[COMMON] unsigned char 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  2    0[COMMON] int 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0, btemp+1
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1548 ;;      Params:         4       0       0       0       0
  1549 ;;      Locals:         2       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0
  1551 ;;      Totals:         6       0       0       0       0
  1552 ;;Total ram usage:        6 bytes
  1553 ;; Hardware stack levels used: 1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_decimal_to_bcd
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561     04EB                     ___awmod:	
  1562                           ;psect for function ___awmod
  1563                           
  1564     04EB                     l1069:	
  1565                           ;incstack = 0
  1566                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1567                           
  1568     04EB  01F5               	clrf	___awmod@sign
  1569     04EC                     l1071:
  1570     04EC  1FF3               	btfss	___awmod@dividend+1,7
  1571     04ED  2CEF               	goto	u771
  1572     04EE  2CF0               	goto	u770
  1573     04EF                     u771:
  1574     04EF  2CF7               	goto	l1077
  1575     04F0                     u770:
  1576     04F0                     l1073:
  1577     04F0  09F2               	comf	___awmod@dividend,f
  1578     04F1  09F3               	comf	___awmod@dividend+1,f
  1579     04F2  0AF2               	incf	___awmod@dividend,f
  1580     04F3  1903               	skipnz
  1581     04F4  0AF3               	incf	___awmod@dividend+1,f
  1582     04F5                     l1075:
  1583     04F5  01F5               	clrf	___awmod@sign
  1584     04F6  0AF5               	incf	___awmod@sign,f
  1585     04F7                     l1077:
  1586     04F7  1FF1               	btfss	___awmod@divisor+1,7
  1587     04F8  2CFA               	goto	u781
  1588     04F9  2CFB               	goto	u780
  1589     04FA                     u781:
  1590     04FA  2D00               	goto	l1081
  1591     04FB                     u780:
  1592     04FB                     l1079:
  1593     04FB  09F0               	comf	___awmod@divisor,f
  1594     04FC  09F1               	comf	___awmod@divisor+1,f
  1595     04FD  0AF0               	incf	___awmod@divisor,f
  1596     04FE  1903               	skipnz
  1597     04FF  0AF1               	incf	___awmod@divisor+1,f
  1598     0500                     l1081:
  1599     0500  0870               	movf	___awmod@divisor,w
  1600     0501  0471               	iorwf	___awmod@divisor+1,w
  1601     0502  1903               	btfsc	3,2
  1602     0503  2D05               	goto	u791
  1603     0504  2D06               	goto	u790
  1604     0505                     u791:
  1605     0505  2D35               	goto	l1099
  1606     0506                     u790:
  1607     0506                     l1083:
  1608     0506  01F4               	clrf	___awmod@counter
  1609     0507  0AF4               	incf	___awmod@counter,f
  1610     0508  2D14               	goto	l1089
  1611     0509                     l1085:
  1612     0509  3001               	movlw	1
  1613     050A                     u805:
  1614     050A  1003               	clrc
  1615     050B  0DF0               	rlf	___awmod@divisor,f
  1616     050C  0DF1               	rlf	___awmod@divisor+1,f
  1617     050D  3EFF               	addlw	-1
  1618     050E  1D03               	skipz
  1619     050F  2D0A               	goto	u805
  1620     0510                     l1087:
  1621     0510  3001               	movlw	1
  1622     0511  00FF               	movwf	btemp+1
  1623     0512  087F               	movf	btemp+1,w
  1624     0513  07F4               	addwf	___awmod@counter,f
  1625     0514                     l1089:
  1626     0514  1FF1               	btfss	___awmod@divisor+1,7
  1627     0515  2D17               	goto	u811
  1628     0516  2D18               	goto	u810
  1629     0517                     u811:
  1630     0517  2D09               	goto	l1085
  1631     0518                     u810:
  1632     0518                     l1091:
  1633     0518  0871               	movf	___awmod@divisor+1,w
  1634     0519  0273               	subwf	___awmod@dividend+1,w
  1635     051A  1D03               	skipz
  1636     051B  2D1E               	goto	u825
  1637     051C  0870               	movf	___awmod@divisor,w
  1638     051D  0272               	subwf	___awmod@dividend,w
  1639     051E                     u825:
  1640     051E  1C03               	skipc
  1641     051F  2D21               	goto	u821
  1642     0520  2D22               	goto	u820
  1643     0521                     u821:
  1644     0521  2D28               	goto	l1095
  1645     0522                     u820:
  1646     0522                     l1093:
  1647     0522  0870               	movf	___awmod@divisor,w
  1648     0523  02F2               	subwf	___awmod@dividend,f
  1649     0524  0871               	movf	___awmod@divisor+1,w
  1650     0525  1C03               	skipc
  1651     0526  03F3               	decf	___awmod@dividend+1,f
  1652     0527  02F3               	subwf	___awmod@dividend+1,f
  1653     0528                     l1095:
  1654     0528  3001               	movlw	1
  1655     0529                     u835:
  1656     0529  1003               	clrc
  1657     052A  0CF1               	rrf	___awmod@divisor+1,f
  1658     052B  0CF0               	rrf	___awmod@divisor,f
  1659     052C  3EFF               	addlw	-1
  1660     052D  1D03               	skipz
  1661     052E  2D29               	goto	u835
  1662     052F                     l1097:
  1663     052F  3001               	movlw	1
  1664     0530  02F4               	subwf	___awmod@counter,f
  1665     0531  1D03               	btfss	3,2
  1666     0532  2D34               	goto	u841
  1667     0533  2D35               	goto	u840
  1668     0534                     u841:
  1669     0534  2D18               	goto	l1091
  1670     0535                     u840:
  1671     0535                     l1099:
  1672     0535  0875               	movf	___awmod@sign,w
  1673     0536  1903               	btfsc	3,2
  1674     0537  2D39               	goto	u851
  1675     0538  2D3A               	goto	u850
  1676     0539                     u851:
  1677     0539  2D3F               	goto	l1103
  1678     053A                     u850:
  1679     053A                     l1101:
  1680     053A  09F2               	comf	___awmod@dividend,f
  1681     053B  09F3               	comf	___awmod@dividend+1,f
  1682     053C  0AF2               	incf	___awmod@dividend,f
  1683     053D  1903               	skipnz
  1684     053E  0AF3               	incf	___awmod@dividend+1,f
  1685     053F                     l1103:
  1686     053F  0873               	movf	___awmod@dividend+1,w
  1687     0540  00F1               	movwf	?___awmod+1
  1688     0541  0872               	movf	___awmod@dividend,w
  1689     0542  00F0               	movwf	?___awmod
  1690     0543                     l465:
  1691     0543  0008               	return
  1692     0544                     __end_of___awmod:
  1693                           
  1694                           	psect	text9
  1695     0544                     __ptext9:	
  1696 ;; *************** function ___awdiv *****************
  1697 ;; Defined at:
  1698 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  divisor         2    0[COMMON] int 
  1701 ;;  dividend        2    2[COMMON] int 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  quotient        2    6[COMMON] int 
  1704 ;;  sign            1    5[COMMON] unsigned char 
  1705 ;;  counter         1    4[COMMON] unsigned char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  2    0[COMMON] int 
  1708 ;; Registers used:
  1709 ;;		wreg, status,2, status,0, btemp+1
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         4       0       0       0       0
  1716 ;;      Locals:         4       0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0
  1718 ;;      Totals:         8       0       0       0       0
  1719 ;;Total ram usage:        8 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_decimal_to_bcd
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728     0544                     ___awdiv:	
  1729                           ;psect for function ___awdiv
  1730                           
  1731     0544                     l1025:	
  1732                           ;incstack = 0
  1733                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1734                           
  1735     0544  01F5               	clrf	___awdiv@sign
  1736     0545                     l1027:
  1737     0545  1FF1               	btfss	___awdiv@divisor+1,7
  1738     0546  2D48               	goto	u671
  1739     0547  2D49               	goto	u670
  1740     0548                     u671:
  1741     0548  2D50               	goto	l1033
  1742     0549                     u670:
  1743     0549                     l1029:
  1744     0549  09F0               	comf	___awdiv@divisor,f
  1745     054A  09F1               	comf	___awdiv@divisor+1,f
  1746     054B  0AF0               	incf	___awdiv@divisor,f
  1747     054C  1903               	skipnz
  1748     054D  0AF1               	incf	___awdiv@divisor+1,f
  1749     054E                     l1031:
  1750     054E  01F5               	clrf	___awdiv@sign
  1751     054F  0AF5               	incf	___awdiv@sign,f
  1752     0550                     l1033:
  1753     0550  1FF3               	btfss	___awdiv@dividend+1,7
  1754     0551  2D53               	goto	u681
  1755     0552  2D54               	goto	u680
  1756     0553                     u681:
  1757     0553  2D5D               	goto	l1039
  1758     0554                     u680:
  1759     0554                     l1035:
  1760     0554  09F2               	comf	___awdiv@dividend,f
  1761     0555  09F3               	comf	___awdiv@dividend+1,f
  1762     0556  0AF2               	incf	___awdiv@dividend,f
  1763     0557  1903               	skipnz
  1764     0558  0AF3               	incf	___awdiv@dividend+1,f
  1765     0559                     l1037:
  1766     0559  3001               	movlw	1
  1767     055A  00FF               	movwf	btemp+1
  1768     055B  087F               	movf	btemp+1,w
  1769     055C  06F5               	xorwf	___awdiv@sign,f
  1770     055D                     l1039:
  1771     055D  01F6               	clrf	___awdiv@quotient
  1772     055E  01F7               	clrf	___awdiv@quotient+1
  1773     055F                     l1041:
  1774     055F  0870               	movf	___awdiv@divisor,w
  1775     0560  0471               	iorwf	___awdiv@divisor+1,w
  1776     0561  1903               	btfsc	3,2
  1777     0562  2D64               	goto	u691
  1778     0563  2D65               	goto	u690
  1779     0564                     u691:
  1780     0564  2D9C               	goto	l1061
  1781     0565                     u690:
  1782     0565                     l1043:
  1783     0565  01F4               	clrf	___awdiv@counter
  1784     0566  0AF4               	incf	___awdiv@counter,f
  1785     0567  2D73               	goto	l1049
  1786     0568                     l1045:
  1787     0568  3001               	movlw	1
  1788     0569                     u705:
  1789     0569  1003               	clrc
  1790     056A  0DF0               	rlf	___awdiv@divisor,f
  1791     056B  0DF1               	rlf	___awdiv@divisor+1,f
  1792     056C  3EFF               	addlw	-1
  1793     056D  1D03               	skipz
  1794     056E  2D69               	goto	u705
  1795     056F                     l1047:
  1796     056F  3001               	movlw	1
  1797     0570  00FF               	movwf	btemp+1
  1798     0571  087F               	movf	btemp+1,w
  1799     0572  07F4               	addwf	___awdiv@counter,f
  1800     0573                     l1049:
  1801     0573  1FF1               	btfss	___awdiv@divisor+1,7
  1802     0574  2D76               	goto	u711
  1803     0575  2D77               	goto	u710
  1804     0576                     u711:
  1805     0576  2D68               	goto	l1045
  1806     0577                     u710:
  1807     0577                     l1051:
  1808     0577  3001               	movlw	1
  1809     0578                     u725:
  1810     0578  1003               	clrc
  1811     0579  0DF6               	rlf	___awdiv@quotient,f
  1812     057A  0DF7               	rlf	___awdiv@quotient+1,f
  1813     057B  3EFF               	addlw	-1
  1814     057C  1D03               	skipz
  1815     057D  2D78               	goto	u725
  1816     057E  0871               	movf	___awdiv@divisor+1,w
  1817     057F  0273               	subwf	___awdiv@dividend+1,w
  1818     0580  1D03               	skipz
  1819     0581  2D84               	goto	u735
  1820     0582  0870               	movf	___awdiv@divisor,w
  1821     0583  0272               	subwf	___awdiv@dividend,w
  1822     0584                     u735:
  1823     0584  1C03               	skipc
  1824     0585  2D87               	goto	u731
  1825     0586  2D88               	goto	u730
  1826     0587                     u731:
  1827     0587  2D8F               	goto	l1057
  1828     0588                     u730:
  1829     0588                     l1053:
  1830     0588  0870               	movf	___awdiv@divisor,w
  1831     0589  02F2               	subwf	___awdiv@dividend,f
  1832     058A  0871               	movf	___awdiv@divisor+1,w
  1833     058B  1C03               	skipc
  1834     058C  03F3               	decf	___awdiv@dividend+1,f
  1835     058D  02F3               	subwf	___awdiv@dividend+1,f
  1836     058E                     l1055:
  1837     058E  1476               	bsf	___awdiv@quotient,0
  1838     058F                     l1057:
  1839     058F  3001               	movlw	1
  1840     0590                     u745:
  1841     0590  1003               	clrc
  1842     0591  0CF1               	rrf	___awdiv@divisor+1,f
  1843     0592  0CF0               	rrf	___awdiv@divisor,f
  1844     0593  3EFF               	addlw	-1
  1845     0594  1D03               	skipz
  1846     0595  2D90               	goto	u745
  1847     0596                     l1059:
  1848     0596  3001               	movlw	1
  1849     0597  02F4               	subwf	___awdiv@counter,f
  1850     0598  1D03               	btfss	3,2
  1851     0599  2D9B               	goto	u751
  1852     059A  2D9C               	goto	u750
  1853     059B                     u751:
  1854     059B  2D77               	goto	l1051
  1855     059C                     u750:
  1856     059C                     l1061:
  1857     059C  0875               	movf	___awdiv@sign,w
  1858     059D  1903               	btfsc	3,2
  1859     059E  2DA0               	goto	u761
  1860     059F  2DA1               	goto	u760
  1861     05A0                     u761:
  1862     05A0  2DA6               	goto	l1065
  1863     05A1                     u760:
  1864     05A1                     l1063:
  1865     05A1  09F6               	comf	___awdiv@quotient,f
  1866     05A2  09F7               	comf	___awdiv@quotient+1,f
  1867     05A3  0AF6               	incf	___awdiv@quotient,f
  1868     05A4  1903               	skipnz
  1869     05A5  0AF7               	incf	___awdiv@quotient+1,f
  1870     05A6                     l1065:
  1871     05A6  0877               	movf	___awdiv@quotient+1,w
  1872     05A7  00F1               	movwf	?___awdiv+1
  1873     05A8  0876               	movf	___awdiv@quotient,w
  1874     05A9  00F0               	movwf	?___awdiv
  1875     05AA                     l452:
  1876     05AA  0008               	return
  1877     05AB                     __end_of___awdiv:
  1878                           
  1879                           	psect	text10
  1880     0715                     __ptext10:	
  1881 ;; *************** function _DS1307_read *****************
  1882 ;; Defined at:
  1883 ;;		line 196 in file "main.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  slave_addres    1    wreg     unsigned char 
  1886 ;;  register_add    1    0[COMMON] unsigned char 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  slave_addres    1    1[COMMON] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1898 ;;      Params:         1       0       0       0       0
  1899 ;;      Locals:         1       0       0       0       0
  1900 ;;      Temps:          0       0       0       0       0
  1901 ;;      Totals:         2       0       0       0       0
  1902 ;;Total ram usage:        2 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911     0715                     _DS1307_read:	
  1912                           ;psect for function _DS1307_read
  1913                           
  1914                           
  1915                           ;incstack = 0
  1916                           ; Regs used in _DS1307_read: [wreg+status,2+status,0]
  1917                           ;DS1307_read@slave_address stored from wreg
  1918     0715  00F1               	movwf	DS1307_read@slave_address
  1919     0716                     l1163:
  1920                           
  1921                           ;main.c: 198:     SSPCON2bits.SEN = 1;
  1922     0716  1683               	bsf	3,5	;RP0=1, select bank1
  1923     0717  1303               	bcf	3,6	;RP1=0, select bank1
  1924     0718  1411               	bsf	17,0	;volatile
  1925     0719                     l135:	
  1926                           ;main.c: 199:     while (SSPCON2bits.SEN);
  1927                           
  1928     0719  1811               	btfsc	17,0	;volatile
  1929     071A  2F1C               	goto	u1041
  1930     071B  2F1D               	goto	u1040
  1931     071C                     u1041:
  1932     071C  2F19               	goto	l135
  1933     071D                     u1040:
  1934     071D                     l137:
  1935                           
  1936                           ;main.c: 200:     PIR1bits.SSPIF = 0;
  1937     071D  1283               	bcf	3,5	;RP0=0, select bank0
  1938     071E  1303               	bcf	3,6	;RP1=0, select bank0
  1939     071F  118C               	bcf	12,3	;volatile
  1940     0720                     l1165:
  1941                           
  1942                           ;main.c: 203:     SSPBUF = slave_address;
  1943     0720  0871               	movf	DS1307_read@slave_address,w
  1944     0721  0093               	movwf	19	;volatile
  1945     0722                     l138:	
  1946                           ;main.c: 204:     while (!PIR1bits.SSPIF);
  1947                           
  1948     0722  1D8C               	btfss	12,3	;volatile
  1949     0723  2F25               	goto	u1051
  1950     0724  2F26               	goto	u1050
  1951     0725                     u1051:
  1952     0725  2F22               	goto	l138
  1953     0726                     u1050:
  1954     0726                     l140:
  1955                           
  1956                           ;main.c: 205:     PIR1bits.SSPIF = 0;
  1957     0726  118C               	bcf	12,3	;volatile
  1958                           
  1959                           ;main.c: 206:     if (SSPCON2bits.ACKSTAT) {
  1960     0727  1683               	bsf	3,5	;RP0=1, select bank1
  1961     0728  1303               	bcf	3,6	;RP1=0, select bank1
  1962     0729  1F11               	btfss	17,6	;volatile
  1963     072A  2F2C               	goto	u1061
  1964     072B  2F2D               	goto	u1060
  1965     072C                     u1061:
  1966     072C  2F33               	goto	l1169
  1967     072D                     u1060:
  1968     072D                     l1167:
  1969                           
  1970                           ;main.c: 207:         SSPCON2bits.PEN = 1;
  1971     072D  1511               	bsf	17,2	;volatile
  1972     072E                     l142:	
  1973                           ;main.c: 208:         while (SSPCON2bits.PEN);
  1974                           
  1975     072E  1911               	btfsc	17,2	;volatile
  1976     072F  2F31               	goto	u1071
  1977     0730  2F32               	goto	u1070
  1978     0731                     u1071:
  1979     0731  2F2E               	goto	l142
  1980     0732                     u1070:
  1981     0732  2FF1               	goto	l145
  1982     0733                     l1169:
  1983                           
  1984                           ;main.c: 213:     SSPBUF = register_address;
  1985     0733  0870               	movf	DS1307_read@register_address,w
  1986     0734  1283               	bcf	3,5	;RP0=0, select bank0
  1987     0735  1303               	bcf	3,6	;RP1=0, select bank0
  1988     0736  0093               	movwf	19	;volatile
  1989     0737                     l146:	
  1990                           ;main.c: 214:     while (!PIR1bits.SSPIF);
  1991                           
  1992     0737  1D8C               	btfss	12,3	;volatile
  1993     0738  2F3A               	goto	u1081
  1994     0739  2F3B               	goto	u1080
  1995     073A                     u1081:
  1996     073A  2F37               	goto	l146
  1997     073B                     u1080:
  1998     073B                     l148:
  1999                           
  2000                           ;main.c: 215:     PIR1bits.SSPIF = 0;
  2001     073B  118C               	bcf	12,3	;volatile
  2002                           
  2003                           ;main.c: 216:     if (SSPCON2bits.ACKSTAT) {
  2004     073C  1683               	bsf	3,5	;RP0=1, select bank1
  2005     073D  1303               	bcf	3,6	;RP1=0, select bank1
  2006     073E  1F11               	btfss	17,6	;volatile
  2007     073F  2F41               	goto	u1091
  2008     0740  2F42               	goto	u1090
  2009     0741                     u1091:
  2010     0741  2F48               	goto	l149
  2011     0742                     u1090:
  2012     0742                     l1171:
  2013                           
  2014                           ;main.c: 217:         SSPCON2bits.PEN = 1;
  2015     0742  1511               	bsf	17,2	;volatile
  2016     0743                     l150:	
  2017                           ;main.c: 218:         while (SSPCON2bits.PEN);
  2018                           
  2019     0743  1911               	btfsc	17,2	;volatile
  2020     0744  2F46               	goto	u1101
  2021     0745  2F47               	goto	u1100
  2022     0746                     u1101:
  2023     0746  2F43               	goto	l150
  2024     0747                     u1100:
  2025     0747  2FF1               	goto	l145
  2026     0748                     l149:	
  2027                           ;main.c: 220:     }
  2028                           
  2029                           
  2030                           ;main.c: 223:     SSPCON2bits.RSEN = 1;
  2031     0748  1491               	bsf	17,1	;volatile
  2032     0749                     l153:	
  2033                           ;main.c: 224:     while (SSPCON2bits.RSEN);
  2034                           
  2035     0749  1891               	btfsc	17,1	;volatile
  2036     074A  2F4C               	goto	u1111
  2037     074B  2F4D               	goto	u1110
  2038     074C                     u1111:
  2039     074C  2F49               	goto	l153
  2040     074D                     u1110:
  2041     074D                     l155:
  2042                           
  2043                           ;main.c: 225:     PIR1bits.SSPIF = 0;
  2044     074D  1283               	bcf	3,5	;RP0=0, select bank0
  2045     074E  1303               	bcf	3,6	;RP1=0, select bank0
  2046     074F  118C               	bcf	12,3	;volatile
  2047     0750                     l1173:
  2048                           
  2049                           ;main.c: 228:     SSPBUF = slave_address + 1;
  2050     0750  0871               	movf	DS1307_read@slave_address,w
  2051     0751  3E01               	addlw	1
  2052     0752  0093               	movwf	19	;volatile
  2053     0753                     l156:	
  2054                           ;main.c: 229:     while (!PIR1bits.SSPIF);
  2055                           
  2056     0753  1D8C               	btfss	12,3	;volatile
  2057     0754  2F56               	goto	u1121
  2058     0755  2F57               	goto	u1120
  2059     0756                     u1121:
  2060     0756  2F53               	goto	l156
  2061     0757                     u1120:
  2062     0757                     l158:
  2063                           
  2064                           ;main.c: 230:     PIR1bits.SSPIF = 0;
  2065     0757  118C               	bcf	12,3	;volatile
  2066                           
  2067                           ;main.c: 231:     if (SSPCON2bits.ACKSTAT) {
  2068     0758  1683               	bsf	3,5	;RP0=1, select bank1
  2069     0759  1303               	bcf	3,6	;RP1=0, select bank1
  2070     075A  1F11               	btfss	17,6	;volatile
  2071     075B  2F5D               	goto	u1131
  2072     075C  2F5E               	goto	u1130
  2073     075D                     u1131:
  2074     075D  2F64               	goto	l159
  2075     075E                     u1130:
  2076     075E                     l1175:
  2077                           
  2078                           ;main.c: 232:         SSPCON2bits.PEN = 1;
  2079     075E  1511               	bsf	17,2	;volatile
  2080     075F                     l160:	
  2081                           ;main.c: 233:         while (SSPCON2bits.PEN);
  2082                           
  2083     075F  1911               	btfsc	17,2	;volatile
  2084     0760  2F62               	goto	u1141
  2085     0761  2F63               	goto	u1140
  2086     0762                     u1141:
  2087     0762  2F5F               	goto	l160
  2088     0763                     u1140:
  2089     0763  2FF1               	goto	l145
  2090     0764                     l159:	
  2091                           ;main.c: 235:     }
  2092                           
  2093                           
  2094                           ;main.c: 237:     SSPCON2bits.RCEN = 1;
  2095     0764  1591               	bsf	17,3	;volatile
  2096     0765                     l163:	
  2097                           ;main.c: 238:     while (!SSPSTATbits.BF);
  2098                           
  2099     0765  1C14               	btfss	20,0	;volatile
  2100     0766  2F68               	goto	u1151
  2101     0767  2F69               	goto	u1150
  2102     0768                     u1151:
  2103     0768  2F65               	goto	l163
  2104     0769                     u1150:
  2105     0769                     l1177:
  2106                           
  2107                           ;main.c: 239:     _sec = SSPBUF;
  2108     0769  1283               	bcf	3,5	;RP0=0, select bank0
  2109     076A  1303               	bcf	3,6	;RP1=0, select bank0
  2110     076B  0813               	movf	19,w	;volatile
  2111     076C  00B1               	movwf	__sec
  2112     076D                     l1179:
  2113                           
  2114                           ;main.c: 241:     SSPCON2bits.ACKDT = 0;
  2115     076D  1683               	bsf	3,5	;RP0=1, select bank1
  2116     076E  1303               	bcf	3,6	;RP1=0, select bank1
  2117     076F  1291               	bcf	17,5	;volatile
  2118     0770                     l1181:
  2119                           
  2120                           ;main.c: 242:     SSPCON2bits.ACKEN = 1;
  2121     0770  1611               	bsf	17,4	;volatile
  2122     0771                     l166:	
  2123                           ;main.c: 243:     while (SSPCON2bits.ACKEN);
  2124                           
  2125     0771  1A11               	btfsc	17,4	;volatile
  2126     0772  2F74               	goto	u1161
  2127     0773  2F75               	goto	u1160
  2128     0774                     u1161:
  2129     0774  2F71               	goto	l166
  2130     0775                     u1160:
  2131     0775                     l168:
  2132                           
  2133                           ;main.c: 245:     SSPCON2bits.RCEN = 1;
  2134     0775  1591               	bsf	17,3	;volatile
  2135     0776                     l169:	
  2136                           ;main.c: 246:     while (!SSPSTATbits.BF);
  2137                           
  2138     0776  1C14               	btfss	20,0	;volatile
  2139     0777  2F79               	goto	u1171
  2140     0778  2F7A               	goto	u1170
  2141     0779                     u1171:
  2142     0779  2F76               	goto	l169
  2143     077A                     u1170:
  2144     077A                     l1183:
  2145                           
  2146                           ;main.c: 247:     _min = SSPBUF;
  2147     077A  1283               	bcf	3,5	;RP0=0, select bank0
  2148     077B  1303               	bcf	3,6	;RP1=0, select bank0
  2149     077C  0813               	movf	19,w	;volatile
  2150     077D  00B0               	movwf	__min
  2151     077E                     l1185:
  2152                           
  2153                           ;main.c: 249:     SSPCON2bits.ACKDT = 0;
  2154     077E  1683               	bsf	3,5	;RP0=1, select bank1
  2155     077F  1303               	bcf	3,6	;RP1=0, select bank1
  2156     0780  1291               	bcf	17,5	;volatile
  2157     0781                     l1187:
  2158                           
  2159                           ;main.c: 250:     SSPCON2bits.ACKEN = 1;
  2160     0781  1611               	bsf	17,4	;volatile
  2161     0782                     l172:	
  2162                           ;main.c: 251:     while (SSPCON2bits.ACKEN);
  2163                           
  2164     0782  1A11               	btfsc	17,4	;volatile
  2165     0783  2F85               	goto	u1181
  2166     0784  2F86               	goto	u1180
  2167     0785                     u1181:
  2168     0785  2F82               	goto	l172
  2169     0786                     u1180:
  2170     0786                     l174:
  2171                           
  2172                           ;main.c: 253:     SSPCON2bits.RCEN = 1;
  2173     0786  1591               	bsf	17,3	;volatile
  2174     0787                     l175:	
  2175                           ;main.c: 254:     while (!SSPSTATbits.BF);
  2176                           
  2177     0787  1C14               	btfss	20,0	;volatile
  2178     0788  2F8A               	goto	u1191
  2179     0789  2F8B               	goto	u1190
  2180     078A                     u1191:
  2181     078A  2F87               	goto	l175
  2182     078B                     u1190:
  2183     078B                     l1189:
  2184                           
  2185                           ;main.c: 255:     _hour = SSPBUF;
  2186     078B  1283               	bcf	3,5	;RP0=0, select bank0
  2187     078C  1303               	bcf	3,6	;RP1=0, select bank0
  2188     078D  0813               	movf	19,w	;volatile
  2189     078E  00AF               	movwf	__hour
  2190     078F                     l1191:
  2191                           
  2192                           ;main.c: 257:     SSPCON2bits.ACKDT = 0;
  2193     078F  1683               	bsf	3,5	;RP0=1, select bank1
  2194     0790  1303               	bcf	3,6	;RP1=0, select bank1
  2195     0791  1291               	bcf	17,5	;volatile
  2196     0792                     l1193:
  2197                           
  2198                           ;main.c: 258:     SSPCON2bits.ACKEN = 1;
  2199     0792  1611               	bsf	17,4	;volatile
  2200     0793                     l178:	
  2201                           ;main.c: 259:     while (SSPCON2bits.ACKEN);
  2202                           
  2203     0793  1A11               	btfsc	17,4	;volatile
  2204     0794  2F96               	goto	u1201
  2205     0795  2F97               	goto	u1200
  2206     0796                     u1201:
  2207     0796  2F93               	goto	l178
  2208     0797                     u1200:
  2209     0797                     l180:
  2210                           
  2211                           ;main.c: 261:     SSPCON2bits.RCEN = 1;
  2212     0797  1591               	bsf	17,3	;volatile
  2213     0798                     l181:	
  2214                           ;main.c: 262:     while (!SSPSTATbits.BF);
  2215                           
  2216     0798  1C14               	btfss	20,0	;volatile
  2217     0799  2F9B               	goto	u1211
  2218     079A  2F9C               	goto	u1210
  2219     079B                     u1211:
  2220     079B  2F98               	goto	l181
  2221     079C                     u1210:
  2222     079C                     l1195:
  2223                           
  2224                           ;main.c: 263:     _day = SSPBUF;
  2225     079C  1283               	bcf	3,5	;RP0=0, select bank0
  2226     079D  1303               	bcf	3,6	;RP1=0, select bank0
  2227     079E  0813               	movf	19,w	;volatile
  2228     079F  00AE               	movwf	__day
  2229     07A0                     l1197:
  2230                           
  2231                           ;main.c: 265:     SSPCON2bits.ACKDT = 0;
  2232     07A0  1683               	bsf	3,5	;RP0=1, select bank1
  2233     07A1  1303               	bcf	3,6	;RP1=0, select bank1
  2234     07A2  1291               	bcf	17,5	;volatile
  2235     07A3                     l1199:
  2236                           
  2237                           ;main.c: 266:     SSPCON2bits.ACKEN = 1;
  2238     07A3  1611               	bsf	17,4	;volatile
  2239     07A4                     l184:	
  2240                           ;main.c: 267:     while (SSPCON2bits.ACKEN);
  2241                           
  2242     07A4  1A11               	btfsc	17,4	;volatile
  2243     07A5  2FA7               	goto	u1221
  2244     07A6  2FA8               	goto	u1220
  2245     07A7                     u1221:
  2246     07A7  2FA4               	goto	l184
  2247     07A8                     u1220:
  2248     07A8                     l186:
  2249                           
  2250                           ;main.c: 269:     SSPCON2bits.RCEN = 1;
  2251     07A8  1591               	bsf	17,3	;volatile
  2252     07A9                     l187:	
  2253                           ;main.c: 270:     while (!SSPSTATbits.BF);
  2254                           
  2255     07A9  1C14               	btfss	20,0	;volatile
  2256     07AA  2FAC               	goto	u1231
  2257     07AB  2FAD               	goto	u1230
  2258     07AC                     u1231:
  2259     07AC  2FA9               	goto	l187
  2260     07AD                     u1230:
  2261     07AD                     l1201:
  2262                           
  2263                           ;main.c: 271:     _date = SSPBUF;
  2264     07AD  1283               	bcf	3,5	;RP0=0, select bank0
  2265     07AE  1303               	bcf	3,6	;RP1=0, select bank0
  2266     07AF  0813               	movf	19,w	;volatile
  2267     07B0  00AD               	movwf	__date
  2268     07B1                     l1203:
  2269                           
  2270                           ;main.c: 273:     SSPCON2bits.ACKDT = 0;
  2271     07B1  1683               	bsf	3,5	;RP0=1, select bank1
  2272     07B2  1303               	bcf	3,6	;RP1=0, select bank1
  2273     07B3  1291               	bcf	17,5	;volatile
  2274     07B4                     l1205:
  2275                           
  2276                           ;main.c: 274:     SSPCON2bits.ACKEN = 1;
  2277     07B4  1611               	bsf	17,4	;volatile
  2278     07B5                     l190:	
  2279                           ;main.c: 275:     while (SSPCON2bits.ACKEN);
  2280                           
  2281     07B5  1A11               	btfsc	17,4	;volatile
  2282     07B6  2FB8               	goto	u1241
  2283     07B7  2FB9               	goto	u1240
  2284     07B8                     u1241:
  2285     07B8  2FB5               	goto	l190
  2286     07B9                     u1240:
  2287     07B9                     l192:
  2288                           
  2289                           ;main.c: 277:     SSPCON2bits.RCEN = 1;
  2290     07B9  1591               	bsf	17,3	;volatile
  2291     07BA                     l193:	
  2292                           ;main.c: 278:     while (!SSPSTATbits.BF);
  2293                           
  2294     07BA  1C14               	btfss	20,0	;volatile
  2295     07BB  2FBD               	goto	u1251
  2296     07BC  2FBE               	goto	u1250
  2297     07BD                     u1251:
  2298     07BD  2FBA               	goto	l193
  2299     07BE                     u1250:
  2300     07BE                     l1207:
  2301                           
  2302                           ;main.c: 279:     _month = SSPBUF;
  2303     07BE  1283               	bcf	3,5	;RP0=0, select bank0
  2304     07BF  1303               	bcf	3,6	;RP1=0, select bank0
  2305     07C0  0813               	movf	19,w	;volatile
  2306     07C1  00AC               	movwf	__month
  2307     07C2                     l1209:
  2308                           
  2309                           ;main.c: 281:     SSPCON2bits.ACKDT = 0;
  2310     07C2  1683               	bsf	3,5	;RP0=1, select bank1
  2311     07C3  1303               	bcf	3,6	;RP1=0, select bank1
  2312     07C4  1291               	bcf	17,5	;volatile
  2313     07C5                     l1211:
  2314                           
  2315                           ;main.c: 282:     SSPCON2bits.ACKEN = 1;
  2316     07C5  1611               	bsf	17,4	;volatile
  2317     07C6                     l196:	
  2318                           ;main.c: 283:     while (SSPCON2bits.ACKEN);
  2319                           
  2320     07C6  1A11               	btfsc	17,4	;volatile
  2321     07C7  2FC9               	goto	u1261
  2322     07C8  2FCA               	goto	u1260
  2323     07C9                     u1261:
  2324     07C9  2FC6               	goto	l196
  2325     07CA                     u1260:
  2326     07CA                     l198:
  2327                           
  2328                           ;main.c: 285:     SSPCON2bits.RCEN = 1;
  2329     07CA  1591               	bsf	17,3	;volatile
  2330     07CB                     l199:	
  2331                           ;main.c: 286:     while (!SSPSTATbits.BF);
  2332                           
  2333     07CB  1C14               	btfss	20,0	;volatile
  2334     07CC  2FCE               	goto	u1271
  2335     07CD  2FCF               	goto	u1270
  2336     07CE                     u1271:
  2337     07CE  2FCB               	goto	l199
  2338     07CF                     u1270:
  2339     07CF                     l1213:
  2340                           
  2341                           ;main.c: 287:     _year = SSPBUF;
  2342     07CF  1283               	bcf	3,5	;RP0=0, select bank0
  2343     07D0  1303               	bcf	3,6	;RP1=0, select bank0
  2344     07D1  0813               	movf	19,w	;volatile
  2345     07D2  00AB               	movwf	__year
  2346     07D3                     l1215:
  2347                           
  2348                           ;main.c: 289:     SSPCON2bits.ACKDT = 0;
  2349     07D3  1683               	bsf	3,5	;RP0=1, select bank1
  2350     07D4  1303               	bcf	3,6	;RP1=0, select bank1
  2351     07D5  1291               	bcf	17,5	;volatile
  2352     07D6                     l1217:
  2353                           
  2354                           ;main.c: 290:     SSPCON2bits.ACKEN = 1;
  2355     07D6  1611               	bsf	17,4	;volatile
  2356     07D7                     l202:	
  2357                           ;main.c: 291:     while (SSPCON2bits.ACKEN);
  2358                           
  2359     07D7  1A11               	btfsc	17,4	;volatile
  2360     07D8  2FDA               	goto	u1281
  2361     07D9  2FDB               	goto	u1280
  2362     07DA                     u1281:
  2363     07DA  2FD7               	goto	l202
  2364     07DB                     u1280:
  2365     07DB                     l204:
  2366                           
  2367                           ;main.c: 293:     SSPCON2bits.RCEN = 1;
  2368     07DB  1591               	bsf	17,3	;volatile
  2369     07DC                     l205:	
  2370                           ;main.c: 294:     while (!SSPSTATbits.BF);
  2371                           
  2372     07DC  1C14               	btfss	20,0	;volatile
  2373     07DD  2FDF               	goto	u1291
  2374     07DE  2FE0               	goto	u1290
  2375     07DF                     u1291:
  2376     07DF  2FDC               	goto	l205
  2377     07E0                     u1290:
  2378     07E0                     l1219:
  2379                           
  2380                           ;main.c: 295:     _conf = SSPBUF;
  2381     07E0  1283               	bcf	3,5	;RP0=0, select bank0
  2382     07E1  1303               	bcf	3,6	;RP1=0, select bank0
  2383     07E2  0813               	movf	19,w	;volatile
  2384     07E3  00AA               	movwf	__conf
  2385     07E4                     l1221:
  2386                           
  2387                           ;main.c: 297:     SSPCON2bits.ACKDT = 1;
  2388     07E4  1683               	bsf	3,5	;RP0=1, select bank1
  2389     07E5  1303               	bcf	3,6	;RP1=0, select bank1
  2390     07E6  1691               	bsf	17,5	;volatile
  2391     07E7                     l1223:
  2392                           
  2393                           ;main.c: 298:     SSPCON2bits.ACKEN = 1;
  2394     07E7  1611               	bsf	17,4	;volatile
  2395     07E8                     l208:	
  2396                           ;main.c: 299:     while (SSPCON2bits.ACKEN);
  2397                           
  2398     07E8  1A11               	btfsc	17,4	;volatile
  2399     07E9  2FEB               	goto	u1301
  2400     07EA  2FEC               	goto	u1300
  2401     07EB                     u1301:
  2402     07EB  2FE8               	goto	l208
  2403     07EC                     u1300:
  2404     07EC                     l210:
  2405                           
  2406                           ;main.c: 301:     SSPCON2bits.PEN = 1;
  2407     07EC  1511               	bsf	17,2	;volatile
  2408     07ED                     l211:	
  2409                           ;main.c: 302:     while (SSPCON2bits.PEN);
  2410                           
  2411     07ED  1911               	btfsc	17,2	;volatile
  2412     07EE  2FF0               	goto	u1311
  2413     07EF  2FF1               	goto	u1310
  2414     07F0                     u1311:
  2415     07F0  2FED               	goto	l211
  2416     07F1                     u1310:
  2417     07F1                     l145:
  2418     07F1  0008               	return
  2419     07F2                     __end_of_DS1307_read:
  2420     007E                     btemp	set	126	;btemp
  2421     007E                     wtemp0	set	126
  2422                           
  2423                           	psect	config
  2424                           
  2425                           ;Config register CONFIG @ 0x2007
  2426                           ;	Oscillator Selection bits
  2427                           ;	FOSC = HS, HS oscillator
  2428                           ;	Watchdog Timer Enable bit
  2429                           ;	WDTE = OFF, WDT disabled
  2430                           ;	Power-up Timer Enable bit
  2431                           ;	PWRTE = OFF, PWRT disabled
  2432                           ;	Brown-out Reset Enable bit
  2433                           ;	BOREN = OFF, BOR disabled
  2434                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2435                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2436                           ;	Data EEPROM Memory Code Protection bit
  2437                           ;	CPD = OFF, Data EEPROM code protection off
  2438                           ;	Flash Program Memory Write Enable bits
  2439                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2440                           ;	In-Circuit Debugger Mode bit
  2441                           ;	DEBUG = 0x1, unprogrammed default
  2442                           ;	Flash Program Memory Code Protection bit
  2443                           ;	CP = OFF, Code protection off
  2444     2007                     	org	8199
  2445     2007  3FBA               	dw	16314

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_word@str	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), STR_2(CODE[6]), 


Critical Paths under _main in COMMON

    _lcd_word->_lcd_data
    _lcd_init->_lcd_command
    _bcd_to_ascii->_lcd_data
    _DS1307_write->_decimal_to_bcd
    _decimal_to_bcd->___awdiv

Critical Paths under _main in BANK0

    _main->_DS1307_write

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2365
                                              7 BANK0      3     3      0
                        _DS1307_read
                       _DS1307_write
                       _bcd_to_ascii
                        _lcd_command
                           _lcd_data
                           _lcd_init
                           _lcd_word
 ---------------------------------------------------------------------------------
 (1) _lcd_word                                             3     2      1     330
                                              3 COMMON     3     2      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      22
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bcd_to_ascii                                         3     3      0     204
                                              3 COMMON     3     3      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DS1307_write                                         7     1      6    1623
                                              0 BANK0      7     1      6
                     _decimal_to_bcd
 ---------------------------------------------------------------------------------
 (2) _decimal_to_bcd                                       6     6      0    1013
                                              8 COMMON     6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _DS1307_read                                          2     1      1     142
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1307_read
   _DS1307_write
     _decimal_to_bcd
       ___awdiv
       ___awmod
   _bcd_to_ascii
     _lcd_data
   _lcd_command
   _lcd_data
   _lcd_init
     _lcd_command
   _lcd_word
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 18 11:02:04 2025

                          pc 0002                 lcd_data@data 0072                  _SSPSTATbits 0094  
                         l70 0449                           l82 04EA                           l90 05B5  
                         l91 05BA                           l67 0477                           l76 0492  
                         l93 05BE                           l85 04B8                           l95 05C6  
                         l79 045E                           l88 05B1                           l98 0653  
                         l99 05CE                 ___awdiv@sign 0075                           fsr 0004  
             _decimal_to_bcd 04B9                          l101 05D2                          l111 05FC  
                        l103 05DA                          l120 0626                          l112 0606  
                        l121 0630                          l210 07EC                          l202 07D7  
                        l130 064C                          l114 060A                          l106 05EA  
                        l211 07ED                          l123 0634                          l115 0614  
                        l204 07DB                          l140 0726                          l132 0650  
                        l124 063E                          l108 05EE                          l205 07DC  
                        l117 0618                          l109 05F8                          l150 0743  
                        l142 072E                          l126 0642                          l118 0622  
                        l135 0719                          l127 0644                          l208 07E8  
                        l160 075F                          l153 0749                          l145 07F1  
                        l137 071D                          l129 0648                          l146 0737  
                        l138 0722                          l163 0765                          l155 074D  
                        l180 0797                          l172 0782                          l156 0753  
                        l148 073B                          l181 0798                          l149 0748  
                        l190 07B5                          l174 0786                          l166 0771  
                        l158 0757                          l175 0787                          l159 0764  
                        l192 07B9                          l184 07A4                          l168 0775  
                        l193 07BA                          l169 0776                          l186 07A8  
                        l178 0793                          l187 07A9                          l196 07C6  
                        l452 05AA                          l198 07CA                          l199 07CB  
                        l465 0543                          u710 0577                          u711 0576  
                        u705 0569                          u730 0588                          u810 0518  
                        u731 0587                          u811 0517                          u820 0522  
                        u900 05C5                          u725 0578                          u821 0521  
                        u805 050A                          u901 05C4                          u750 059C  
                        u670 0549                          u910 05CA                          u751 059B  
                        u735 0584                          u671 0548                          u911 05C9  
                        u760 05A1                          u680 0554                          u840 0535  
                        u920 05D2                          u761 05A0                          u745 0590  
                        u681 0553                          u841 0534                          u825 051E  
                        u921 05D1                          u690 0565                          u850 053A  
                        u770 04F0                          u930 05D9                          u691 0564  
                        u851 0539                          u835 0529                          u771 04EF  
                        u931 05D8                          u780 04FB                          u940 05DE  
                        u781 04FA                          u941 05DD                          u790 0506  
                        u950 05EE                          u870 0492                          u791 0505  
                        u951 05ED                          u871 0491                          u960 05FC  
                        u880 05B5                          u865 04E1                          u961 05FB  
                        u881 05B4                          u970 060A                          u890 05BE  
                        u971 0609                          u891 05BD                          u980 0618  
                        u981 0617                          u990 0626                          u991 0625  
                        fsr0 0004                 ___awmod@sign 0075                 _DS1307_write 05AB  
                       l1101 053A                         l1031 054E                         l1103 053F  
                       l1111 045B                         l1201 07AD                         l1041 055F  
                       l1033 0550                         l1025 0544                         l1121 04DE  
                       l1113 0436                         l1211 07C5                         l1203 07B1  
                       l1051 0577                         l1043 0565                         l1035 0554  
                       l1027 0545                         l1123 04E9                         l1115 043B  
                       l1107 044B                         l1131 047B                         l1221 07E4  
                       l1213 07CF                         l1205 07B4                         l1053 0588  
                       l1045 0568                         l1061 059C                         l1037 0559  
                       l1029 0549                         l1141 05C5                         l1117 0446  
                       l1109 0450                         l1133 0488                         l1223 07E7  
                       l1215 07D3                         l1207 07BE                         l1063 05A1  
                       l1055 058E                         l1047 056F                         l1039 055D  
                       l1071 04EC                         l1119 04BA                         l1151 05FD  
                       l1143 05CB                         l1231 04A4                         l1127 045F  
                       l1135 048C                         l1217 07D6                         l1209 07C2  
                       l1065 05A6                         l1057 058F                         l1049 0573  
                       l1081 0500                         l1073 04F0                         l1161 0643  
                       l1153 060B                         l1145 05D9                         l1137 05AE  
                       l1233 04AA                         l1225 0494                         l1129 0479  
                       l1241 0654                         l1219 07E0                         l1171 0742  
                       l1163 0716                         l1059 0596                         l1091 0518  
                       l1083 0506                         l1075 04F5                         l1155 0619  
                       l1147 05DF                         l1139 05B8                         l1235 04AC  
                       l1227 0496                         l1251 066A                         l1243 065E  
                       l1181 0770                         l1173 0750                         l1165 0720  
                       l1093 0522                         l1085 0509                         l1077 04F7  
                       l1069 04EB                         l1157 0627                         l1149 05EF  
                       l1237 04AF                         l1229 04A1                         l1261 068B  
                       l1253 066F                         l1245 0661                         l1191 078F  
                       l1183 077A                         l1175 075E                         l1167 072D  
                       l1095 0528                         l1087 0510                         l1079 04FB  
                       l1159 0635                         l1239 04B2                         l1271 06C3  
                       l1263 069E                         l1255 0675                         l1247 0664  
                       l1193 0792                         l1185 077E                         l1177 0769  
                       l1169 0733                         l1097 052F                         l1089 0514  
                       l1281 06E7                         l1273 06CB                         l1265 06AC  
                       l1257 067D                         l1249 0667                         l1195 079C  
                       l1187 0781                         l1179 076D                         l1099 0535  
                       l1291 0709                         l1283 06ED                         l1275 06D1  
                       l1267 06B6                         l1259 0683                         l1197 07A0  
                       l1189 078B                         l1285 06F5                         l1277 06D9  
                       l1269 06BD                         l1199 07A3                         l1287 06FB  
                       l1279 06DF                         l1289 0703                         STR_1 0009  
                       STR_2 0010                         u1000 0634                         u1001 0633  
                       u1010 0642                         u1011 0641                         u1100 0747  
                       u1020 0648                         u1101 0746                         u1021 0647  
                       u1110 074D                         u1030 0650                         u1111 074C  
                       u1031 064F                         u1200 0797                         u1120 0757  
                       u1040 071D                         u1201 0796                         u1121 0756  
                       u1041 071C                         u1210 079C                         u1130 075E  
                       u1050 0726                         u1211 079B                         u1131 075D  
                       u1051 0725                         u1300 07EC                         u1220 07A8  
                       u1140 0763                         u1060 072D                         u1301 07EB  
                       u1221 07A7                         u1141 0762                         u1061 072C  
                       u1310 07F1                         u1230 07AD                         u1150 0769  
                       u1070 0732                         u1311 07F0                         u1231 07AC  
                       u1151 0768                         u1071 0731                         u1240 07B9  
                       u1160 0775                         u1080 073B                         u1241 07B8  
                       u1161 0774                         u1081 073A                         u1250 07BE  
                       u1170 077A                         u1090 0742                         u1251 07BD  
                       u1171 0779                         u1091 0741                         u1260 07CA  
                       u1180 0786                         u1261 07C9                         u1181 0785  
                       u1325 0499                         u1270 07CF                         u1190 078B  
                       u1271 07CE                         u1191 078A                         u1280 07DB  
                       u1281 07DA                         u1337 06A6                         u1290 07E0  
                       u1291 07DF                         u1347 06B2                         u1357 0456  
                       u1367 0441                         __day 002E                         __min 0030  
                       __sec 0031                         _main 0654                         btemp 007E  
                lcd_word@len 0073                         start 0000                  lcd_word@str 0074  
     __end_of_decimal_to_bcd 04EB                        ?_main 0070              __end_of___awdiv 05AB  
            __end_of___awmod 0544              ___awdiv@divisor 0070              ___awdiv@counter 0074  
                      _PORTB 0006                        _PORTD 0008                        _TRISB 0086  
                      _TRISC 0087                        _TRISD 0088                        __date 002D  
                      __conf 002A                        __hour 002F                        __year 002B  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __initialization 07F2                 __end_of_main 0715                 _bcd_to_ascii 0493  
            ?_decimal_to_bcd 0070                       ??_main 0027               lcd_command@cmd 0072  
           ___awdiv@dividend 0072                       _SSPADD 0093                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of_lcd_data 044A             __end_of_lcd_init 0478  
           __end_of_lcd_word 0493                    ??___awdiv 0074                    ??___awmod 0074  
                     __month 002C             ___awdiv@quotient 0076              ___awmod@divisor 0070  
            ___awmod@counter 0074      __end_of__initialization 07FC               __pcstackCOMMON 0070  
                 __pbssBANK0 002A                ??_DS1307_read 0071                   __pmaintext 0654  
            bcd_to_ascii@bcd 0074                    ?_lcd_data 0070                    ?_lcd_init 0070  
                  ?_lcd_word 0073                   __stringtab 0003            bcd_to_ascii@value 0075  
           ??_decimal_to_bcd 0078          __end_of_DS1307_read 07F2     DS1307_read@slave_address 0071  
                    ___awdiv 0544                      ___awmod 04EB                      __ptext1 0478  
                    __ptext2 045F                      __ptext3 044A                      __ptext4 0493  
                    __ptext5 0435                      __ptext6 05AB                      __ptext7 04B9  
                    __ptext8 04EB                      __ptext9 0544             ___awmod@dividend 0072  
                 ??_lcd_data 0070                   ??_lcd_init 0073                   ??_lcd_word 0074  
       end_of_initialization 07FC             DS1307_write@_day 0022             DS1307_write@_min 0020  
           DS1307_write@_sec 0026                    _PORTBbits 0006                  _DS1307_read 0715  
              ??_lcd_command 0070          start_initialization 07F2                ?_DS1307_write 0020  
          decimal_to_bcd@hex 007C            decimal_to_bcd@lsb 007B            decimal_to_bcd@msb 007A  
        __end_of_lcd_command 045F                    ___latbits 0002                __pcstackBANK0 0020  
             ??_DS1307_write 007E                ?_bcd_to_ascii 0070                     ?___awdiv 0070  
                   ?___awmod 0070                    __pstrings 0003        decimal_to_bcd@decimal 007D  
                _lcd_command 044A                     _PIR1bits 000C               ??_bcd_to_ascii 0073  
                __stringbase 0008                    lcd_word@i 0075                 ?_DS1307_read 0070  
       __end_of_DS1307_write 0654           __end_of__stringtab 0009           DS1307_write@_month 0024  
                   __ptext10 0715                     _lcd_data 0435                     _lcd_init 045F  
                   _lcd_word 0478         __end_of_bcd_to_ascii 04B9            DS1307_write@_date 0023  
          DS1307_write@_hour 0021            DS1307_write@_year 0025                    stringcode 0003  
DS1307_read@register_address 0070                     stringdir 0003                     stringtab 0003  
                _SSPCON2bits 0091                 ?_lcd_command 0070  
