

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue May 14 21:00:57 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	idataCOMMON
   172     078D                     __pidataCOMMON:
   173                           
   174                           ;initializer for _num
   175     078D  3438               	retlw	56
   176     078E  3400               	retlw	0
   177                           
   178                           	psect	idataBANK0
   179     078F                     __pidataBANK0:
   180                           
   181                           ;initializer for _numbers
   182     078F  343F               	retlw	63
   183     0790  3406               	retlw	6
   184     0791  345B               	retlw	91
   185     0792  344F               	retlw	79
   186     0793  3466               	retlw	102
   187     0794  346D               	retlw	109
   188     0795  347D               	retlw	125
   189     0796  3407               	retlw	7
   190     0797  347F               	retlw	127
   191     0798  346F               	retlw	111
   192                           
   193                           	psect	nvCOMMON
   194     0070                     __pnvCOMMON:
   195     0070                     _j:
   196     0070                     	ds	2
   197     0072                     _i:
   198     0072                     	ds	2
   199     0006                     _PORTB	set	6
   200     0007                     _PORTCbits	set	7
   201     0086                     _TRISB	set	134
   202     0087                     _TRISC	set	135
   203                           
   204                           	psect	cinit
   205     07E2                     start_initialization:	
   206                           ; #config settings
   207                           
   208     07E2                     __initialization:
   209                           
   210                           ; Initialize objects allocated to BANK0
   211     07E2  1383               	bcf	3,7	;select IRP bank0
   212     07E3  302A               	movlw	low (__pdataBANK0+10)
   213     07E4  00FD               	movwf	btemp+-1
   214     07E5  3007               	movlw	high __pidataBANK0
   215     07E6  00FE               	movwf	btemp
   216     07E7  308F               	movlw	low __pidataBANK0
   217     07E8  00FF               	movwf	btemp+1
   218     07E9  3020               	movlw	low __pdataBANK0
   219     07EA  0084               	movwf	4
   220     07EB  120A  118A  279D  120A  118A  	fcall	init_ram0
   221                           
   222                           ; Initialize objects allocated to COMMON
   223     07F0  120A  118A  278D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   224     07F5  00F4               	movwf	__pdataCOMMON& (0+127)
   225     07F6  120A  118A  278E  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   226     07FB  00F5               	movwf	(__pdataCOMMON+1)& (0+127)
   227     07FC                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230     07FC                     __end_of__initialization:
   231     07FC  0183               	clrf	3
   232     07FD  120A  118A  2FAC   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	dataCOMMON
   235     0074                     __pdataCOMMON:
   236     0074                     _num:
   237     0074                     	ds	2
   238                           
   239                           	psect	dataBANK0
   240     0020                     __pdataBANK0:
   241     0020                     _numbers:
   242     0020                     	ds	10
   243                           
   244                           	psect	inittext
   245     0799                     init_fetch0:	
   246                           ;	Called with low address in FSR and high address in W
   247                           
   248     0799  087E               	movf	btemp,w
   249     079A  008A               	movwf	10
   250     079B  087F               	movf	btemp+1,w
   251     079C  0082               	movwf	2
   252     079D                     init_ram0:	
   253                           ;Called with:
   254                           ;	high address of idata address in btemp 
   255                           ;	low address of idata address in btemp+1 
   256                           ;	low address of data in FSR
   257                           ;	high address + 1 of data in btemp-1
   258                           
   259     079D  120A  118A  2799  120A  118A  	fcall	init_fetch0
   260     07A2  0080               	movwf	0
   261     07A3  0A84               	incf	4,f
   262     07A4  0804               	movf	4,w
   263     07A5  067D               	xorwf	btemp+-1,w
   264     07A6  1903               	btfsc	3,2
   265     07A7  3400               	retlw	0
   266     07A8  0AFF               	incf	btemp+1,f
   267     07A9  1903               	btfsc	3,2
   268     07AA  0AFE               	incf	btemp,f
   269     07AB  2F9D               	goto	init_ram0
   270                           
   271                           	psect	cstackCOMMON
   272     0076                     __pcstackCOMMON:
   273     0076                     ?_main:
   274     0076                     ??_main:	
   275                           ; 1 bytes @ 0x0
   276                           
   277                           
   278                           ; 1 bytes @ 0x0
   279     0076                     	ds	2
   280                           
   281                           	psect	maintext
   282     07AC                     __pmaintext:	
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 20 in file "main.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   297 ;; Tracked objects:
   298 ;;		On entry : B00/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   302 ;;      Params:         0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0
   304 ;;      Temps:          2       0       0       0       0
   305 ;;      Totals:         2       0       0       0       0
   306 ;;Total ram usage:        2 bytes
   307 ;; This function calls:
   308 ;;		Nothing
   309 ;; This function is called by:
   310 ;;		Startup code after reset
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314     07AC                     _main:	
   315                           ;psect for function _main
   316                           
   317     07AC                     l592:	
   318                           ;incstack = 0
   319                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   320                           
   321                           
   322                           ;main.c: 21:     return;
   323     07AC  1683               	bsf	3,5	;RP0=1, select bank1
   324     07AD  1303               	bcf	3,6	;RP1=0, select bank1
   325     07AE  0187               	clrf	7	;volatile
   326                           
   327                           ;main.c: 22: }
   328     07AF  0186               	clrf	6	;volatile
   329     07B0                     l594:
   330     07B0  3006               	movlw	6
   331     07B1  00F2               	movwf	_i
   332     07B2  3000               	movlw	0
   333     07B3  00F3               	movwf	_i+1
   334     07B4                     l596:
   335     07B4  3005               	movlw	5
   336     07B5  00F0               	movwf	_j
   337     07B6  3000               	movlw	0
   338     07B7  00F1               	movwf	_j+1
   339     07B8                     l598:
   340     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   341     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   342     07BA  1007               	bcf	7,0	;volatile
   343     07BB                     l600:
   344     07BB  1487               	bsf	7,1	;volatile
   345     07BC                     l602:
   346     07BC  0872               	movf	_i,w
   347     07BD  3E20               	addlw	(low (_numbers| 0))& (0+255)
   348     07BE  0084               	movwf	4
   349     07BF  1383               	bcf	3,7	;select IRP bank0
   350     07C0  0800               	movf	0,w
   351     07C1  0086               	movwf	6	;volatile
   352     07C2                     l604:
   353     07C2  3041               	movlw	65
   354     07C3  00F7               	movwf	??_main+1
   355     07C4  30EE               	movlw	238
   356     07C5  00F6               	movwf	??_main
   357     07C6                     u17:
   358     07C6  0BF6               	decfsz	??_main,f
   359     07C7  2FC6               	goto	u17
   360     07C8  0BF7               	decfsz	??_main+1,f
   361     07C9  2FC6               	goto	u17
   362     07CA  0000               	nop
   363     07CB                     l606:
   364     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   365     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   366     07CD  1407               	bsf	7,0	;volatile
   367     07CE                     l608:
   368     07CE  1087               	bcf	7,1	;volatile
   369     07CF                     l610:
   370     07CF  0870               	movf	_j,w
   371     07D0  3E20               	addlw	(low (_numbers| 0))& (0+255)
   372     07D1  0084               	movwf	4
   373     07D2  1383               	bcf	3,7	;select IRP bank0
   374     07D3  0800               	movf	0,w
   375     07D4  0086               	movwf	6	;volatile
   376     07D5                     l612:
   377     07D5  3041               	movlw	65
   378     07D6  00F7               	movwf	??_main+1
   379     07D7  30EE               	movlw	238
   380     07D8  00F6               	movwf	??_main
   381     07D9                     u27:
   382     07D9  0BF6               	decfsz	??_main,f
   383     07DA  2FD9               	goto	u27
   384     07DB  0BF7               	decfsz	??_main+1,f
   385     07DC  2FD9               	goto	u27
   386     07DD  0000               	nop
   387     07DE  2FB8               	goto	l598
   388     07DF  120A  118A  2800   	ljmp	start
   389     07E2                     __end_of_main:
   390     007E                     btemp	set	126	;btemp
   391     007E                     wtemp0	set	126
   392                           
   393                           	psect	config
   394                           
   395                           ;Config register CONFIG @ 0x2007
   396                           ;	Oscillator Selection bits
   397                           ;	FOSC = HS, HS oscillator
   398                           ;	Watchdog Timer Enable bit
   399                           ;	WDTE = OFF, WDT disabled
   400                           ;	Power-up Timer Enable bit
   401                           ;	PWRTE = OFF, PWRT disabled
   402                           ;	Brown-out Reset Enable bit
   403                           ;	BOREN = OFF, BOR disabled
   404                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   405                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   406                           ;	Data EEPROM Memory Code Protection bit
   407                           ;	CPD = OFF, Data EEPROM code protection off
   408                           ;	Flash Program Memory Write Enable bits
   409                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   410                           ;	In-Circuit Debugger Mode bit
   411                           ;	DEBUG = 0x1, unprogrammed default
   412                           ;	Flash Program Memory Code Protection bit
   413                           ;	CP = OFF, Code protection off
   414     2007                     	org	8199
   415     2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       8
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      2       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      12      12        0.0%
ABS                  0      0      12       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue May 14 21:00:57 2024

                      _i 0072                        _j 0070                        pc 0002  
                     u17 07C6                       u27 07D9                       fsr 0004  
                    l600 07BB                      l610 07CF                      l602 07BC  
                    l612 07D5                      l604 07C2                      l606 07CB  
                    l608 07CE                      l592 07AC                      l594 07B0  
                    l596 07B4                      l598 07B8                      _num 0074  
                    fsr0 0004                      indf 0000                     _main 07AC  
                   btemp 007E                     start 0000                    ?_main 0076  
                  _PORTB 0006                    _TRISB 0086                    _TRISC 0087  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E2             __end_of_main 07E2                   ??_main 0076  
           __pdataCOMMON 0074  __end_of__initialization 07FC           __pcstackCOMMON 0076  
           __pidataBANK0 078F               __pnvCOMMON 0070               __pmaintext 07AC  
                _numbers 0020     end_of_initialization 07FC                _PORTCbits 0007  
          __pidataCOMMON 078D      start_initialization 07E2               init_fetch0 0799  
            __pdataBANK0 0020                ___latbits 0002                 init_ram0 079D  
