

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon May 13 20:05:09 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168                           
   169                           	psect	idataCOMMON
   170     077B                     __pidataCOMMON:
   171                           
   172                           ;initializer for _numbers
   173     077B  343F               	retlw	63
   174     077C  3406               	retlw	6
   175     077D  345B               	retlw	91
   176     077E  344F               	retlw	79
   177     077F  3466               	retlw	102
   178     0780  346D               	retlw	109
   179     0781  347D               	retlw	125
   180     0782  3407               	retlw	7
   181     0783  347F               	retlw	127
   182     0784  346F               	retlw	111
   183     0006                     _PORTB	set	6
   184     0007                     _PORTCbits	set	7
   185     0086                     _TRISB	set	134
   186     0087                     _TRISC	set	135
   187                           
   188                           	psect	cinit
   189     07BE                     start_initialization:	
   190                           ; #config settings
   191                           
   192     07BE                     __initialization:
   193                           
   194                           ; Initialize objects allocated to COMMON
   195     07BE  120A  118A  277B  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   196     07C3  00F0               	movwf	__pdataCOMMON& (0+127)
   197     07C4  120A  118A  277C  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   198     07C9  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   199     07CA  120A  118A  277D  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   200     07CF  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   201     07D0  120A  118A  277E  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   202     07D5  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   203     07D6  120A  118A  277F  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   204     07DB  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   205     07DC  120A  118A  2780  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   206     07E1  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   207     07E2  120A  118A  2781  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   208     07E7  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   209     07E8  120A  118A  2782  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   210     07ED  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   211     07EE  120A  118A  2783  120A  118A  	fcall	__pidataCOMMON+8	;fetch initializer
   212     07F3  00F8               	movwf	(__pdataCOMMON+8)& (0+127)
   213     07F4  120A  118A  2784  120A  118A  	fcall	__pidataCOMMON+9	;fetch initializer
   214     07F9  00F9               	movwf	(__pdataCOMMON+9)& (0+127)
   215                           
   216                           ; Clear objects allocated to COMMON
   217     07FA  01FA               	clrf	__pbssCOMMON& (0+127)
   218     07FB  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   219     07FC                     end_of_initialization:	
   220                           ;End of C runtime variable initialization code
   221                           
   222     07FC                     __end_of__initialization:
   223     07FC  0183               	clrf	3
   224     07FD  120A  118A  2F98   	ljmp	_main	;jump to C main() function
   225                           
   226                           	psect	bssCOMMON
   227     007A                     __pbssCOMMON:
   228     007A                     _i:
   229     007A                     	ds	2
   230                           
   231                           	psect	dataCOMMON
   232     0070                     __pdataCOMMON:
   233     0070                     _numbers:
   234     0070                     	ds	10
   235                           
   236                           	psect	inittext
   237     0785                     init_fetch0:	
   238                           ;	Called with low address in FSR and high address in W
   239                           
   240     0785  087E               	movf	btemp,w
   241     0786  008A               	movwf	10
   242     0787  087F               	movf	btemp+1,w
   243     0788  0082               	movwf	2
   244     0789                     init_ram0:	
   245                           ;Called with:
   246                           ;	high address of idata address in btemp 
   247                           ;	low address of idata address in btemp+1 
   248                           ;	low address of data in FSR
   249                           ;	high address + 1 of data in btemp-1
   250                           
   251     0789  120A  118A  2785  120A  118A  	fcall	init_fetch0
   252     078E  0080               	movwf	0
   253     078F  0A84               	incf	4,f
   254     0790  0804               	movf	4,w
   255     0791  067D               	xorwf	btemp+-1,w
   256     0792  1903               	btfsc	3,2
   257     0793  3400               	retlw	0
   258     0794  0AFF               	incf	btemp+1,f
   259     0795  1903               	btfsc	3,2
   260     0796  0AFE               	incf	btemp,f
   261     0797  2F89               	goto	init_ram0
   262                           
   263                           	psect	cstackCOMMON
   264     007C                     __pcstackCOMMON:
   265     007C                     ?_main:
   266     007C                     ??_main:	
   267                           ; 1 bytes @ 0x0
   268                           
   269                           
   270                           ; 1 bytes @ 0x0
   271     007C                     	ds	2
   272                           
   273                           	psect	maintext
   274     0798                     __pmaintext:	
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 19 in file "main.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2
   289 ;; Tracked objects:
   290 ;;		On entry : B00/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   294 ;;      Params:         0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0
   296 ;;      Temps:          2       0       0       0       0
   297 ;;      Totals:         2       0       0       0       0
   298 ;;Total ram usage:        2 bytes
   299 ;; This function calls:
   300 ;;		Nothing
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306     0798                     _main:	
   307                           ;psect for function _main
   308                           
   309     0798                     l566:	
   310                           ;incstack = 0
   311                           ; Regs used in _main: [wreg+status,2]
   312                           
   313     0798  1683               	bsf	3,5	;RP0=1, select bank1
   314     0799  1303               	bcf	3,6	;RP1=0, select bank1
   315     079A  0187               	clrf	7	;volatile
   316     079B  0186               	clrf	6	;volatile
   317     079C                     l568:
   318     079C  1283               	bcf	3,5	;RP0=0, select bank0
   319     079D  1303               	bcf	3,6	;RP1=0, select bank0
   320     079E  1007               	bcf	7,0	;volatile
   321     079F                     l570:
   322     079F  1487               	bsf	7,1	;volatile
   323     07A0                     l572:
   324     07A0  0874               	movf	_numbers+4,w
   325     07A1  0086               	movwf	6	;volatile
   326     07A2                     l574:
   327     07A2  3041               	movlw	65
   328     07A3  00FD               	movwf	??_main+1
   329     07A4  30EE               	movlw	238
   330     07A5  00FC               	movwf	??_main
   331     07A6                     u17:
   332     07A6  0BFC               	decfsz	??_main,f
   333     07A7  2FA6               	goto	u17
   334     07A8  0BFD               	decfsz	??_main+1,f
   335     07A9  2FA6               	goto	u17
   336     07AA  0000               	nop
   337     07AB                     l576:
   338     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   339     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   340     07AD  1407               	bsf	7,0	;volatile
   341     07AE                     l578:
   342     07AE  1087               	bcf	7,1	;volatile
   343     07AF                     l580:
   344     07AF  0872               	movf	_numbers+2,w
   345     07B0  0086               	movwf	6	;volatile
   346     07B1                     l582:
   347     07B1  3041               	movlw	65
   348     07B2  00FD               	movwf	??_main+1
   349     07B3  30EE               	movlw	238
   350     07B4  00FC               	movwf	??_main
   351     07B5                     u27:
   352     07B5  0BFC               	decfsz	??_main,f
   353     07B6  2FB5               	goto	u27
   354     07B7  0BFD               	decfsz	??_main+1,f
   355     07B8  2FB5               	goto	u27
   356     07B9  0000               	nop
   357     07BA  2F9C               	goto	l568
   358     07BB  120A  118A  2800   	ljmp	start
   359     07BE                     __end_of_main:
   360     007E                     btemp	set	126	;btemp
   361     007E                     wtemp0	set	126
   362                           
   363                           	psect	config
   364                           
   365                           ;Config register CONFIG @ 0x2007
   366                           ;	Oscillator Selection bits
   367                           ;	FOSC = HS, HS oscillator
   368                           ;	Watchdog Timer Enable bit
   369                           ;	WDTE = OFF, WDT disabled
   370                           ;	Power-up Timer Enable bit
   371                           ;	PWRTE = OFF, PWRT disabled
   372                           ;	Brown-out Reset Enable bit
   373                           ;	BOREN = OFF, BOR disabled
   374                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   375                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   376                           ;	Data EEPROM Memory Code Protection bit
   377                           ;	CPD = OFF, Data EEPROM code protection off
   378                           ;	Flash Program Memory Write Enable bits
   379                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   380                           ;	In-Circuit Debugger Mode bit
   381                           ;	DEBUG = 0x1, unprogrammed default
   382                           ;	Flash Program Memory Code Protection bit
   383                           ;	CP = OFF, Code protection off
   384     2007                     	org	8199
   385     2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      2       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon May 13 20:05:09 2024

                      _i 007A                        pc 0002                       u17 07A6  
                     u27 07B5                       fsr 0004                      l570 079F  
                    l580 07AF                      l572 07A0                      l582 07B1  
                    l574 07A2                      l566 0798                      l576 07AB  
                    l568 079C                      l578 07AE                      indf 0000  
                   _main 0798                     btemp 007E                     start 0000  
                  ?_main 007C                    _PORTB 0006                    _TRISB 0086  
                  _TRISC 0087                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07BE             __end_of_main 07BE  
                 ??_main 007C             __pdataCOMMON 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 007C               __pmaintext 0798                  _numbers 0070  
   end_of_initialization 07FC                _PORTCbits 0007            __pidataCOMMON 077B  
    start_initialization 07BE               init_fetch0 0785              __pbssCOMMON 007A  
              ___latbits 0002                 init_ram0 0789  
