

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun May 19 21:22:49 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 22/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     010E                     	;# 
   112     010F                     	;# 
   113     018C                     	;# 
   114     018D                     	;# 
   115     0000                     	;# 
   116     0001                     	;# 
   117     0002                     	;# 
   118     0003                     	;# 
   119     0004                     	;# 
   120     0005                     	;# 
   121     0006                     	;# 
   122     0007                     	;# 
   123     0008                     	;# 
   124     0009                     	;# 
   125     000A                     	;# 
   126     000B                     	;# 
   127     000C                     	;# 
   128     000D                     	;# 
   129     000E                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0014                     	;# 
   137     0015                     	;# 
   138     0015                     	;# 
   139     0016                     	;# 
   140     0017                     	;# 
   141     0018                     	;# 
   142     0019                     	;# 
   143     001A                     	;# 
   144     001B                     	;# 
   145     001B                     	;# 
   146     001C                     	;# 
   147     001D                     	;# 
   148     001E                     	;# 
   149     001F                     	;# 
   150     0081                     	;# 
   151     0085                     	;# 
   152     0086                     	;# 
   153     0087                     	;# 
   154     0088                     	;# 
   155     0089                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0091                     	;# 
   160     0092                     	;# 
   161     0093                     	;# 
   162     0094                     	;# 
   163     0098                     	;# 
   164     0099                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     010C                     	;# 
   170     010D                     	;# 
   171     010E                     	;# 
   172     010F                     	;# 
   173     018C                     	;# 
   174     018D                     	;# 
   175                           
   176                           	psect	idataBANK0
   177     017D                     __pidataBANK0:
   178                           
   179                           ;initializer for _numbers
   180     017D  343F               	retlw	63
   181     017E  3406               	retlw	6
   182     017F  345B               	retlw	91
   183     0180  344F               	retlw	79
   184     0181  3466               	retlw	102
   185     0182  346D               	retlw	109
   186     0183  347D               	retlw	125
   187     0184  3407               	retlw	7
   188     0185  347F               	retlw	127
   189     0186  346F               	retlw	111
   190                           
   191                           	psect	nvCOMMON
   192     0079                     __pnvCOMMON:
   193     0079                     _i:
   194     0079                     	ds	1
   195                           
   196                           	psect	nvBANK0
   197     0031                     __pnvBANK0:
   198     0031                     _j:
   199     0031                     	ds	1
   200     0008                     _PORTD	set	8
   201     0007                     _PORTCbits	set	7
   202     0001                     _TMR0	set	1
   203     000B                     _INTCONbits	set	11
   204     0087                     _TRISCbits	set	135
   205     0088                     _TRISD	set	136
   206     0081                     _OPTION_REG	set	129
   207                           
   208                           	psect	cinit
   209     0011                     start_initialization:	
   210                           ; #config settings
   211                           
   212     0011                     __initialization:
   213                           
   214                           ; Initialize objects allocated to BANK0
   215     0011  1383               	bcf	3,7	;select IRP bank0
   216     0012  302A               	movlw	low (__pdataBANK0+10)
   217     0013  00FD               	movwf	btemp+-1
   218     0014  3001               	movlw	high __pidataBANK0
   219     0015  00FE               	movwf	btemp
   220     0016  307D               	movlw	low __pidataBANK0
   221     0017  00FF               	movwf	btemp+1
   222     0018  3020               	movlw	low __pdataBANK0
   223     0019  0084               	movwf	4
   224     001A  120A  118A  216E  120A  118A  	fcall	init_ram0
   225                           
   226                           ; Clear objects allocated to COMMON
   227     001F  01F7               	clrf	__pbssCOMMON& (0+127)
   228     0020  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   229     0021                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232     0021                     __end_of__initialization:
   233     0021  0183               	clrf	3
   234     0022  120A  118A  28E9   	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	bssCOMMON
   237     0077                     __pbssCOMMON:
   238     0077                     _mode:
   239     0077                     	ds	1
   240     0078                     _counter:
   241     0078                     	ds	1
   242                           
   243                           	psect	dataBANK0
   244     0020                     __pdataBANK0:
   245     0020                     _numbers:
   246     0020                     	ds	10
   247                           
   248                           	psect	inittext
   249     016A                     init_fetch0:	
   250                           ;	Called with low address in FSR and high address in W
   251                           
   252     016A  087E               	movf	btemp,w
   253     016B  008A               	movwf	10
   254     016C  087F               	movf	btemp+1,w
   255     016D  0082               	movwf	2
   256     016E                     init_ram0:	
   257                           ;Called with:
   258                           ;	high address of idata address in btemp 
   259                           ;	low address of idata address in btemp+1 
   260                           ;	low address of data in FSR
   261                           ;	high address + 1 of data in btemp-1
   262                           
   263     016E  120A  118A  216A  120A  118A  	fcall	init_fetch0
   264     0173  0080               	movwf	0
   265     0174  0A84               	incf	4,f
   266     0175  0804               	movf	4,w
   267     0176  067D               	xorwf	btemp+-1,w
   268     0177  1903               	btfsc	3,2
   269     0178  3400               	retlw	0
   270     0179  0AFF               	incf	btemp+1,f
   271     017A  1903               	btfsc	3,2
   272     017B  0AFE               	incf	btemp,f
   273     017C  296E               	goto	init_ram0
   274                           
   275                           	psect	cstackCOMMON
   276     0070                     __pcstackCOMMON:
   277     0070                     ?_main:
   278     0070                     ?_interruptISR:	
   279                           ; 1 bytes @ 0x0
   280                           
   281     0070                     ??_interruptISR:	
   282                           ; 1 bytes @ 0x0
   283                           
   284                           
   285                           ; 1 bytes @ 0x0
   286     0070                     	ds	3
   287     0073                     ?___awdiv:
   288     0073                     ?___awmod:	
   289                           ; 2 bytes @ 0x3
   290                           
   291     0073                     ___awdiv@divisor:	
   292                           ; 2 bytes @ 0x3
   293                           
   294     0073                     ___awmod@divisor:	
   295                           ; 2 bytes @ 0x3
   296                           
   297                           
   298                           ; 2 bytes @ 0x3
   299     0073                     	ds	2
   300     0075                     ___awdiv@dividend:
   301     0075                     ___awmod@dividend:	
   302                           ; 2 bytes @ 0x5
   303                           
   304                           
   305                           ; 2 bytes @ 0x5
   306     0075                     	ds	2
   307     0077                     ??___awdiv:
   308     0077                     ??___awmod:	
   309                           ; 1 bytes @ 0x7
   310                           
   311                           
   312                           	psect	cstackBANK0
   313     002A                     __pcstackBANK0:	
   314                           ; 1 bytes @ 0x7
   315                           
   316     002A                     ___awdiv@counter:
   317     002A                     ___awmod@counter:	
   318                           ; 1 bytes @ 0x0
   319                           
   320                           
   321                           ; 1 bytes @ 0x0
   322     002A                     	ds	1
   323     002B                     ___awdiv@sign:
   324     002B                     ___awmod@sign:	
   325                           ; 1 bytes @ 0x1
   326                           
   327                           
   328                           ; 1 bytes @ 0x1
   329     002B                     	ds	1
   330     002C                     ___awdiv@quotient:
   331                           
   332                           ; 2 bytes @ 0x2
   333     002C                     	ds	2
   334     002E                     ??_main:
   335                           
   336                           ; 1 bytes @ 0x4
   337     002E                     	ds	3
   338                           
   339                           	psect	maintext
   340     00E9                     __pmaintext:	
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 24 in file "main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : B00/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          0       3       0       0       0
   363 ;;      Totals:         0       3       0       0       0
   364 ;;Total ram usage:        3 bytes
   365 ;; Hardware stack levels required when called: 2
   366 ;; This function calls:
   367 ;;		___awdiv
   368 ;;		___awmod
   369 ;; This function is called by:
   370 ;;		Startup code after reset
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374     00E9                     _main:	
   375                           ;psect for function _main
   376                           
   377     00E9                     l905:	
   378                           ;incstack = 0
   379                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   380                           
   381                           
   382                           ;main.c: 25:         if (counter > 99) counter = 0;
   383     00E9  178B               	bsf	11,7	;volatile
   384                           
   385                           ;main.c: 26:         _delay((unsigned long)((500)*(20000000/4000.0)));
   386     00EA  170B               	bsf	11,6	;volatile
   387                           
   388                           ;main.c: 29:     return;
   389     00EB  168B               	bsf	11,5	;volatile
   390     00EC                     l907:
   391                           
   392                           ;main.c: 30: }
   393     00EC  3007               	movlw	7
   394     00ED  1683               	bsf	3,5	;RP0=1, select bank1
   395     00EE  1303               	bcf	3,6	;RP1=0, select bank1
   396     00EF  0081               	movwf	1	;volatile
   397                           
   398                           ;main.c: 31: 
   399     00F0  303B               	movlw	59
   400     00F1  1283               	bcf	3,5	;RP0=0, select bank0
   401     00F2  1303               	bcf	3,6	;RP1=0, select bank0
   402     00F3  0081               	movwf	1	;volatile
   403     00F4                     l909:
   404                           
   405                           ;main.c: 33:     if (INTCONbits.TMR0IF == 1) {
   406     00F4  1683               	bsf	3,5	;RP0=1, select bank1
   407     00F5  1303               	bcf	3,6	;RP1=0, select bank1
   408     00F6  0188               	clrf	8	;volatile
   409     00F7                     l911:
   410                           
   411                           ;main.c: 34:         if (mode == 0) {
   412     00F7  1307               	bcf	7,6	;volatile
   413     00F8                     l913:
   414                           
   415                           ;main.c: 35:             PORTCbits.RC6 = 0;
   416     00F8  1387               	bcf	7,7	;volatile
   417     00F9                     l915:
   418                           
   419                           ;main.c: 38:         } else {
   420     00F9  300A               	movlw	10
   421     00FA  00F3               	movwf	___awdiv@divisor
   422     00FB  3000               	movlw	0
   423     00FC  00F4               	movwf	___awdiv@divisor+1
   424     00FD  0878               	movf	_counter,w
   425     00FE  1283               	bcf	3,5	;RP0=0, select bank0
   426     00FF  1303               	bcf	3,6	;RP1=0, select bank0
   427     0100  00AE               	movwf	??_main
   428     0101  01AF               	clrf	??_main+1
   429     0102  082E               	movf	??_main,w
   430     0103  00F5               	movwf	___awdiv@dividend
   431     0104  082F               	movf	??_main+1,w
   432     0105  00F6               	movwf	___awdiv@dividend+1
   433     0106  120A  118A  2025  120A  118A  	fcall	___awdiv
   434     010B  0873               	movf	?___awdiv,w
   435     010C  00F9               	movwf	_i
   436     010D                     l917:
   437                           
   438                           ;main.c: 39:             PORTCbits.RC6 = 1;
   439     010D  300A               	movlw	10
   440     010E  00F3               	movwf	___awmod@divisor
   441     010F  3000               	movlw	0
   442     0110  00F4               	movwf	___awmod@divisor+1
   443     0111  0878               	movf	_counter,w
   444     0112  1283               	bcf	3,5	;RP0=0, select bank0
   445     0113  1303               	bcf	3,6	;RP1=0, select bank0
   446     0114  00AE               	movwf	??_main
   447     0115  01AF               	clrf	??_main+1
   448     0116  082E               	movf	??_main,w
   449     0117  00F5               	movwf	___awmod@dividend
   450     0118  082F               	movf	??_main+1,w
   451     0119  00F6               	movwf	___awmod@dividend+1
   452     011A  120A  118A  208E  120A  118A  	fcall	___awmod
   453     011F  0873               	movf	?___awmod,w
   454     0120  1283               	bcf	3,5	;RP0=0, select bank0
   455     0121  1303               	bcf	3,6	;RP1=0, select bank0
   456     0122  00B1               	movwf	_j
   457     0123                     l919:
   458                           
   459                           ;main.c: 41:             PORTD = numbers[i];
   460     0123  3001               	movlw	1
   461     0124  00FF               	movwf	btemp+1
   462     0125  087F               	movf	btemp+1,w
   463     0126  07F8               	addwf	_counter,f
   464     0127                     l921:
   465                           
   466                           ;main.c: 42:         }
   467     0127  3064               	movlw	100
   468     0128  0278               	subwf	_counter,w
   469     0129  1C03               	skipc
   470     012A  292C               	goto	u641
   471     012B  292D               	goto	u640
   472     012C                     u641:
   473     012C  292E               	goto	l925
   474     012D                     u640:
   475     012D                     l923:
   476     012D  01F8               	clrf	_counter
   477     012E                     l925:
   478                           
   479                           ;main.c: 43:         mode = ~mode;
   480     012E  300D               	movlw	13
   481     012F  1283               	bcf	3,5	;RP0=0, select bank0
   482     0130  1303               	bcf	3,6	;RP1=0, select bank0
   483     0131  00B0               	movwf	??_main+2
   484     0132  30AF               	movlw	175
   485     0133  00AF               	movwf	??_main+1
   486     0134  30B5               	movlw	181
   487     0135  00AE               	movwf	??_main
   488     0136                     u657:
   489     0136  0BAE               	decfsz	??_main,f
   490     0137  2936               	goto	u657
   491     0138  0BAF               	decfsz	??_main+1,f
   492     0139  2936               	goto	u657
   493     013A  0BB0               	decfsz	??_main+2,f
   494     013B  2936               	goto	u657
   495     013C  293D               	nop2
   496     013D  28F9               	goto	l915
   497     013E  120A  118A  280E   	ljmp	start
   498     0141                     __end_of_main:
   499                           
   500                           	psect	text1
   501     008E                     __ptext1:	
   502 ;; *************** function ___awmod *****************
   503 ;; Defined at:
   504 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;  divisor         2    3[COMMON] int 
   507 ;;  dividend        2    5[COMMON] int 
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  sign            1    1[BANK0 ] unsigned char 
   510 ;;  counter         1    0[BANK0 ] unsigned char 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  2    3[COMMON] int 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, btemp+1
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   520 ;;      Params:         4       0       0       0       0
   521 ;;      Locals:         0       2       0       0       0
   522 ;;      Temps:          0       0       0       0       0
   523 ;;      Totals:         4       2       0       0       0
   524 ;;Total ram usage:        6 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; Hardware stack levels required when called: 1
   527 ;; This function calls:
   528 ;;		Nothing
   529 ;; This function is called by:
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534     008E                     ___awmod:	
   535                           ;psect for function ___awmod
   536                           
   537     008E                     l867:	
   538                           ;incstack = 0
   539                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
   540                           
   541     008E  1283               	bcf	3,5	;RP0=0, select bank0
   542     008F  1303               	bcf	3,6	;RP1=0, select bank0
   543     0090  01AB               	clrf	___awmod@sign
   544     0091                     l869:
   545     0091  1FF6               	btfss	___awmod@dividend+1,7
   546     0092  2894               	goto	u551
   547     0093  2895               	goto	u550
   548     0094                     u551:
   549     0094  289C               	goto	l875
   550     0095                     u550:
   551     0095                     l871:
   552     0095  09F5               	comf	___awmod@dividend,f
   553     0096  09F6               	comf	___awmod@dividend+1,f
   554     0097  0AF5               	incf	___awmod@dividend,f
   555     0098  1903               	skipnz
   556     0099  0AF6               	incf	___awmod@dividend+1,f
   557     009A                     l873:
   558     009A  01AB               	clrf	___awmod@sign
   559     009B  0AAB               	incf	___awmod@sign,f
   560     009C                     l875:
   561     009C  1FF4               	btfss	___awmod@divisor+1,7
   562     009D  289F               	goto	u561
   563     009E  28A0               	goto	u560
   564     009F                     u561:
   565     009F  28A5               	goto	l879
   566     00A0                     u560:
   567     00A0                     l877:
   568     00A0  09F3               	comf	___awmod@divisor,f
   569     00A1  09F4               	comf	___awmod@divisor+1,f
   570     00A2  0AF3               	incf	___awmod@divisor,f
   571     00A3  1903               	skipnz
   572     00A4  0AF4               	incf	___awmod@divisor+1,f
   573     00A5                     l879:
   574     00A5  0873               	movf	___awmod@divisor,w
   575     00A6  0474               	iorwf	___awmod@divisor+1,w
   576     00A7  1903               	btfsc	3,2
   577     00A8  28AA               	goto	u571
   578     00A9  28AB               	goto	u570
   579     00AA                     u571:
   580     00AA  28DA               	goto	l897
   581     00AB                     u570:
   582     00AB                     l881:
   583     00AB  01AA               	clrf	___awmod@counter
   584     00AC  0AAA               	incf	___awmod@counter,f
   585     00AD  28B9               	goto	l887
   586     00AE                     l883:
   587     00AE  3001               	movlw	1
   588     00AF                     u585:
   589     00AF  1003               	clrc
   590     00B0  0DF3               	rlf	___awmod@divisor,f
   591     00B1  0DF4               	rlf	___awmod@divisor+1,f
   592     00B2  3EFF               	addlw	-1
   593     00B3  1D03               	skipz
   594     00B4  28AF               	goto	u585
   595     00B5                     l885:
   596     00B5  3001               	movlw	1
   597     00B6  00FF               	movwf	btemp+1
   598     00B7  087F               	movf	btemp+1,w
   599     00B8  07AA               	addwf	___awmod@counter,f
   600     00B9                     l887:
   601     00B9  1FF4               	btfss	___awmod@divisor+1,7
   602     00BA  28BC               	goto	u591
   603     00BB  28BD               	goto	u590
   604     00BC                     u591:
   605     00BC  28AE               	goto	l883
   606     00BD                     u590:
   607     00BD                     l889:
   608     00BD  0874               	movf	___awmod@divisor+1,w
   609     00BE  0276               	subwf	___awmod@dividend+1,w
   610     00BF  1D03               	skipz
   611     00C0  28C3               	goto	u605
   612     00C1  0873               	movf	___awmod@divisor,w
   613     00C2  0275               	subwf	___awmod@dividend,w
   614     00C3                     u605:
   615     00C3  1C03               	skipc
   616     00C4  28C6               	goto	u601
   617     00C5  28C7               	goto	u600
   618     00C6                     u601:
   619     00C6  28CD               	goto	l893
   620     00C7                     u600:
   621     00C7                     l891:
   622     00C7  0873               	movf	___awmod@divisor,w
   623     00C8  02F5               	subwf	___awmod@dividend,f
   624     00C9  0874               	movf	___awmod@divisor+1,w
   625     00CA  1C03               	skipc
   626     00CB  03F6               	decf	___awmod@dividend+1,f
   627     00CC  02F6               	subwf	___awmod@dividend+1,f
   628     00CD                     l893:
   629     00CD  3001               	movlw	1
   630     00CE                     u615:
   631     00CE  1003               	clrc
   632     00CF  0CF4               	rrf	___awmod@divisor+1,f
   633     00D0  0CF3               	rrf	___awmod@divisor,f
   634     00D1  3EFF               	addlw	-1
   635     00D2  1D03               	skipz
   636     00D3  28CE               	goto	u615
   637     00D4                     l895:
   638     00D4  3001               	movlw	1
   639     00D5  02AA               	subwf	___awmod@counter,f
   640     00D6  1D03               	btfss	3,2
   641     00D7  28D9               	goto	u621
   642     00D8  28DA               	goto	u620
   643     00D9                     u621:
   644     00D9  28BD               	goto	l889
   645     00DA                     u620:
   646     00DA                     l897:
   647     00DA  082B               	movf	___awmod@sign,w
   648     00DB  1903               	btfsc	3,2
   649     00DC  28DE               	goto	u631
   650     00DD  28DF               	goto	u630
   651     00DE                     u631:
   652     00DE  28E4               	goto	l901
   653     00DF                     u630:
   654     00DF                     l899:
   655     00DF  09F5               	comf	___awmod@dividend,f
   656     00E0  09F6               	comf	___awmod@dividend+1,f
   657     00E1  0AF5               	incf	___awmod@dividend,f
   658     00E2  1903               	skipnz
   659     00E3  0AF6               	incf	___awmod@dividend+1,f
   660     00E4                     l901:
   661     00E4  0876               	movf	___awmod@dividend+1,w
   662     00E5  00F4               	movwf	?___awmod+1
   663     00E6  0875               	movf	___awmod@dividend,w
   664     00E7  00F3               	movwf	?___awmod
   665     00E8                     l295:
   666     00E8  0008               	return
   667     00E9                     __end_of___awmod:
   668                           
   669                           	psect	text2
   670     0025                     __ptext2:	
   671 ;; *************** function ___awdiv *****************
   672 ;; Defined at:
   673 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  divisor         2    3[COMMON] int 
   676 ;;  dividend        2    5[COMMON] int 
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  quotient        2    2[BANK0 ] int 
   679 ;;  sign            1    1[BANK0 ] unsigned char 
   680 ;;  counter         1    0[BANK0 ] unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  2    3[COMMON] int 
   683 ;; Registers used:
   684 ;;		wreg, status,2, status,0, btemp+1
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         4       0       0       0       0
   691 ;;      Locals:         0       4       0       0       0
   692 ;;      Temps:          0       0       0       0       0
   693 ;;      Totals:         4       4       0       0       0
   694 ;;Total ram usage:        8 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; Hardware stack levels required when called: 1
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704     0025                     ___awdiv:	
   705                           ;psect for function ___awdiv
   706                           
   707     0025                     l823:	
   708                           ;incstack = 0
   709                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
   710                           
   711     0025  1283               	bcf	3,5	;RP0=0, select bank0
   712     0026  1303               	bcf	3,6	;RP1=0, select bank0
   713     0027  01AB               	clrf	___awdiv@sign
   714     0028                     l825:
   715     0028  1FF4               	btfss	___awdiv@divisor+1,7
   716     0029  282B               	goto	u451
   717     002A  282C               	goto	u450
   718     002B                     u451:
   719     002B  2833               	goto	l831
   720     002C                     u450:
   721     002C                     l827:
   722     002C  09F3               	comf	___awdiv@divisor,f
   723     002D  09F4               	comf	___awdiv@divisor+1,f
   724     002E  0AF3               	incf	___awdiv@divisor,f
   725     002F  1903               	skipnz
   726     0030  0AF4               	incf	___awdiv@divisor+1,f
   727     0031                     l829:
   728     0031  01AB               	clrf	___awdiv@sign
   729     0032  0AAB               	incf	___awdiv@sign,f
   730     0033                     l831:
   731     0033  1FF6               	btfss	___awdiv@dividend+1,7
   732     0034  2836               	goto	u461
   733     0035  2837               	goto	u460
   734     0036                     u461:
   735     0036  2840               	goto	l837
   736     0037                     u460:
   737     0037                     l833:
   738     0037  09F5               	comf	___awdiv@dividend,f
   739     0038  09F6               	comf	___awdiv@dividend+1,f
   740     0039  0AF5               	incf	___awdiv@dividend,f
   741     003A  1903               	skipnz
   742     003B  0AF6               	incf	___awdiv@dividend+1,f
   743     003C                     l835:
   744     003C  3001               	movlw	1
   745     003D  00FF               	movwf	btemp+1
   746     003E  087F               	movf	btemp+1,w
   747     003F  06AB               	xorwf	___awdiv@sign,f
   748     0040                     l837:
   749     0040  01AC               	clrf	___awdiv@quotient
   750     0041  01AD               	clrf	___awdiv@quotient+1
   751     0042                     l839:
   752     0042  0873               	movf	___awdiv@divisor,w
   753     0043  0474               	iorwf	___awdiv@divisor+1,w
   754     0044  1903               	btfsc	3,2
   755     0045  2847               	goto	u471
   756     0046  2848               	goto	u470
   757     0047                     u471:
   758     0047  287F               	goto	l859
   759     0048                     u470:
   760     0048                     l841:
   761     0048  01AA               	clrf	___awdiv@counter
   762     0049  0AAA               	incf	___awdiv@counter,f
   763     004A  2856               	goto	l847
   764     004B                     l843:
   765     004B  3001               	movlw	1
   766     004C                     u485:
   767     004C  1003               	clrc
   768     004D  0DF3               	rlf	___awdiv@divisor,f
   769     004E  0DF4               	rlf	___awdiv@divisor+1,f
   770     004F  3EFF               	addlw	-1
   771     0050  1D03               	skipz
   772     0051  284C               	goto	u485
   773     0052                     l845:
   774     0052  3001               	movlw	1
   775     0053  00FF               	movwf	btemp+1
   776     0054  087F               	movf	btemp+1,w
   777     0055  07AA               	addwf	___awdiv@counter,f
   778     0056                     l847:
   779     0056  1FF4               	btfss	___awdiv@divisor+1,7
   780     0057  2859               	goto	u491
   781     0058  285A               	goto	u490
   782     0059                     u491:
   783     0059  284B               	goto	l843
   784     005A                     u490:
   785     005A                     l849:
   786     005A  3001               	movlw	1
   787     005B                     u505:
   788     005B  1003               	clrc
   789     005C  0DAC               	rlf	___awdiv@quotient,f
   790     005D  0DAD               	rlf	___awdiv@quotient+1,f
   791     005E  3EFF               	addlw	-1
   792     005F  1D03               	skipz
   793     0060  285B               	goto	u505
   794     0061  0874               	movf	___awdiv@divisor+1,w
   795     0062  0276               	subwf	___awdiv@dividend+1,w
   796     0063  1D03               	skipz
   797     0064  2867               	goto	u515
   798     0065  0873               	movf	___awdiv@divisor,w
   799     0066  0275               	subwf	___awdiv@dividend,w
   800     0067                     u515:
   801     0067  1C03               	skipc
   802     0068  286A               	goto	u511
   803     0069  286B               	goto	u510
   804     006A                     u511:
   805     006A  2872               	goto	l855
   806     006B                     u510:
   807     006B                     l851:
   808     006B  0873               	movf	___awdiv@divisor,w
   809     006C  02F5               	subwf	___awdiv@dividend,f
   810     006D  0874               	movf	___awdiv@divisor+1,w
   811     006E  1C03               	skipc
   812     006F  03F6               	decf	___awdiv@dividend+1,f
   813     0070  02F6               	subwf	___awdiv@dividend+1,f
   814     0071                     l853:
   815     0071  142C               	bsf	___awdiv@quotient,0
   816     0072                     l855:
   817     0072  3001               	movlw	1
   818     0073                     u525:
   819     0073  1003               	clrc
   820     0074  0CF4               	rrf	___awdiv@divisor+1,f
   821     0075  0CF3               	rrf	___awdiv@divisor,f
   822     0076  3EFF               	addlw	-1
   823     0077  1D03               	skipz
   824     0078  2873               	goto	u525
   825     0079                     l857:
   826     0079  3001               	movlw	1
   827     007A  02AA               	subwf	___awdiv@counter,f
   828     007B  1D03               	btfss	3,2
   829     007C  287E               	goto	u531
   830     007D  287F               	goto	u530
   831     007E                     u531:
   832     007E  285A               	goto	l849
   833     007F                     u530:
   834     007F                     l859:
   835     007F  082B               	movf	___awdiv@sign,w
   836     0080  1903               	btfsc	3,2
   837     0081  2883               	goto	u541
   838     0082  2884               	goto	u540
   839     0083                     u541:
   840     0083  2889               	goto	l863
   841     0084                     u540:
   842     0084                     l861:
   843     0084  09AC               	comf	___awdiv@quotient,f
   844     0085  09AD               	comf	___awdiv@quotient+1,f
   845     0086  0AAC               	incf	___awdiv@quotient,f
   846     0087  1903               	skipnz
   847     0088  0AAD               	incf	___awdiv@quotient+1,f
   848     0089                     l863:
   849     0089  082D               	movf	___awdiv@quotient+1,w
   850     008A  00F4               	movwf	?___awdiv+1
   851     008B  082C               	movf	___awdiv@quotient,w
   852     008C  00F3               	movwf	?___awdiv
   853     008D                     l282:
   854     008D  0008               	return
   855     008E                     __end_of___awdiv:
   856                           
   857                           	psect	text3
   858     0141                     __ptext3:	
   859 ;; *************** function _interruptISR *****************
   860 ;; Defined at:
   861 ;;		line 49 in file "main.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   875 ;;      Params:         0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0
   877 ;;      Temps:          3       0       0       0       0
   878 ;;      Totals:         3       0       0       0       0
   879 ;;Total ram usage:        3 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		Interrupt level 1
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888     0141                     _interruptISR:	
   889                           ;psect for function _interruptISR
   890                           
   891     0141                     i1l809:
   892     0141  1D0B               	btfss	11,2	;volatile
   893     0142  2944               	goto	u43_21
   894     0143  2945               	goto	u43_20
   895     0144                     u43_21:
   896     0144  2961               	goto	i1l43
   897     0145                     u43_20:
   898     0145                     i1l811:
   899     0145  0877               	movf	_mode,w
   900     0146  1D03               	btfss	3,2
   901     0147  2949               	goto	u44_21
   902     0148  294A               	goto	u44_20
   903     0149                     u44_21:
   904     0149  2955               	goto	i1l41
   905     014A                     u44_20:
   906     014A                     i1l813:
   907     014A  1283               	bcf	3,5	;RP0=0, select bank0
   908     014B  1303               	bcf	3,6	;RP1=0, select bank0
   909     014C  1307               	bcf	7,6	;volatile
   910     014D  1787               	bsf	7,7	;volatile
   911     014E                     i1l815:
   912     014E  0831               	movf	_j,w
   913     014F  3E20               	addlw	(low (_numbers| 0))& (0+255)
   914     0150  0084               	movwf	4
   915     0151  1383               	bcf	3,7	;select IRP bank0
   916     0152  0800               	movf	0,w
   917     0153  0088               	movwf	8	;volatile
   918     0154  295F               	goto	i1l819
   919     0155                     i1l41:
   920     0155  1283               	bcf	3,5	;RP0=0, select bank0
   921     0156  1303               	bcf	3,6	;RP1=0, select bank0
   922     0157  1707               	bsf	7,6	;volatile
   923     0158  1387               	bcf	7,7	;volatile
   924     0159                     i1l817:
   925     0159  0879               	movf	_i,w
   926     015A  3E20               	addlw	(low (_numbers| 0))& (0+255)
   927     015B  0084               	movwf	4
   928     015C  1383               	bcf	3,7	;select IRP bank0
   929     015D  0800               	movf	0,w
   930     015E  0088               	movwf	8	;volatile
   931     015F                     i1l819:
   932     015F  09F7               	comf	_mode,f
   933     0160                     i1l821:
   934     0160  110B               	bcf	11,2	;volatile
   935     0161                     i1l43:
   936     0161  0872               	movf	??_interruptISR+2,w
   937     0162  008A               	movwf	10
   938     0163  0871               	movf	??_interruptISR+1,w
   939     0164  0084               	movwf	4
   940     0165  0E70               	swapf	??_interruptISR,w
   941     0166  0083               	movwf	3
   942     0167  0EFE               	swapf	btemp,f
   943     0168  0E7E               	swapf	btemp,w
   944     0169  0009               	retfie
   945     016A                     __end_of_interruptISR:
   946     007E                     btemp	set	126	;btemp
   947     007E                     wtemp0	set	126
   948                           
   949                           	psect	intentry
   950     0004                     __pintentry:	
   951                           ;incstack = 0
   952                           ; Regs used in _interruptISR: [wreg-fsr0h+status,2+status,0]
   953                           
   954     0004                     interrupt_function:
   955     007E                     saved_w	set	btemp
   956     0004  00FE               	movwf	btemp
   957     0005  0E03               	swapf	3,w
   958     0006  00F0               	movwf	??_interruptISR
   959     0007  0804               	movf	4,w
   960     0008  00F1               	movwf	??_interruptISR+1
   961     0009  080A               	movf	10,w
   962     000A  00F2               	movwf	??_interruptISR+2
   963     000B  120A  118A  2941   	ljmp	_interruptISR
   964                           
   965                           	psect	config
   966                           
   967                           ;Config register CONFIG @ 0x2007
   968                           ;	Oscillator Selection bits
   969                           ;	FOSC = HS, HS oscillator
   970                           ;	Watchdog Timer Enable bit
   971                           ;	WDTE = OFF, WDT disabled
   972                           ;	Power-up Timer Enable bit
   973                           ;	PWRTE = OFF, PWRT disabled
   974                           ;	Brown-out Reset Enable bit
   975                           ;	BOREN = OFF, BOR disabled
   976                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   977                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   978                           ;	Data EEPROM Memory Code Protection bit
   979                           ;	CPD = OFF, Data EEPROM code protection off
   980                           ;	Flash Program Memory Write Enable bits
   981                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   982                           ;	In-Circuit Debugger Mode bit
   983                           ;	DEBUG = 0x1, unprogrammed default
   984                           ;	Flash Program Memory Code Protection bit
   985                           ;	CP = OFF, Code protection off
   986     2007                     	org	8199
   987     2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      7      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _main->___awmod

Critical Paths under _interruptISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _interruptISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1238
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     613
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     625
                                              3 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _interruptISR                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 _interruptISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun May 19 21:22:49 2024

                      _i 0079                        _j 0031                        pc 0002  
           ___awdiv@sign 002B                       fsr 0004                      l282 008D  
                    l295 00E8                      l901 00E4                      l831 0033  
                    l823 0025                      l911 00F7                      l841 0048  
                    l833 0037                      l825 0028                      l921 0127  
                    l913 00F8                      l905 00E9                      l851 006B  
                    l843 004B                      l835 003C                      l827 002C  
                    l923 012D                      l915 00F9                      l907 00EC  
                    l861 0084                      l853 0071                      l845 0052  
                    l837 0040                      l829 0031                      l925 012E  
                    l917 010D                      l909 00F4                      l863 0089  
                    l855 0072                      l847 0056                      l839 0042  
                    l871 0095                      l919 0123                      l857 0079  
                    l849 005A                      l881 00AB                      l873 009A  
                    l859 007F                      l891 00C7                      l883 00AE  
                    l875 009C                      l867 008E                      l893 00CD  
                    l885 00B5                      l877 00A0                      l869 0091  
                    l895 00D4                      l887 00B9                      l879 00A5  
                    l889 00BD                      l897 00DA                      l899 00DF  
                    u510 006B                      u511 006A                      u600 00C7  
                    u505 005B                      u601 00C6                      u530 007F  
                    u450 002C                      u531 007E                      u515 0067  
                    u451 002B                      u540 0084                      u460 0037  
                    u620 00DA                      u541 0083                      u525 0073  
                    u461 0036                      u621 00D9                      u605 00C3  
                    u470 0048                      u630 00DF                      u550 0095  
                    u471 0047                      u631 00DE                      u615 00CE  
                    u551 0094                      u560 00A0                      u640 012D  
                    u561 009F                      u641 012C                      u490 005A  
                    u570 00AB                      u491 0059                      u571 00AA  
                    u485 004C                      u590 00BD                      u591 00BC  
                    u585 00AF                      u657 0136                      fsr0 0004  
                    indf 0000             ___awmod@sign 002B                     i1l41 0155  
                   i1l43 0161                     _TMR0 0001                     _main 00E9  
                   _mode 0077                     btemp 007E                     start 000E  
                  ?_main 0070          __end_of___awdiv 008E          __end_of___awmod 00E9  
        ___awdiv@divisor 0073                    i1l811 0145                    i1l821 0160  
                  i1l813 014A                    i1l815 014E                    i1l817 0159  
                  i1l809 0141                    i1l819 015F          ___awdiv@counter 002A  
                  u43_20 0145                    u43_21 0144                    _PORTD 0008  
                  u44_20 014A                    u44_21 0149                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0141                   ??_main 002E  
       ___awdiv@dividend 0075                ??___awdiv 0077                ??___awmod 0077  
       ___awdiv@quotient 002C          ___awmod@divisor 0073          ___awmod@counter 002A  
                 saved_w 007E  __end_of__initialization 0021           __pcstackCOMMON 0070  
          ?_interruptISR 0070             __pidataBANK0 017D               __pnvCOMMON 0079  
         ??_interruptISR 0070               __pmaintext 00E9               __pintentry 0004  
                ___awdiv 0025                  ___awmod 008E                  __ptext1 008E  
                __ptext2 0025                  __ptext3 0141                  _counter 0078  
       ___awmod@dividend 0075                  _numbers 0020     end_of_initialization 0021  
              _PORTCbits 0007                _TRISCbits 0087     __end_of_interruptISR 016A  
    start_initialization 0011               init_fetch0 016A              __pdataBANK0 0020  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 002A  
              __pnvBANK0 0031                 ?___awdiv 0073                 ?___awmod 0073  
      interrupt_function 0004             _interruptISR 0141               _INTCONbits 000B  
               init_ram0 016E                 intlevel1 0000               _OPTION_REG 0081  
