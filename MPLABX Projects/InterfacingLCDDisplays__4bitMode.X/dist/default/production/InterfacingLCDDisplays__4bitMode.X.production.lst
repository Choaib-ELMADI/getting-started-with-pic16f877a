

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu May 16 13:16:54 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 22/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0008                     _PORTD	set	8
   170     0007                     _PORTCbits	set	7
   171     0447                     _TRISD7	set	1095
   172     0446                     _TRISD6	set	1094
   173     0445                     _TRISD5	set	1093
   174     0444                     _TRISD4	set	1092
   175     043A                     _TRISC2	set	1082
   176     0439                     _TRISC1	set	1081
   177     0438                     _TRISC0	set	1080
   178                           
   179                           	psect	strings
   180     0003                     __pstrings:
   181     0003                     stringtab:
   182     0003                     __stringtab:
   183     0003                     stringcode:	
   184                           ;	String table - string pointers are 1 byte each
   185                           
   186     0003                     stringdir:
   187     0003  3000               	movlw	high stringdir
   188     0004  008A               	movwf	10
   189     0005  0804               	movf	4,w
   190     0006  0A84               	incf	4,f
   191     0007  0782               	addwf	2,f
   192     0008                     __stringbase:
   193     0008  3400               	retlw	0
   194     0009                     __end_of__stringtab:
   195     0009                     STR_2:
   196     0009  3443               	retlw	67	;'C'
   197     000A  3448               	retlw	72	;'H'
   198     000B  344F               	retlw	79	;'O'
   199     000C  3441               	retlw	65	;'A'
   200     000D  3449               	retlw	73	;'I'
   201     000E  3442               	retlw	66	;'B'
   202     000F  3420               	retlw	32	;' '
   203     0010  3445               	retlw	69	;'E'
   204     0011  344C               	retlw	76	;'L'
   205     0012  344D               	retlw	77	;'M'
   206     0013  3441               	retlw	65	;'A'
   207     0014  3444               	retlw	68	;'D'
   208     0015  3449               	retlw	73	;'I'
   209     0016  3400               	retlw	0
   210     0017                     STR_1:
   211     0017  3448               	retlw	72	;'H'
   212     0018  3449               	retlw	73	;'I'
   213     0019  342C               	retlw	44	;','
   214     001A  3420               	retlw	32	;' '
   215     001B  3449               	retlw	73	;'I'
   216     001C  3454               	retlw	84	;'T'
   217     001D  3427               	retlw	39	;'''
   218     001E  3453               	retlw	83	;'S'
   219     001F  3420               	retlw	32	;' '
   220     0020  344D               	retlw	77	;'M'
   221     0021  3445               	retlw	69	;'E'
   222     0022  3400               	retlw	0
   223                           
   224                           	psect	cinit
   225     07FC                     start_initialization:	
   226                           ; #config settings
   227                           
   228     07FC                     __initialization:
   229     07FC                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232     07FC                     __end_of__initialization:
   233     07FC  0183               	clrf	3
   234     07FD  120A  118A  2F6C   	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	cstackCOMMON
   237     0070                     __pcstackCOMMON:
   238     0070                     ?_lcd_initialize:
   239     0070                     ?_lcd_command:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ??_lcd_command:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ?_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     ?_lcd_data:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0070                     ??_lcd_data:	
   252                           ; 1 bytes @ 0x0
   253                           
   254                           
   255                           ; 1 bytes @ 0x0
   256     0070                     	ds	2
   257     0072                     lcd_data@data:
   258     0072                     lcd_command@cmd:	
   259                           ; 1 bytes @ 0x2
   260                           
   261                           
   262                           ; 1 bytes @ 0x2
   263     0072                     	ds	1
   264     0073                     ??_lcd_initialize:
   265     0073                     ?_lcd_string:	
   266                           ; 1 bytes @ 0x3
   267                           
   268     0073                     lcd_string@len:	
   269                           ; 1 bytes @ 0x3
   270                           
   271                           
   272                           ; 1 bytes @ 0x3
   273     0073                     	ds	1
   274     0074                     ??_lcd_string:
   275     0074                     lcd_string@str:	
   276                           ; 1 bytes @ 0x4
   277                           
   278                           
   279                           ; 1 bytes @ 0x4
   280     0074                     	ds	1
   281     0075                     lcd_string@i:
   282                           
   283                           ; 1 bytes @ 0x5
   284     0075                     	ds	1
   285     0076                     ??_main:
   286                           
   287                           	psect	maintext
   288     076C                     __pmaintext:	
   289                           ; 1 bytes @ 0x6
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   292 ;;
   293 ;; *************** function _main *****************
   294 ;; Defined at:
   295 ;;		line 23 in file "main.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;		None
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : B00/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   309 ;;      Params:         0       0       0       0       0
   310 ;;      Locals:         0       0       0       0       0
   311 ;;      Temps:          0       0       0       0       0
   312 ;;      Totals:         0       0       0       0       0
   313 ;;Total ram usage:        0 bytes
   314 ;; Hardware stack levels required when called: 2
   315 ;; This function calls:
   316 ;;		_lcd_command
   317 ;;		_lcd_initialize
   318 ;;		_lcd_string
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324     076C                     _main:	
   325                           ;psect for function _main
   326                           
   327     076C                     l659:	
   328                           ;incstack = 0
   329                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   330                           
   331                           
   332                           ;main.c: 24:         lcd_command(0xC1);
   333     076C  1683               	bsf	3,5	;RP0=1, select bank1
   334     076D  1303               	bcf	3,6	;RP1=0, select bank1
   335     076E  1007               	bcf	7,0	;volatile
   336                           
   337                           ;main.c: 25:         lcd_string("CHOAIB ELMADI", 13);
   338     076F  1087               	bcf	7,1	;volatile
   339                           
   340                           ;main.c: 26:     }
   341     0770  1107               	bcf	7,2	;volatile
   342                           
   343                           ;main.c: 28:     return;
   344     0771  1208               	bcf	8,4	;volatile
   345                           
   346                           ;main.c: 29: }
   347     0772  1288               	bcf	8,5	;volatile
   348                           
   349                           ;main.c: 30: 
   350     0773  1308               	bcf	8,6	;volatile
   351                           
   352                           ;main.c: 31: void lcd_initialize() {
   353     0774  1388               	bcf	8,7	;volatile
   354     0775                     l661:
   355                           
   356                           ;main.c: 33:     lcd_command(0x28);
   357     0775  120A  118A  274D  120A  118A  	fcall	_lcd_initialize
   358     077A                     l31:	
   359                           ;main.c: 35:     lcd_command(0x0C);
   360                           
   361                           
   362                           ;main.c: 36:     lcd_command(0x01);
   363     077A  3082               	movlw	130
   364     077B  120A  118A  279A  120A  118A  	fcall	_lcd_command
   365     0780                     l663:
   366                           
   367                           ;main.c: 37: }
   368     0780  300B               	movlw	11
   369     0781  00F3               	movwf	lcd_string@len
   370     0782  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   371     0783  120A  118A  2732  120A  118A  	fcall	_lcd_string
   372     0788                     l665:
   373                           
   374                           ;main.c: 38: 
   375     0788  30C1               	movlw	193
   376     0789  120A  118A  279A  120A  118A  	fcall	_lcd_command
   377                           
   378                           ;main.c: 39: void lcd_data(unsigned char data) {
   379     078E  300D               	movlw	13
   380     078F  00F3               	movwf	lcd_string@len
   381     0790  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   382     0791  120A  118A  2732  120A  118A  	fcall	_lcd_string
   383     0796  2F7A               	goto	l31
   384     0797  120A  118A  2800   	ljmp	start
   385     079A                     __end_of_main:
   386                           
   387                           	psect	text1
   388     0732                     __ptext1:	
   389 ;; *************** function _lcd_string *****************
   390 ;; Defined at:
   391 ;;		line 68 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;  str             1    wreg     PTR const unsigned char 
   394 ;;		 -> STR_2(14), STR_1(12), 
   395 ;;  len             1    3[COMMON] unsigned char 
   396 ;; Auto vars:     Size  Location     Type
   397 ;;  str             1    4[COMMON] PTR const unsigned char 
   398 ;;		 -> STR_2(14), STR_1(12), 
   399 ;;  i               1    5[COMMON] unsigned char 
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   409 ;;      Params:         1       0       0       0       0
   410 ;;      Locals:         2       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0
   412 ;;      Totals:         3       0       0       0       0
   413 ;;Total ram usage:        3 bytes
   414 ;; Hardware stack levels used: 1
   415 ;; Hardware stack levels required when called: 1
   416 ;; This function calls:
   417 ;;		_lcd_data
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423     0732                     _lcd_string:	
   424                           ;psect for function _lcd_string
   425                           
   426                           
   427                           ;incstack = 0
   428                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   429                           ;lcd_string@str stored from wreg
   430     0732  00F4               	movwf	lcd_string@str
   431     0733                     l651:
   432                           
   433                           ;main.c: 69:     PORTCbits.RC2 = 1;;main.c: 70:     PORTCbits.RC0 = 0;
   434     0733  01F5               	clrf	lcd_string@i
   435     0734  2F46               	goto	l657
   436     0735                     l653:
   437                           
   438                           ;main.c: 71:     PORTCbits.RC1 = 0;
   439     0735  0875               	movf	lcd_string@i,w
   440     0736  0774               	addwf	lcd_string@str,w
   441     0737  0084               	movwf	4
   442     0738  120A  118A  2003  120A  118A  	fcall	stringdir
   443     073D  120A  118A  27CB  120A  118A  	fcall	_lcd_data
   444     0742                     l655:
   445                           
   446                           ;main.c: 72:      _delay((unsigned long)((2)*(20000000/4000.0)));
   447     0742  3001               	movlw	1
   448     0743  00FF               	movwf	btemp+1
   449     0744  087F               	movf	btemp+1,w
   450     0745  07F5               	addwf	lcd_string@i,f
   451     0746                     l657:
   452     0746  0873               	movf	lcd_string@len,w
   453     0747  0275               	subwf	lcd_string@i,w
   454     0748  1C03               	skipc
   455     0749  2F4B               	goto	u41
   456     074A  2F4C               	goto	u40
   457     074B                     u41:
   458     074B  2F35               	goto	l653
   459     074C                     u40:
   460     074C                     l46:
   461     074C  0008               	return
   462     074D                     __end_of_lcd_string:
   463                           
   464                           	psect	text2
   465     07CB                     __ptext2:	
   466 ;; *************** function _lcd_data *****************
   467 ;; Defined at:
   468 ;;		line 53 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  data            1    wreg     unsigned char 
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  data            1    2[COMMON] unsigned char 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, status,2, status,0
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         1       0       0       0       0
   484 ;;      Temps:          2       0       0       0       0
   485 ;;      Totals:         3       0       0       0       0
   486 ;;Total ram usage:        3 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_lcd_string
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495     07CB                     _lcd_data:	
   496                           ;psect for function _lcd_data
   497                           
   498                           
   499                           ;incstack = 0
   500                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
   501                           ;lcd_data@data stored from wreg
   502     07CB  00F2               	movwf	lcd_data@data
   503     07CC                     l613:
   504                           
   505                           ;main.c: 54: void lcd_string(const unsigned char *str, unsigned char len) {
   506     07CC  1283               	bcf	3,5	;RP0=0, select bank0
   507     07CD  1303               	bcf	3,6	;RP1=0, select bank0
   508     07CE  1507               	bsf	7,2	;volatile
   509                           
   510                           ;main.c: 55:     unsigned char i;
   511     07CF  1407               	bsf	7,0	;volatile
   512                           
   513                           ;main.c: 56:     for (i=0; i<len; ++i) {
   514     07D0  1087               	bcf	7,1	;volatile
   515     07D1                     l615:
   516                           
   517                           ;main.c: 57:         lcd_data(str[i]);
   518     07D1  0872               	movf	lcd_data@data,w
   519     07D2  39F0               	andlw	240
   520     07D3  0088               	movwf	8	;volatile
   521     07D4                     l617:
   522                           
   523                           ;main.c: 58:     }
   524     07D4  300D               	movlw	13
   525     07D5  00F1               	movwf	??_lcd_data+1
   526     07D6  30FB               	movlw	251
   527     07D7  00F0               	movwf	??_lcd_data
   528     07D8                     u57:
   529     07D8  0BF0               	decfsz	??_lcd_data,f
   530     07D9  2FD8               	goto	u57
   531     07DA  0BF1               	decfsz	??_lcd_data+1,f
   532     07DB  2FD8               	goto	u57
   533     07DC  2FDD               	nop2
   534     07DD                     l619:
   535                           
   536                           ;main.c: 59: }
   537     07DD  1283               	bcf	3,5	;RP0=0, select bank0
   538     07DE  1303               	bcf	3,6	;RP1=0, select bank0
   539     07DF  1107               	bcf	7,2	;volatile
   540     07E0                     l621:
   541                           
   542                           ;main.c: 60: 
   543     07E0  0872               	movf	lcd_data@data,w
   544     07E1  00F0               	movwf	??_lcd_data
   545     07E2  3003               	movlw	3
   546     07E3                     u25:
   547     07E3  1003               	clrc
   548     07E4  0DF0               	rlf	??_lcd_data,f
   549     07E5  3EFF               	addlw	-1
   550     07E6  1D03               	skipz
   551     07E7  2FE3               	goto	u25
   552     07E8  1003               	clrc
   553     07E9  0D70               	rlf	??_lcd_data,w
   554     07EA  39F0               	andlw	240
   555     07EB  0088               	movwf	8	;volatile
   556     07EC                     l623:
   557                           
   558                           ;main.c: 61: void lcd_command(unsigned char cmd) {
   559     07EC  1507               	bsf	7,2	;volatile
   560     07ED                     l625:
   561                           
   562                           ;main.c: 62:     PORTCbits.RC2 = 1;
   563     07ED  1407               	bsf	7,0	;volatile
   564     07EE                     l627:
   565                           
   566                           ;main.c: 63:     PORTCbits.RC0 = 0;
   567     07EE  1087               	bcf	7,1	;volatile
   568     07EF                     l629:
   569                           
   570                           ;main.c: 64:     PORTCbits.RC1 = 0;
   571     07EF  300D               	movlw	13
   572     07F0  00F1               	movwf	??_lcd_data+1
   573     07F1  30FB               	movlw	251
   574     07F2  00F0               	movwf	??_lcd_data
   575     07F3                     u67:
   576     07F3  0BF0               	decfsz	??_lcd_data,f
   577     07F4  2FF3               	goto	u67
   578     07F5  0BF1               	decfsz	??_lcd_data+1,f
   579     07F6  2FF3               	goto	u67
   580     07F7  2FF8               	nop2
   581     07F8                     l631:
   582                           
   583                           ;main.c: 65:     PORTD = (cmd & 0xF0);
   584     07F8  1283               	bcf	3,5	;RP0=0, select bank0
   585     07F9  1303               	bcf	3,6	;RP1=0, select bank0
   586     07FA  1107               	bcf	7,2	;volatile
   587     07FB                     l40:
   588     07FB  0008               	return
   589     07FC                     __end_of_lcd_data:
   590                           
   591                           	psect	text3
   592     074D                     __ptext3:	
   593 ;; *************** function _lcd_initialize *****************
   594 ;; Defined at:
   595 ;;		line 45 in file "main.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, pclath, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         0       0       0       0       0
   610 ;;      Locals:         0       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0
   612 ;;      Totals:         0       0       0       0       0
   613 ;;Total ram usage:        0 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 1
   616 ;; This function calls:
   617 ;;		_lcd_command
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623     074D                     _lcd_initialize:	
   624                           ;psect for function _lcd_initialize
   625                           
   626     074D                     l633:	
   627                           ;incstack = 0
   628                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
   629                           
   630                           
   631                           ;main.c: 46:     PORTD = ((data << 4) & 0xF0);
   632     074D  3002               	movlw	2
   633     074E  120A  118A  279A  120A  118A  	fcall	_lcd_command
   634                           
   635                           ;main.c: 47:     PORTCbits.RC2 = 1;
   636     0753  3028               	movlw	40
   637     0754  120A  118A  279A  120A  118A  	fcall	_lcd_command
   638                           
   639                           ;main.c: 48:     PORTCbits.RC0 = 1;
   640     0759  3006               	movlw	6
   641     075A  120A  118A  279A  120A  118A  	fcall	_lcd_command
   642                           
   643                           ;main.c: 49:     PORTCbits.RC1 = 0;
   644     075F  300C               	movlw	12
   645     0760  120A  118A  279A  120A  118A  	fcall	_lcd_command
   646                           
   647                           ;main.c: 50:      _delay((unsigned long)((2)*(20000000/4000.0)));
   648     0765  3001               	movlw	1
   649     0766  120A  118A  279A  120A  118A  	fcall	_lcd_command
   650     076B                     l37:
   651     076B  0008               	return
   652     076C                     __end_of_lcd_initialize:
   653                           
   654                           	psect	text4
   655     079A                     __ptext4:	
   656 ;; *************** function _lcd_command *****************
   657 ;; Defined at:
   658 ;;		line 75 in file "main.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;  cmd             1    wreg     unsigned char 
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  cmd             1    2[COMMON] unsigned char 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         1       0       0       0       0
   674 ;;      Temps:          2       0       0       0       0
   675 ;;      Totals:         3       0       0       0       0
   676 ;;Total ram usage:        3 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_main
   682 ;;		_lcd_initialize
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686     079A                     _lcd_command:	
   687                           ;psect for function _lcd_command
   688                           
   689                           
   690                           ;incstack = 0
   691                           ; Regs used in _lcd_command: [wreg+status,2+status,0]
   692                           ;lcd_command@cmd stored from wreg
   693     079A  00F2               	movwf	lcd_command@cmd
   694     079B                     l593:
   695     079B  1283               	bcf	3,5	;RP0=0, select bank0
   696     079C  1303               	bcf	3,6	;RP1=0, select bank0
   697     079D  1507               	bsf	7,2	;volatile
   698     079E  1007               	bcf	7,0	;volatile
   699     079F  1087               	bcf	7,1	;volatile
   700     07A0                     l595:
   701     07A0  0872               	movf	lcd_command@cmd,w
   702     07A1  39F0               	andlw	240
   703     07A2  0088               	movwf	8	;volatile
   704     07A3                     l597:
   705     07A3  300D               	movlw	13
   706     07A4  00F1               	movwf	??_lcd_command+1
   707     07A5  30FB               	movlw	251
   708     07A6  00F0               	movwf	??_lcd_command
   709     07A7                     u77:
   710     07A7  0BF0               	decfsz	??_lcd_command,f
   711     07A8  2FA7               	goto	u77
   712     07A9  0BF1               	decfsz	??_lcd_command+1,f
   713     07AA  2FA7               	goto	u77
   714     07AB  2FAC               	nop2
   715     07AC                     l599:
   716     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   717     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   718     07AE  1107               	bcf	7,2	;volatile
   719     07AF                     l601:
   720     07AF  0872               	movf	lcd_command@cmd,w
   721     07B0  00F0               	movwf	??_lcd_command
   722     07B1  3003               	movlw	3
   723     07B2                     u15:
   724     07B2  1003               	clrc
   725     07B3  0DF0               	rlf	??_lcd_command,f
   726     07B4  3EFF               	addlw	-1
   727     07B5  1D03               	skipz
   728     07B6  2FB2               	goto	u15
   729     07B7  1003               	clrc
   730     07B8  0D70               	rlf	??_lcd_command,w
   731     07B9  39F0               	andlw	240
   732     07BA  0088               	movwf	8	;volatile
   733     07BB                     l603:
   734     07BB  1507               	bsf	7,2	;volatile
   735     07BC                     l605:
   736     07BC  1007               	bcf	7,0	;volatile
   737     07BD                     l607:
   738     07BD  1087               	bcf	7,1	;volatile
   739     07BE                     l609:
   740     07BE  300D               	movlw	13
   741     07BF  00F1               	movwf	??_lcd_command+1
   742     07C0  30FB               	movlw	251
   743     07C1  00F0               	movwf	??_lcd_command
   744     07C2                     u87:
   745     07C2  0BF0               	decfsz	??_lcd_command,f
   746     07C3  2FC2               	goto	u87
   747     07C4  0BF1               	decfsz	??_lcd_command+1,f
   748     07C5  2FC2               	goto	u87
   749     07C6  2FC7               	nop2
   750     07C7                     l611:
   751     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   752     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   753     07C9  1107               	bcf	7,2	;volatile
   754     07CA                     l49:
   755     07CA  0008               	return
   756     07CB                     __end_of_lcd_command:
   757     007E                     btemp	set	126	;btemp
   758     007E                     wtemp0	set	126
   759                           
   760                           	psect	config
   761                           
   762                           ;Config register CONFIG @ 0x2007
   763                           ;	Oscillator Selection bits
   764                           ;	FOSC = HS, HS oscillator
   765                           ;	Watchdog Timer Enable bit
   766                           ;	WDTE = OFF, WDT disabled
   767                           ;	Power-up Timer Enable bit
   768                           ;	PWRTE = OFF, PWRT disabled
   769                           ;	Brown-out Reset Enable bit
   770                           ;	BOREN = OFF, BOR disabled
   771                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   772                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   773                           ;	Data EEPROM Memory Code Protection bit
   774                           ;	CPD = OFF, Data EEPROM code protection off
   775                           ;	Flash Program Memory Write Enable bits
   776                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   777                           ;	In-Circuit Debugger Mode bit
   778                           ;	DEBUG = 0x1, unprogrammed default
   779                           ;	Flash Program Memory Code Protection bit
   780                           ;	CP = OFF, Code protection off
   781     2007                     	org	8199
   782     2007  3FBA               	dw	16314

Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[12]), STR_2(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_initialize->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     398
                        _lcd_command
                     _lcd_initialize
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           3     2      1     338
                                              3 COMMON     3     2      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       0     0      0      30
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_command
   _lcd_initialize
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu May 16 13:16:54 2024

                      pc 0002             lcd_data@data 0072                       l31 077A  
                     l40 07FB                       l37 076B                       l46 074C  
                     l49 07CA                       u15 07B2                       u40 074C  
                     u25 07E3                       u41 074B                       u57 07D8  
                     u67 07F3                       u77 07A7                       u87 07C2  
                     fsr 0004                      l601 07AF                      l611 07C7  
                    l603 07BB                      l605 07BC                      l621 07E0  
                    l613 07CC                      l607 07BD                      l631 07F8  
                    l623 07EC                      l615 07D1                      l609 07BE  
                    l633 074D                      l625 07ED                      l617 07D4  
                    l627 07EE                      l619 07DD                      l651 0733  
                    l629 07EF                      l653 0735                      l661 0775  
                    l655 0742                      l663 0780                      l593 079B  
                    l657 0746                      l665 0788                      l595 07A0  
                    l659 076C                      l597 07A3                      l599 07AC  
                    fsr0 0004                     STR_1 0017                     STR_2 0009  
                   _main 076C                     btemp 007E                     start 0000  
            lcd_string@i 0075                    ?_main 0070                    _PORTD 0008  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 079A                   ??_main 0076  
         lcd_command@cmd 0072                   _TRISC0 0438                   _TRISC1 0439  
                 _TRISC2 043A                   _TRISD4 0444                   _TRISD5 0445  
                 _TRISD6 0446                   _TRISD7 0447         __end_of_lcd_data 07FC  
       ??_lcd_initialize 0073            lcd_string@len 0073            lcd_string@str 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 076C  
              ?_lcd_data 0070               _lcd_string 0732               __stringtab 0003  
                __ptext1 0732                  __ptext2 07CB                  __ptext3 074D  
                __ptext4 079A               ??_lcd_data 0070     end_of_initialization 07FC  
              _PORTCbits 0007              ?_lcd_string 0073            ??_lcd_command 0070  
    start_initialization 07FC      __end_of_lcd_command 07CB                ___latbits 0002  
              __pstrings 0003              _lcd_command 079A              __stringbase 0008  
           ??_lcd_string 0074       __end_of_lcd_string 074D       __end_of__stringtab 0009  
               _lcd_data 07CB           _lcd_initialize 074D   __end_of_lcd_initialize 076C  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
        ?_lcd_initialize 0070             ?_lcd_command 0070  
