

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu May 16 10:30:55 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 22/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0008                     _PORTD	set	8
   170     0007                     _PORTCbits	set	7
   171     0088                     _TRISD	set	136
   172     043A                     _TRISC2	set	1082
   173     0439                     _TRISC1	set	1081
   174     0438                     _TRISC0	set	1080
   175                           
   176                           	psect	strings
   177     0003                     __pstrings:
   178     0003                     stringtab:
   179     0003                     __stringtab:
   180     0003                     stringcode:	
   181                           ;	String table - string pointers are 1 byte each
   182                           
   183     0003                     stringdir:
   184     0003  3000               	movlw	high stringdir
   185     0004  008A               	movwf	10
   186     0005  0804               	movf	4,w
   187     0006  0A84               	incf	4,f
   188     0007  0782               	addwf	2,f
   189     0008                     __stringbase:
   190     0008  3400               	retlw	0
   191     0009                     __end_of__stringtab:
   192     0009                     STR_2:
   193     0009  3450               	retlw	80	;'P'
   194     000A  3449               	retlw	73	;'I'
   195     000B  3443               	retlw	67	;'C'
   196     000C  3420               	retlw	32	;' '
   197     000D  3431               	retlw	49	;'1'
   198     000E  3436               	retlw	54	;'6'
   199     000F  3446               	retlw	70	;'F'
   200     0010  3438               	retlw	56	;'8'
   201     0011  3437               	retlw	55	;'7'
   202     0012  3437               	retlw	55	;'7'
   203     0013  3441               	retlw	65	;'A'
   204     0014  3400               	retlw	0
   205     0015                     STR_1:
   206     0015  3448               	retlw	72	;'H'
   207     0016  3445               	retlw	69	;'E'
   208     0017  344C               	retlw	76	;'L'
   209     0018  344C               	retlw	76	;'L'
   210     0019  344F               	retlw	79	;'O'
   211     001A  3420               	retlw	32	;' '
   212     001B  3446               	retlw	70	;'F'
   213     001C  3452               	retlw	82	;'R'
   214     001D  344F               	retlw	79	;'O'
   215     001E  344D               	retlw	77	;'M'
   216     001F  3400               	retlw	0
   217                           
   218                           	psect	cinit
   219     07FC                     start_initialization:	
   220                           ; #config settings
   221                           
   222     07FC                     __initialization:
   223     07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226     07FC                     __end_of__initialization:
   227     07FC  0183               	clrf	3
   228     07FD  120A  118A  2FD1   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231     0070                     __pcstackCOMMON:
   232     0070                     ?_lcd_initialize:
   233     0070                     ?_lcd_command:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ??_lcd_command:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ?_main:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ?_lcd_data:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ??_lcd_data:	
   246                           ; 1 bytes @ 0x0
   247                           
   248                           
   249                           ; 1 bytes @ 0x0
   250     0070                     	ds	2
   251     0072                     lcd_data@data:
   252     0072                     lcd_command@cmd:	
   253                           ; 1 bytes @ 0x2
   254                           
   255                           
   256                           ; 1 bytes @ 0x2
   257     0072                     	ds	1
   258     0073                     ??_lcd_initialize:
   259     0073                     ?_lcd_string:	
   260                           ; 1 bytes @ 0x3
   261                           
   262     0073                     lcd_string@len:	
   263                           ; 1 bytes @ 0x3
   264                           
   265                           
   266                           ; 1 bytes @ 0x3
   267     0073                     	ds	1
   268     0074                     ??_lcd_string:
   269     0074                     lcd_string@str:	
   270                           ; 1 bytes @ 0x4
   271                           
   272                           
   273                           ; 1 bytes @ 0x4
   274     0074                     	ds	1
   275     0075                     lcd_string@i:
   276                           
   277                           ; 1 bytes @ 0x5
   278     0075                     	ds	1
   279     0076                     ??_main:
   280                           
   281                           	psect	maintext
   282     07D1                     __pmaintext:	
   283                           ; 1 bytes @ 0x6
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 23 in file "main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : B00/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels required when called: 2
   309 ;; This function calls:
   310 ;;		_lcd_command
   311 ;;		_lcd_initialize
   312 ;;		_lcd_string
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318     07D1                     _main:	
   319                           ;psect for function _main
   320                           
   321     07D1                     l631:	
   322                           ;incstack = 0
   323                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   324                           
   325                           
   326                           ;main.c: 24: }
   327     07D1  1683               	bsf	3,5	;RP0=1, select bank1
   328     07D2  1303               	bcf	3,6	;RP1=0, select bank1
   329     07D3  1007               	bcf	7,0	;volatile
   330                           
   331                           ;main.c: 25: 
   332     07D4  1087               	bcf	7,1	;volatile
   333                           
   334                           ;main.c: 26: void lcd_initialize() {
   335     07D5  1107               	bcf	7,2	;volatile
   336     07D6                     l633:
   337                           
   338                           ;main.c: 27:     lcd_command(0x38);
   339     07D6  0188               	clrf	8	;volatile
   340     07D7                     l635:
   341                           
   342                           ;main.c: 28:     lcd_command(0x06);
   343     07D7  120A  118A  279D  120A  118A  	fcall	_lcd_initialize
   344     07DC                     l637:
   345                           
   346                           ;main.c: 31: }
   347     07DC  3083               	movlw	131
   348     07DD  120A  118A  2773  120A  118A  	fcall	_lcd_command
   349     07E2                     l639:
   350                           
   351                           ;main.c: 32: 
   352     07E2  300A               	movlw	10
   353     07E3  00F3               	movwf	lcd_string@len
   354     07E4  300D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   355     07E5  120A  118A  27B6  120A  118A  	fcall	_lcd_string
   356     07EA                     l641:
   357                           
   358                           ;main.c: 33: void lcd_data(unsigned char data) {
   359     07EA  30C2               	movlw	194
   360     07EB  120A  118A  2773  120A  118A  	fcall	_lcd_command
   361     07F0                     l643:
   362                           
   363                           ;main.c: 34:     PORTCbits.RC2 = 1;
   364     07F0  300B               	movlw	11
   365     07F1  00F3               	movwf	lcd_string@len
   366     07F2  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   367     07F3  120A  118A  27B6  120A  118A  	fcall	_lcd_string
   368     07F8  2FDC               	goto	l637
   369     07F9  120A  118A  2800   	ljmp	start
   370     07FC                     __end_of_main:
   371                           
   372                           	psect	text1
   373     07B6                     __ptext1:	
   374 ;; *************** function _lcd_string *****************
   375 ;; Defined at:
   376 ;;		line 56 in file "main.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;  str             1    wreg     PTR const unsigned char 
   379 ;;		 -> STR_2(12), STR_1(11), 
   380 ;;  len             1    3[COMMON] unsigned char 
   381 ;; Auto vars:     Size  Location     Type
   382 ;;  str             1    4[COMMON] PTR const unsigned char 
   383 ;;		 -> STR_2(12), STR_1(11), 
   384 ;;  i               1    5[COMMON] unsigned char 
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         1       0       0       0       0
   395 ;;      Locals:         2       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0
   397 ;;      Totals:         3       0       0       0       0
   398 ;;Total ram usage:        3 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; Hardware stack levels required when called: 1
   401 ;; This function calls:
   402 ;;		_lcd_data
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408     07B6                     _lcd_string:	
   409                           ;psect for function _lcd_string
   410                           
   411                           
   412                           ;incstack = 0
   413                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   414                           ;lcd_string@str stored from wreg
   415     07B6  00F4               	movwf	lcd_string@str
   416     07B7                     l623:
   417     07B7  01F5               	clrf	lcd_string@i
   418     07B8  2FCA               	goto	l629
   419     07B9                     l625:
   420     07B9  0875               	movf	lcd_string@i,w
   421     07BA  0774               	addwf	lcd_string@str,w
   422     07BB  0084               	movwf	4
   423     07BC  120A  118A  2003  120A  118A  	fcall	stringdir
   424     07C1  120A  118A  2788  120A  118A  	fcall	_lcd_data
   425     07C6                     l627:
   426     07C6  3001               	movlw	1
   427     07C7  00FF               	movwf	btemp+1
   428     07C8  087F               	movf	btemp+1,w
   429     07C9  07F5               	addwf	lcd_string@i,f
   430     07CA                     l629:
   431     07CA  0873               	movf	lcd_string@len,w
   432     07CB  0275               	subwf	lcd_string@i,w
   433     07CC  1C03               	skipc
   434     07CD  2FCF               	goto	u21
   435     07CE  2FD0               	goto	u20
   436     07CF                     u21:
   437     07CF  2FB9               	goto	l625
   438     07D0                     u20:
   439     07D0                     l40:
   440     07D0  0008               	return
   441     07D1                     __end_of_lcd_string:
   442                           
   443                           	psect	text2
   444     0788                     __ptext2:	
   445 ;; *************** function _lcd_data *****************
   446 ;; Defined at:
   447 ;;		line 47 in file "main.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;  data            1    wreg     unsigned char 
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  data            1    2[COMMON] unsigned char 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   461 ;;      Params:         0       0       0       0       0
   462 ;;      Locals:         1       0       0       0       0
   463 ;;      Temps:          2       0       0       0       0
   464 ;;      Totals:         3       0       0       0       0
   465 ;;Total ram usage:        3 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		_lcd_string
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474     0788                     _lcd_data:	
   475                           ;psect for function _lcd_data
   476                           
   477                           
   478                           ;incstack = 0
   479                           ; Regs used in _lcd_data: [wreg]
   480                           ;lcd_data@data stored from wreg
   481     0788  00F2               	movwf	lcd_data@data
   482     0789                     l593:
   483                           
   484                           ;main.c: 48: 
   485     0789  1283               	bcf	3,5	;RP0=0, select bank0
   486     078A  1303               	bcf	3,6	;RP1=0, select bank0
   487     078B  1507               	bsf	7,2	;volatile
   488                           
   489                           ;main.c: 49: void lcd_command(unsigned char cmd) {
   490     078C  1407               	bsf	7,0	;volatile
   491                           
   492                           ;main.c: 50:     PORTCbits.RC2 = 1;
   493     078D  1087               	bcf	7,1	;volatile
   494     078E                     l595:
   495                           
   496                           ;main.c: 51:     PORTCbits.RC0 = 0;
   497     078E  0872               	movf	lcd_data@data,w
   498     078F  0088               	movwf	8	;volatile
   499                           
   500                           ;main.c: 52:     PORTCbits.RC1 = 0;
   501     0790  3021               	movlw	33
   502     0791  00F1               	movwf	??_lcd_data+1
   503     0792  3076               	movlw	118
   504     0793  00F0               	movwf	??_lcd_data
   505     0794                     u37:
   506     0794  0BF0               	decfsz	??_lcd_data,f
   507     0795  2F94               	goto	u37
   508     0796  0BF1               	decfsz	??_lcd_data+1,f
   509     0797  2F94               	goto	u37
   510     0798  0000               	nop
   511     0799                     l597:
   512                           
   513                           ;main.c: 53:     PORTD = cmd;
   514     0799  1283               	bcf	3,5	;RP0=0, select bank0
   515     079A  1303               	bcf	3,6	;RP1=0, select bank0
   516     079B  1107               	bcf	7,2	;volatile
   517     079C                     l34:
   518     079C  0008               	return
   519     079D                     __end_of_lcd_data:
   520                           
   521                           	psect	text3
   522     079D                     __ptext3:	
   523 ;; *************** function _lcd_initialize *****************
   524 ;; Defined at:
   525 ;;		line 40 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; Hardware stack levels required when called: 1
   546 ;; This function calls:
   547 ;;		_lcd_command
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553     079D                     _lcd_initialize:	
   554                           ;psect for function _lcd_initialize
   555                           
   556     079D                     l599:	
   557                           ;incstack = 0
   558                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
   559                           
   560                           
   561                           ;main.c: 41: 
   562     079D  3038               	movlw	56
   563     079E  120A  118A  2773  120A  118A  	fcall	_lcd_command
   564                           
   565                           ;main.c: 42: void lcd_string(const unsigned char *str, unsigned char len) {
   566     07A3  3006               	movlw	6
   567     07A4  120A  118A  2773  120A  118A  	fcall	_lcd_command
   568                           
   569                           ;main.c: 43:     unsigned char i;
   570     07A9  300C               	movlw	12
   571     07AA  120A  118A  2773  120A  118A  	fcall	_lcd_command
   572                           
   573                           ;main.c: 44:     for (i=0; i<len; ++i) {
   574     07AF  3001               	movlw	1
   575     07B0  120A  118A  2773  120A  118A  	fcall	_lcd_command
   576     07B5                     l31:
   577     07B5  0008               	return
   578     07B6                     __end_of_lcd_initialize:
   579                           
   580                           	psect	text4
   581     0773                     __ptext4:	
   582 ;; *************** function _lcd_command *****************
   583 ;; Defined at:
   584 ;;		line 63 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  cmd             1    wreg     unsigned char 
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  cmd             1    2[COMMON] unsigned char 
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   598 ;;      Params:         0       0       0       0       0
   599 ;;      Locals:         1       0       0       0       0
   600 ;;      Temps:          2       0       0       0       0
   601 ;;      Totals:         3       0       0       0       0
   602 ;;Total ram usage:        3 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_main
   608 ;;		_lcd_initialize
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612     0773                     _lcd_command:	
   613                           ;psect for function _lcd_command
   614                           
   615                           
   616                           ;incstack = 0
   617                           ; Regs used in _lcd_command: [wreg]
   618                           ;lcd_command@cmd stored from wreg
   619     0773  00F2               	movwf	lcd_command@cmd
   620     0774                     l587:
   621     0774  1283               	bcf	3,5	;RP0=0, select bank0
   622     0775  1303               	bcf	3,6	;RP1=0, select bank0
   623     0776  1507               	bsf	7,2	;volatile
   624     0777  1007               	bcf	7,0	;volatile
   625     0778  1087               	bcf	7,1	;volatile
   626     0779                     l589:
   627     0779  0872               	movf	lcd_command@cmd,w
   628     077A  0088               	movwf	8	;volatile
   629     077B  3021               	movlw	33
   630     077C  00F1               	movwf	??_lcd_command+1
   631     077D  3076               	movlw	118
   632     077E  00F0               	movwf	??_lcd_command
   633     077F                     u47:
   634     077F  0BF0               	decfsz	??_lcd_command,f
   635     0780  2F7F               	goto	u47
   636     0781  0BF1               	decfsz	??_lcd_command+1,f
   637     0782  2F7F               	goto	u47
   638     0783  0000               	nop
   639     0784                     l591:
   640     0784  1283               	bcf	3,5	;RP0=0, select bank0
   641     0785  1303               	bcf	3,6	;RP1=0, select bank0
   642     0786  1107               	bcf	7,2	;volatile
   643     0787                     l43:
   644     0787  0008               	return
   645     0788                     __end_of_lcd_command:
   646     007E                     btemp	set	126	;btemp
   647     007E                     wtemp0	set	126
   648                           
   649                           	psect	config
   650                           
   651                           ;Config register CONFIG @ 0x2007
   652                           ;	Oscillator Selection bits
   653                           ;	FOSC = HS, HS oscillator
   654                           ;	Watchdog Timer Enable bit
   655                           ;	WDTE = OFF, WDT disabled
   656                           ;	Power-up Timer Enable bit
   657                           ;	PWRTE = OFF, PWRT disabled
   658                           ;	Brown-out Reset Enable bit
   659                           ;	BOREN = OFF, BOR disabled
   660                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   661                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   662                           ;	Data EEPROM Memory Code Protection bit
   663                           ;	CPD = OFF, Data EEPROM code protection off
   664                           ;	Flash Program Memory Write Enable bits
   665                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   666                           ;	In-Circuit Debugger Mode bit
   667                           ;	DEBUG = 0x1, unprogrammed default
   668                           ;	Flash Program Memory Code Protection bit
   669                           ;	CP = OFF, Code protection off
   670     2007                     	org	8199
   671     2007  3FBA               	dw	16314

Data Sizes:
    Strings     23
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[11]), STR_2(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_initialize->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     353
                        _lcd_command
                     _lcd_initialize
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           3     2      1     323
                                              3 COMMON     3     2      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       0     0      0      15
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_command
   _lcd_initialize
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu May 16 10:30:55 2024

                      pc 0002             lcd_data@data 0072                       l31 07B5  
                     l40 07D0                       l34 079C                       l43 0787  
                     u20 07D0                       u21 07CF                       u37 0794  
                     u47 077F                       fsr 0004                      l623 07B7  
                    l631 07D1                      l625 07B9                      l641 07EA  
                    l633 07D6                      l627 07C6                      l643 07F0  
                    l635 07D7                      l629 07CA                      l637 07DC  
                    l591 0784                      l639 07E2                      l593 0789  
                    l587 0774                      l595 078E                      l589 0779  
                    l597 0799                      l599 079D                      fsr0 0004  
                   STR_1 0015                     STR_2 0009                     _main 07D1  
                   btemp 007E                     start 0000              lcd_string@i 0075  
                  ?_main 0070                    _PORTD 0008                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0076  
         lcd_command@cmd 0072                   _TRISC0 0438                   _TRISC1 0439  
                 _TRISC2 043A         __end_of_lcd_data 079D         ??_lcd_initialize 0073  
          lcd_string@len 0073            lcd_string@str 0074  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 07D1                ?_lcd_data 0070  
             _lcd_string 07B6               __stringtab 0003                  __ptext1 07B6  
                __ptext2 0788                  __ptext3 079D                  __ptext4 0773  
             ??_lcd_data 0070     end_of_initialization 07FC                _PORTCbits 0007  
            ?_lcd_string 0073            ??_lcd_command 0070      start_initialization 07FC  
    __end_of_lcd_command 0788                ___latbits 0002                __pstrings 0003  
            _lcd_command 0773              __stringbase 0008             ??_lcd_string 0074  
     __end_of_lcd_string 07D1       __end_of__stringtab 0009                 _lcd_data 0788  
         _lcd_initialize 079D   __end_of_lcd_initialize 07B6                stringcode 0003  
               stringdir 0003                 stringtab 0003          ?_lcd_initialize 0070  
           ?_lcd_command 0070  
